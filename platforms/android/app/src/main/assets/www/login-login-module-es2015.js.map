{"version":3,"sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: LoginComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule {}\r\n","import { Component, OnInit, NgZone,ViewChild, ElementRef } from '@angular/core';\r\nimport { LoginModule } from './login.module';\r\nimport { Router } from '@angular/router';\r\nimport { routerTransition } from '../router.animations';\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.scss'],\r\n    animations: [routerTransition()]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n    public emailValue: any;\r\n    public email: any;\r\n    public password: any;   \r\n    @ViewChild('email') emailRef: ElementRef;\r\n    public loading: boolean;\r\n\r\n    constructor(\r\n        public router: Router,\r\n        public ngZone: NgZone,\r\n        public toastr: ToastrManager\r\n    ) {\r\n        \r\n        //this.email = \"admin\"\r\n        //this.password = \"drSigNet#123\"\r\n        if (localStorage.getItem('isLoggedin')) {\r\n            this.router.navigate([\"/dashboard\"]);\r\n        }\r\n        \r\n    }\r\n\r\n    ngOnInit() {}\r\n\r\n    onLoggedin() {\r\n        this.ngZone.run(()=>{\r\n            setTimeout(()=>{\r\n                this.loading = true;\r\n            },50)\r\n        })\r\n        //this.emailValue  = this.emailRef.nativeElement.value\r\n        console.log('this.emailValue == '+this.emailValue);\r\n        console.log('this.password == '+this.password);\r\n        \r\n        if(this.email == \"admin\" && this.password == \"drSigNet#123\") {\r\n            console.log('Signed In');\r\n            localStorage.setItem('isLoggedin', 'true');\r\n            this.toastr.successToastr('Logged in successfully');\r\n            this.router.navigate([\"dashboard\"]);\r\n            this.loading = false;\r\n        }\r\n        else {\r\n            this.toastr.errorToastr('This account is not valid');\r\n            this.loading = false;\r\n        }\r\n\r\n    }\r\n   \r\n}\r\n","<div class=\"login-page\" [@routerTransition]>\r\n    <div class=\"row justify-content-md-center\">\r\n        <div class=\"col-md-4\">\r\n<!--            <img src=\"assets/images/cc-logo-white-orange-horizontal.xp.png\" width=\"150px\" class=\"user-avatar\" /> SOME CIRCLE OUTLINE JUNK -->\r\n            <img src=\"assets/images/logo_signet.png\" width=\"300px\" />\r\n            <h1>Admin Portal</h1>\r\n            <form role=\"form\">\r\n                <div class=\"form-content\">\r\n                    <div class=\"form-group\">\r\n                        <input type=\"text\" [(ngModel)]=\"email\"   name=\"email\" class=\"form-control input-underline input-lg\" id=\"email\" placeholder=\"Email\">\r\n                    </div>\r\n\r\n                    <div class=\"form-group\">\r\n                        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control input-underline input-lg\" id=\"password\" placeholder=\"Password\">\r\n                    </div>\r\n                </div>\r\n                <p>\r\n                    <a class=\"btn rounded-btn\" (click)=\"onLoggedin()\"> Log in </a>\r\n                    <!-- <a class=\"btn rounded-btn\" [routerLink]=\"['/dashboard']\" (click)=\"onLoggedin()\"> Log in </a> -->\r\n                    <!--\r\n                    &nbsp;\r\n                    <a class=\"btn rounded-btn\" [routerLink]=\"['/signup']\">Register</a>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- Pre loader -->\r\n<div class=\"my-container\">\r\n    <ngx-loading [show]=\"loading\"></ngx-loading>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { LoadingModule } from 'ngx-loading';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        LoginRoutingModule,\r\n        FormsModule,\r\n        LoadingModule\r\n    ],\r\n    declarations: [LoginComponent]\r\n})\r\nexport class LoginModule {}\r\n"],"sourceRoot":"webpack:///"}