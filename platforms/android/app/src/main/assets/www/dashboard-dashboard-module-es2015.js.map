{"version":3,"sources":["./src/app/layout/dashboard/dashboard-routing.module.ts","./src/app/layout/dashboard/dashboard.component.ts","./src/app/layout/dashboard/dashboard.component.html","./src/app/layout/dashboard/dashboard.module.ts"],"names":[],"mappings":"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","file":"dashboard-dashboard-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { DashboardComponent } from './dashboard.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: DashboardComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class DashboardRoutingModule {\r\n}\r\n","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { routerTransition } from '../../router.animations';\r\n//import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n//import { Observable } from 'rxjs';\r\nimport *  as moment from 'moment';\r\nimport { Router } from '@angular/router';\r\n//import { map } from 'rxjs/operators';\r\n// import { ChartsComponent } from '../charts/charts.component';\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.scss'],\r\n    animations: [routerTransition()]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n    public loading : boolean = true;\r\n    userId: string;       \r\n    \r\n    firstDayOfMonth:any \r\n    lastDayOfMonth:any\r\n    public totalUser: number = 0;\r\n    public openinvoice: number = 0;\r\n    public totalDist: number = 0;\r\n    public totalinvoice: number = 0;\r\n    public distCoveredByDriver = [];\r\n    public currentDate: string = new Date().toISOString().substr(8,2);\r\n    public currentMonth: string = new Date().toISOString();\r\n    // public currentMonth: string = new Date().toISOString().substr(6,1);\r\n    public currentYear: string = new Date().toISOString().substr(0,4);\r\n    \r\n    public today : Date = new Date();\r\n    public last7Days:Date = new Date(new Date().setDate(new Date().getDate() - 7));\r\n    public dateBeforeWeek = new Date(new Date().setDate(new Date().getDate() - 7)).toISOString().substr(0,10);\r\n\r\n    public beginningDayOfMonth = new Date(new Date().setDate(new Date().getDate() - 31)).toISOString().substr(0,10);\r\n\r\n    public allDates = [];\r\n    public labelDays = [];\r\n    public monthDayslabel = [];\r\n    monthDays = []\r\n    public labelStatus = [];\r\n    public orderedByDate = [];\r\n    public orderedByStatus = [];\r\n    appointmentList = []\r\n    public arrangedOrderedByDate = [];\r\n\r\n    public costArrangedOrderedByDate = [];\r\n    public totalCost:number = 0;\r\n    public totalDataByDate = [];\r\n    public totalDataByStatus = [];\r\n    public totalStatusByDate = [];\r\n    public ArrangedTotalDistanceCoveredByDate = [];\r\n\r\n    // invoice Chart\r\n    public invoiceChartType: string = 'line';\r\n    public invoiceChartLegend: boolean = false;\r\n    public invoiceChartLabels: Array<any> = [];\r\n    public invoiceChartOptions: any = {\r\n        scaleShowVerticalLines: false,\r\n        responsive: true\r\n    };\r\n    public invoiceChartData: any[] = [\r\n        { data: []}\r\n    ];\r\n    //monthList:any =[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"]\r\n    // bar chart\r\n    public barChartType: string = 'bar';\r\n    public barChartLegend: boolean = true;\r\n    public barChartLabels: Array<any> = [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sept\",\"Oct\",\"Nov\",\"Dec\"]\r\n    public barChartOptions: any = {\r\n        scaleShowVerticalLines: false,\r\n        responsive: true\r\n    };\r\n    public barChartData: any[] = [\r\n        { data: []}\r\n    ];\r\n        \r\n    // lineChart\r\n    public lineChartData: Array<any> = [\r\n        { data: [] }];\r\n    public lineChartLabels: Array<any> = [];\r\n    public lineChartOptions: any = {\r\n        responsive: true\r\n    };\r\n    public lineChartColors: Array<any> = [{\r\n        // grey\r\n        backgroundColor: 'rgba(148,159,177,0.2)',\r\n        borderColor: 'rgba(148,159,177,1)',\r\n        pointBackgroundColor: 'rgba(148,159,177,1)',\r\n        pointBorderColor: '#fff',\r\n        pointHoverBackgroundColor: '#fff',\r\n        pointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n    }];\r\n    \r\n    public invoiceChartColors: Array<any> = [{\r\n        // green\r\n        backgroundColor: 'rgba(83, 154, 125, 1)',\r\n        borderColor: 'rgba(85, 101, 138, 1)',\r\n        pointBackgroundColor: 'rgba(85, 101, 138, 1)',\r\n        pointBorderColor: '#fff',\r\n        pointHoverBackgroundColor: '#fff',\r\n        pointHoverBorderColor: 'rgba(148,159,177,0.4)'\r\n    }];\r\n\r\n    \r\n    public lineChartLegend: boolean = false;\r\n    public lineChartType: string = 'line';\r\n\r\n    constructor(\r\npublic router: Router,\r\n        public toastr: ToastrManager,\r\n        public dataService: DataAccess\r\n        \r\n    ) {\r\n\tif (!localStorage.getItem('isLoggedin')) {\r\n            this.router.navigate([\"/login\"]);\r\n        }\r\n        this.getDaysOfMonth()\r\n        this.getDaysInMonth(this.currentMonth, this.currentYear);\r\n    \r\n        // setting the month if its later than september\r\n        if((new Date().getMonth()+1)>=10) {\r\n            this.currentMonth = new Date().toISOString().substr(5,2);\r\n        }\r\n        else {\r\n            this.currentMonth = new Date().toISOString().substr(6,1);\r\n        }                        \r\n        this.invoiceChartLabels = this.monthDayslabel;                        \r\n        this.fetchAllData()\r\n\r\n    }\r\n    async fetchAllData(){\r\n        \r\n        await this.fetchDaysApointment()\r\n        await this.fetchMonthInvoices()\r\n        await this.fetchAllmonthsAppointment()\r\n\r\n        this.loading = false;\r\n    }\r\n    fetchMonthInvoices(){\r\n        try {         \r\n            \r\n            let firstDayOfMonth = moment(this.firstDayOfMonth).format('DD-MM-YYYY');\r\n            let lastDayOfMonth = moment(this.lastDayOfMonth).format('DD-MM-YYYY');\r\n           let dateRange = {fromDate:firstDayOfMonth,toDate:lastDayOfMonth,allDates:this.monthDays}\r\n\r\n         //  console.log(\"****** Date range   ===== **\"+JSON.stringify(dateRange))\r\n                    \r\n            return new Promise((resolve,reject) => {\r\n\r\n                    this.dataService.fetchMonthInvoices(dateRange).then((result:[]) => {\r\n            \r\n                        let data = result.map(element => element)\r\n\r\n                        this.invoiceChartData = [\r\n                        { data: data, label: 'Monthly Invoices' }\r\n                        ];\r\n                         console.log(\"****** invoice data   ===== **\"+JSON.stringify(data))\r\n                    \r\n                        resolve(data)                 \r\n                \r\n                    }, (err) => {\r\n                    //this.loading = false;\r\n                    resolve(err)\r\n                    console.log(err);\r\n                    });\r\n\r\n            });\r\n\r\n         \r\n           \r\n        }\r\n        catch(error) {\r\n            console.log('Error', error);\r\n        }\r\n    }\r\n    fetchDaysApointment(){\r\n        try {\r\n            \r\n            return new Promise((resolve,reject) => {\r\n               \r\n               \r\n                    \r\n                        this.dataService.fetchDaysApointment().then((result:[]) => {\r\n\r\n                            this.appointmentList = result.map(element => element)\r\n        \r\n                       // console.log(\"****** this.appointmentList   ===== **\"+JSON.stringify(this.appointmentList))\r\n                            resolve(this.appointmentList)                 \r\n                    \r\n                        }, (err) => {\r\n                            this.appointmentList = []\r\n                        //this.loading = false;\r\n                        resolve(err)\r\n                        console.log(err);\r\n                        });\r\n\r\n                \r\n\r\n              });\r\n\r\n         \r\n           \r\n        }\r\n        catch(error) {\r\n            console.log('Error', error);\r\n        }\r\n    }\r\n    fetchAllmonthsAppointment(){\r\n        try {\r\n            return new Promise((resolve,reject) => {\r\n               \r\n                setTimeout(() => {\r\n                    this.dataService.fetchAllmonthsAppointment().then((result:[]) => {\r\n            \r\n                        let data = result.map(element => element)\r\n\r\n                        this.barChartData = [\r\n                        { data: data, label: 'Monthly Appointments' }\r\n                        ];\r\n                        // console.log(\"****** this.barChartData   ===== **\"+JSON.stringify(this.barChartData))\r\n                    \r\n                        resolve(data)                 \r\n                \r\n                    }, (err) => {\r\n                    //this.loading = false;\r\n                    resolve(err)\r\n                    console.log(err);\r\n                    });\r\n                }, 500);\r\n              \r\n\r\n              });\r\n\r\n         \r\n           \r\n        }\r\n        catch(error) {\r\n            console.log('Error', error);\r\n        }\r\n    }\r\n\r\n    convertToHumanDate(dbDate){\r\n        return  moment(dbDate).format('DD-MMM-YYYY');\r\n    }\r\n    ngOnInit() {\r\n    }\r\n\r\n    getGraphValues() {\r\n       \r\n    }\r\n\r\n    basePath(basePath: any) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    \r\n    // Getting all days of the current month\r\n\r\n    getDaysOfMonth(){\r\n      \r\n        let thisday: Date = new Date(this.beginningDayOfMonth);\r\n        this.firstDayOfMonth = new Date(this.beginningDayOfMonth);\r\n        this.allDates = [];\r\n        this.labelDays = [];\r\n        let nextDay\r\n        for (let i: number = 30; i>0; i--) {\r\n            nextDay = new Date(thisday.setDate(thisday.getDate() + 1));\r\n\r\n            console.log('nextDay.toISOString() == ', nextDay.toISOString());\r\n            console.log('nextDay.toISOString() .substr(0,10) == ', nextDay.toISOString().substr(0,10));\r\n\r\n            //this.monthDayslabel.push(nextDay.toISOString().substr(0,10));\r\n            this.monthDayslabel.push(moment(nextDay).format(\"DD-MM-YY\"));\r\n            this.monthDays.push(moment(nextDay).format(\"DD-MM-YYYY\"));\r\n            \r\n            this.lastDayOfMonth = nextDay    \r\n        }\r\n        \r\n        return this.monthDayslabel;\r\n    }\r\n    getDaysInMonth(month, year) {\r\n        let thisday: Date = new Date(this.dateBeforeWeek);\r\n        this.allDates = [];\r\n        this.labelDays = [];\r\n        for (let i: number = 7; i>0; i--) {\r\n            let nextDay = new Date(thisday.setDate(thisday.getDate() + 1));\r\n\r\n            console.log('nextDay.toISOString() == ', nextDay.toISOString());\r\n            console.log('nextDay.toISOString() .substr(0,10) == ', nextDay.toISOString().substr(0,10));\r\n\r\n            this.labelDays.push(nextDay.toISOString().substr(0,10));\r\n            this.allDates.push({\r\n                date: nextDay.toISOString().substr(0,10)\r\n            });\r\n        }\r\n        return this.labelDays;\r\n    }\r\n    // Reduce the array by dates\r\n    reduceByDate(objectArray, property, val1, val2, val3) {\r\n        return objectArray.reduce((acc, obj)=> {\r\n            let key = obj[property];\r\n            if (!acc[key]) {\r\n                acc[key] = [];\r\n                acc[key].push(obj);\r\n            }\r\n            else {\r\n                obj[val1] = obj[val1]+parseFloat(acc[key][0][val1]);\r\n                obj[val2] = obj[val2]+parseFloat(acc[key][0][val2]);\r\n                obj[val3] = obj[val3]+parseFloat(acc[key][0][val3]);\r\n                acc[key][0] = obj;\r\n            }\r\n            this.orderedByDate = acc;\r\n            // this.distCoveredByDriver = acc;\r\n            return acc;\r\n        }, {});\r\n    }\r\n\r\n    // Formated data\r\n    formatedData(orderedByDate) {\r\n        let arrangedOrderedByDate = [];\r\n        for (let property in orderedByDate) {\r\n            arrangedOrderedByDate.push(orderedByDate[property][0]);\r\n        }\r\n        this.arrangedOrderedByDate = arrangedOrderedByDate;\r\n        return arrangedOrderedByDate;\r\n    }\r\n\r\n    getAllDatesRecord(dates, completedRidesDate) {\r\n        this.totalDist = 0;\r\n        this.totalCost = 0;\r\n        this.totalinvoice = 0;\r\n        for (let i = 0; i < dates.length; i++) {\r\n            dates[i].distanceCovered = 0;\r\n            dates[i].cost = 0;\r\n            dates[i].invoice = 0;\r\n            for (let j = 0; j < completedRidesDate.length; j++) {\r\n                if (dates[i].date == completedRidesDate[j].date) {\r\n                    dates[i].distanceCovered = completedRidesDate[j].distanceCovered;\r\n                    dates[i].cost = completedRidesDate[j].cost;\r\n                    dates[i].invoice = completedRidesDate[j].invoice;\r\n                }\r\n            }\r\n            this.totalDataByDate = dates;\r\n            this.totalDist += dates[i].distanceCovered;\r\n            this.totalCost += dates[i].cost;\r\n            this.totalinvoice += dates[i].invoice;\r\n        }\r\n        this.totalDist = parseFloat(this.totalDist.toFixed(2));\r\n        return dates;\r\n    }\r\n\r\n    getValuesForAllDates(getAllDatesRecord, value) {\r\n        let valuesForAllDates = [];\r\n        for(let i=0; i<getAllDatesRecord.length; i++) {\r\n            valuesForAllDates.push(getAllDatesRecord[i][value])\r\n        }\r\n        return valuesForAllDates;\r\n    }\r\n    \r\n    // /////////\r\n    reduceStatusByDate(objectArray, property) {\r\n        return objectArray.reduce((acc, obj)=> {\r\n            let key = obj[property];\r\n            let count = 1;\r\n            if (!acc[key]) {\r\n                acc[key] = [];\r\n                obj.count = 1\r\n                acc[key].push(obj);\r\n            }\r\n            else {\r\n                obj.count = count+1;\r\n                acc[key][0] = obj;\r\n            }\r\n            this.orderedByStatus = acc;\r\n            return acc;\r\n        }, {});\r\n    }\r\n    \r\n    getAllStatusRecord(statusList, rides) {\r\n        for (let i = 0; i < statusList.length; i++) {\r\n            statusList[i].count = 0;\r\n            for (let j = 0; j < rides.length; j++) {\r\n                if (statusList[i].status == rides[j].status) {\r\n                    statusList[i].count = rides[j].count;\r\n                }\r\n            }\r\n            this.totalDataByStatus = statusList;\r\n        }\r\n        return statusList;\r\n    }\r\n\r\n    getStatusKey(value) {\r\n        var finalVal;\r\n        \r\n        return finalVal;\r\n    }\r\n\r\n    \r\n    convertStatusLabel(labelStatus) {\r\n        var finalVal;\r\n        \r\n    }\r\n\r\n   \r\n\r\n    getTotalUsers() {\r\n        let count: number = 0;\r\n       \r\n    }\r\n\r\n    getTodaysOpenRides() {\r\n        let count: number = 0;\r\n        let current = this.today.toISOString().substr(0,10);\r\n       \r\n    }\r\n}","<div [@routerTransition]>\r\n    \r\n    <br />\r\n    <div class=\"row\">      \r\n      <div class=\"col col-xl-6 col-lg-6\">\r\n        <h6><b>Total appointments each month</b></h6>\r\n        <div>\r\n          <canvas baseChart [datasets]=\"barChartData\" [labels]=\"barChartLabels\" [colors]=\"invoiceChartColors\" [options]=\"barChartOptions\" [legend]=\"barChartLegend\" [chartType]=\"barChartType\">\r\n          </canvas>\r\n        </div>\r\n      </div>\r\n      <div class=\"col col-xl-6 col-lg-6\">\r\n        <h6><b>Invoices in a month</b></h6>\r\n        <div>\r\n          <canvas baseChart [datasets]=\"invoiceChartData\" [labels]=\"invoiceChartLabels\" [options]=\"invoiceChartOptions\" [legend]=\"invoiceChartLegend\" [colors]=\"invoiceChartColors\" [chartType]=\"invoiceChartType\">\r\n          </canvas>\r\n        </div>\r\n      </div>      \r\n      \r\n      <div class=\"col-md-12\">\r\n        <div class=\"card mb-3\">\r\n            <div class=\"card-header custom_text\">\r\n              Today's Appointments\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col col-md-12\">\r\n                  <div class=\"table-responsive\">\r\n                    <table class=\"table\">\r\n                      <thead>\r\n                      <tr>\r\n                        <th>Location</th>\r\n                        <th>Patient Name</th>                        \r\n                        <th>Appointment Status</th>\r\n                        <th>Appointment Date</th>                        \r\n                        <th>Appointment Time</th>                        \r\n                      </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr *ngFor=\"let appointment of appointmentList; let i = index\">\r\n                          <td><b>City :</b>{{appointment?.location?.city}}<br>\r\n                            <b>Area :</b>{{appointment?.location?.area}}<br>\r\n                            <b>Address :</b>{{appointment?.location?.address}}<br></td>\r\n                          \r\n                          <td>{{appointment?.patient?.name}}</td>\r\n                          <td>{{appointment?.status}}</td>\r\n                          <td >{{convertToHumanDate(appointment.appointmentDate)}}</td>\r\n                          \r\n                          <td>{{appointment?.appointmentTime}}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                      <tbody *ngIf=\"(appointmentList && appointmentList.length==0)\">\r\n                        <tr>\r\n                          <td colspan=\"7\" align = \"center\">No record available</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              <br />\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- Pre loader -->\r\n  <div class=\"my-container\">\r\n    <ngx-loading [show]=\"loading\"></ngx-loading>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { PageHeaderModule } from './../../shared';\r\nimport { ChartsModule as Ng2Charts } from 'ng2-charts';\r\nimport { LoadingModule } from 'ngx-loading';\r\n\r\nimport { RptModule } from '../../shared';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        DashboardRoutingModule,\r\n        PageHeaderModule,\r\n        RptModule,\r\n        Ng2Charts,\r\n        LoadingModule,\r\n        FormsModule,\r\n    ],\r\n    declarations: [\r\n        DashboardComponent,\r\n    ]\r\n})\r\nexport class DashboardModule {}\r\n"],"sourceRoot":"webpack:///"}