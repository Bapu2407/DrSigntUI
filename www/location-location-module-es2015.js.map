{"version":3,"sources":["./src/app/layout/location/location-routing.module.ts","./src/app/layout/location/location.component.ts","./src/app/layout/location/location.component.html","./src/app/layout/location/location.module.ts"],"names":[],"mappings":"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","file":"location-location-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LocationComponent } from './location.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: LocationComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LocationRoutingModule { }\r\n","import { Component, OnInit, NgZone, ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport *  as moment from 'moment';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\nimport { Config } from '../../config';\r\n\r\n\r\nimport { BaseComponent } from 'src/BaseComponent';\r\nimport { FormBuilder, FormGroup, FormControl, Validators,FormArray } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\n@Component({\r\n  selector: 'app-location',\r\n  templateUrl: './location.component.html',\r\n  styleUrls: ['./location.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class LocationComponent extends BaseComponent implements OnInit {\r\n\r\n  @ViewChild('fileInputDemoPhoto') fileInputDemoPhoto :ElementRef;;\r\n  public loading:boolean = true;\r\n  public closeResult: string;\r\n  patientList:any = []\r\n  states = Config.states\r\n  locationList:any = []\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  @ViewChild('acc') accordionComponent: NgbAccordion;\r\n  public userKind:string=\"location\"\r\n  normalFiltereduserListArr:any = [];\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('locationFormModal') locationFormModal: TemplateRef<any>;\r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  locationFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  customLocationtime : {\r\n    hour: 10,\r\n    minute: 20,\r\n\r\n};\r\nkeywordDoctor = \"name\"\r\n  locationObject =  \r\n  {    \r\n    active : true,   \r\n    doctorID : \"\", \r\n    dateTime : [ \r\n      {\r\n          date : \"25-03-2020\",\r\n          time : \"05:30 am\"\r\n      }\r\n    ],    \r\n    addByID : this.user['_id'],\r\n    name : \"\",\r\n    area : \"\",\r\n    address : \"\",\r\n    city : \"\",\r\n    attendantID : \"\",\r\n    state : \"\",\r\n    nearByLocation : \"\",\r\n    latitude : 22.604298,\r\n    longitude : 88.421425,    \r\n    slot : 3\r\n  }\r\n  doctorList:any  = []\r\n  attendantList:any = []\r\n  locationObjectBase =  \r\n  {    \r\n    active : true,   \r\n    doctorID : \"\", \r\n    dateTime : [ \r\n      {\r\n          date : \"25-03-2020\",\r\n          time : \"05:30 am\"\r\n      }\r\n    ],    \r\n    addByID : this.user['_id'],\r\n    name : \"\",\r\n    area : \"\",\r\n    address : \"\",\r\n    city : \"\",\r\n    attendantID : \"\",\r\n    state : \"\",\r\n    nearByLocation : \"\",\r\n    latitude : 22.604298,\r\n    longitude : 88.421425,    \r\n    slot : 3\r\n  }\r\n  doctorName:any\r\n  dateTimeitems: FormArray;\r\n  openingMeridian : boolean = true;\r\n\r\n  constructor(\r\n    private datePipe : DatePipe,\r\n    public router: Router,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess,\r\n    \r\n    \r\n  ) {\r\n    super(router)\r\n  //  this.customLocationtime.hour = 9\r\n   // this.customLocationtime.minute = 10\r\n\r\n    if(!this.user.role.doctor.location.view){\r\n      return\r\n    }\r\n   \r\n    this.locationFormGroup = _fb.group({\r\n      doctorID: new FormControl(this.locationObject.doctorID, Validators.required),\r\n      doctorName: new FormControl(''),\r\n      attendantID: new FormControl(this.locationObject.attendantID, Validators.required),\r\n      name: new FormControl(this.locationObject.name, Validators.required),\r\n      city: new FormControl(this.locationObject.city, Validators.required),\r\n      area: new FormControl(this.locationObject.area),\r\n      nearByLocation: new FormControl(this.locationObject.nearByLocation),\r\n      address: new FormControl(this.locationObject.address, Validators.required),\r\n      state: new FormControl(this.locationObject.state, Validators.required),\r\n      slot: new FormControl(this.locationObject.slot)  ,    \r\n      dateTimeitems: this._fb.array([ this.createdateTimeItem() ])\r\n    });\r\n\r\n    //this.locationFormGroup.valueChanges.subscribe(data => console.log('form changes', data));\r\n    this.loading = false;    \r\n    this.fetchLocations()   \r\n    \r\n  }\r\n  createdateTimeItem(): FormGroup {\r\n    return this._fb.group({\r\n      date: '',\r\n      time: ''\r\n    });\r\n  }\r\n/*\r\n  ngAfterViewInit(){\r\n    this.dataService.fetchAllPatients().then((result:[]) => {\r\n      this.patientList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n\r\n   \r\n  }\r\n  */\r\n  getLocation(){\r\n\r\n  }\r\n  addItem(): void {\r\n    this.dateTimeitems = this.locationFormGroup.get('dateTimeitems') as FormArray;\r\n    this.dateTimeitems.push(this.createdateTimeItem());\r\n  }\r\n\r\n  getControls() {\r\n    return (this.locationFormGroup.get('dateTimeitems') as FormArray).controls;\r\n  }\r\n\r\n  removeItem(i){\r\n\r\n     this.dateTimeitems = this.locationFormGroup.get('dateTimeitems') as FormArray;\r\n    this.dateTimeitems.removeAt(i)  \r\n\r\n  }\r\n\r\n  doctorSelectEvent(item) {\r\n    if(item){\r\n    this.locationFormGroup.get('doctorID').patchValue(item['_id']);\r\n    this.locationObject.doctorID = item['_id']\r\n\r\n    this.dataService.fetchAttendantList({doctorID:this.locationObject.doctorID}).then((result:[]) => {\r\n      this.attendantList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n\r\n    //console.log(\" inside locationSelectEvent \"+JSON.stringify(item))\r\n    }\r\n    // do something with selected item\r\n  }\r\n \r\n  doctorLocationSearch(val: string) {\r\n    //console.log(\" inside onChangePatientSearch val \"+val)\r\n   // if(val && val.length >2 ){\r\n    let data = {name:val}\r\n    this.dataService.fetchAllDoctors(data).then((result:[]) => {\r\n      this.doctorList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n   // }\r\n  }\r\n  openAddLocationDialog(){\r\n    this.mode = \"add\"\r\n    this.locationFormGroup = this._fb.group({\r\n      doctorID: new FormControl(this.locationObject.doctorID, Validators.required),\r\n      doctorName: new FormControl(''),\r\n      attendantID: new FormControl(this.locationObject.attendantID, Validators.required),\r\n      name: new FormControl(this.locationObject.name, Validators.required),\r\n      city: new FormControl(this.locationObject.city, Validators.required),\r\n      area: new FormControl(this.locationObject.area),\r\n      nearByLocation: new FormControl(this.locationObject.nearByLocation),\r\n      address: new FormControl(this.locationObject.address, Validators.required),\r\n      state: new FormControl(this.locationObject.state, Validators.required),\r\n      slot: new FormControl(this.locationObject.slot)  ,    \r\n      dateTimeitems: this._fb.array([ this.createdateTimeItem() ])\r\n    });\r\n    this.dateTimeitems = this.locationFormGroup.get('dateTimeitems') as FormArray;\r\n   // \r\n    //this.dateTimeitems.push({})\r\n    this.locationObject = Object.assign({}, this.locationObjectBase); \r\n    this.modalReference = this.modal.open(this.locationFormModal);\r\n  }\r\n  getPatient(){\r\n\r\n  }\r\n \r\n  ngOnInit(){\r\n\r\n\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n\r\n  \r\n\r\n    //this.pageSize = Config.RECORDSIZE;\r\n    //this.pageNo = 1\r\n    this.fetchLocationsCount()  \r\n    this.fetchLocations()    \r\n    \r\n //   this.items = Array(150).fill(0).map((x, i) => ({ id: (i + 1), name: `Item ${i + 1}`})\r\n  };\r\n  save(){\r\n//alert(\"mode: \"+this.mode)\r\n   \r\n\r\n    if(!this.locationFormGroup.valid){\r\n        this.submitAttempt = true;        \r\n        this.validateFields(this.locationFormGroup.controls)                   \r\n        return; \r\n    } \r\n\r\n    this.locationObject.addByID = this.user['_id']\r\n\r\n   let dateTime = []\r\n    for(var i = 0 ; i< this.dateTimeitems.length ; i++){      \r\n      let formObject = this.dateTimeitems.at(i)      \r\n\r\n       // if(formObject && formObject.get('time').value != undefined && formObject.get('date').value != undefined ){\r\n            \r\n            console.log(\"time before conversion**\"+JSON.stringify(formObject.get('time').value)) \r\n            let time = this.convertTimeFormogo(formObject.get('time').value)\r\n            console.log(\"time after conversion **\"+time) \r\n\r\n            console.log(\" date before conversion **\"+JSON.stringify(formObject.get('date').value)) \r\n\r\n          let convertDate = this.fromJsDateToLocationdateTimeFormat(formObject.get('date').value)\r\n          console.log(\"convertDate **\"+convertDate)             \r\n          dateTime.push({date:convertDate,time:time})\r\n       // }\r\n   \r\n  }\r\n\r\n    this.locationObject.dateTime = dateTime\r\n    if(this.mode == \"add\"){\r\n      delete this.locationObject['doctor']\r\n      console.log(\"this.locationObject for add == \"+JSON.stringify(this.locationObject))\r\n      this.dataService.addLocation(this.locationObject).then((result) => {                \r\n        //  console.log(\"result after adduser == \"+JSON.stringify(result))\r\n          this.fetchLocations()\r\n          this.mode = \"add\"\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('New location is added successfully');\r\n          \r\n      }, (err) => {        \r\n      console.log(err);\r\n      });\r\n      \r\n    }if(this.mode == \"edit\"){\r\n      //delete this.locationObject['patient']\r\n      delete this.locationObject['doctor']\r\n      this.locationObject['practiceLocationId'] = this.locationObject['_id']\r\n      console.log(\"this.locationObject for edit == \"+JSON.stringify(this.locationObject))\r\n      this.dataService.updateLocation(this.locationObject).then((result) => {\r\n        //  console.log(\"****** updatelocation result   ===== **\"+JSON.stringify(result))\r\n          //this.loading = false;\r\n          this.mode = \"add\"   \r\n          this.fetchLocations()\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('location is updated successfully'); \r\n      }, (err) => {\r\n        this.mode = \"add\"\r\n        //this.loading = false;\r\n        console.log(err);\r\n      });\r\n      \r\n    }\r\n    \r\n}\r\nasync openForeditLocation(user){\r\n\r\n  \r\n  this.locationObject = Object.assign({}, user); \r\n\r\n  //console.log(\"dateTimeArray LENGTH **\"+dateTimeArray.length)\r\n\r\n\r\n  this.locationFormGroup = this._fb.group({\r\n    doctorID: new FormControl(this.locationObject.doctorID, Validators.required),\r\n    doctorName: new FormControl(''),\r\n    attendantID: new FormControl(this.locationObject.attendantID, Validators.required),\r\n    name: new FormControl(this.locationObject.name, Validators.required),\r\n    city: new FormControl(this.locationObject.city, Validators.required),\r\n    area: new FormControl(this.locationObject.area),\r\n    nearByLocation: new FormControl(this.locationObject.nearByLocation),\r\n    address: new FormControl(this.locationObject.address, Validators.required),\r\n    state: new FormControl(this.locationObject.state, Validators.required),\r\n    slot: new FormControl(this.locationObject.slot)  ,    \r\n    dateTimeitems: this._fb.array([ this.createdateTimeItem() ])\r\n  });\r\n\r\n\r\n  console.log(\"this.locationObject ==\"+JSON.stringify(this.locationObject))\r\n  let dateTimeArray = []\r\n  this.dateTimeitems = this.locationFormGroup.get('dateTimeitems') as FormArray;\r\n    this.dateTimeitems.removeAt(0)  \r\n  for(var i in this.locationObject.dateTime){\r\n      let dateTime = this.locationObject.dateTime[i]\r\n      let time = this.backTONgTImeFOrmat(dateTime.time)\r\n      console.log(\"time **\"+JSON.stringify(time)) \r\n      let convertDate = this.convertFromddmmyyy(dateTime.date)\r\n      console.log(\"convertDate **\"+convertDate) \r\n      let date = this.datePipe.transform( convertDate, 'yyyy-MM-dd')\r\n      dateTimeArray.push({date:date,time:time})\r\n    //this.dateTimeitems.push({date:date,time:time})\r\n    \r\n    this.dateTimeitems.push(this._fb.group({\r\n      date: date,\r\n      time: time\r\n    }))\r\n  }\r\n\r\n  console.log(\"dateTimeArray LENGTH **\"+dateTimeArray.length)\r\n  let earlierAttendent = this.locationObject.attendantID\r\n  this.doctorName = await this.fetchDoctrById(this.locationObject.doctorID)\r\n\r\n  this.dataService.fetchAttendantList({doctorID:this.locationObject.doctorID}).then((result:[]) => {\r\n    this.attendantList = result.map(element => element)\r\n  }, (err) => {\r\n      //console.log(err);\r\n  });\r\n\r\n  //this.locationObject.attendantID = earlierAttendent\r\n\r\n  //this.locationFormGroup.get('dateTimeitems').patchValue(dateTimeArray)\r\n  //addItem\r\n\r\n  this.mode = \"edit\"\r\n  this.modalReference = this.modal.open(this.locationFormModal);\r\n\r\n  //this.userObject.userId = user._id\r\n  //this.role = user.role\r\n\r\n  \r\n  \r\n}\r\nfetchDoctrById(doctorId){\r\n  let data = {doctorId:doctorId}\r\n  try {      \r\n      return new Promise((resolve) => {    \r\n            this.dataService.fetchDoctrById(data).then((result) => {\r\n              \r\n            //console.log(\"****** location  ===== **\"+JSON.stringify(result))\r\n                resolve(result['name'])                 \r\n        \r\n            }, (err) => {\r\n              resolve('')                 \r\n            //this.loading = false;\r\n            \r\n            //console.log(err);\r\n            });\r\n        });\r\n  }\r\n  catch(error) {\r\n      //console.log('Error', error);\r\n  }\r\n}\r\n  pageChanged(event){\r\n    console.log(\"****** this.event   ===== **\"+event)\r\n    this.pageNo = event\r\n    this.applyFilter()\r\n  }\r\n  userKindChange(){\r\n    this.pageNo = 1\r\n    \r\n    this.applyFilter()\r\n  }\r\n  applyFilter() {\r\n      \r\n      this.fetchLocations()\r\n    \r\n    \r\n  }\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n  fetchPatients(){\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    this.dataService.fetchPatients(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = [];      \r\n      this.normalFiltereduserListArr = result.map(element => element)\r\n     // console.log(\"****** this.normalFiltereduserListArr   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n  \r\n\r\n\r\n  fetchLocationsCount(){\r\n  //  this.pageNo = 1\r\n  //  this.pageSize = 10\r\n    this.dataService.fetchLocationsCount().then((result) => {\r\n        \r\n        console.log(\"****** fetchlocationsCount result   ===== **\"+JSON.stringify(result))\r\n      this.totalDocRecords = result;\r\n      console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n \r\n\r\n  fetchLocations(){\r\n  //  this.pageNo = 1\r\n    //this.pageSize = 10\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    this.dataService.fetchLocations(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = [];  \r\n        this.normalFiltereduserListArr = result.map(element => element)\r\n        //console.log(\"****** this.fetchLocations   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n        this.normalFiltereduserListArr.forEach(function(location, index){\r\n          console.log(\"****** active   ===== **\"+ location.active)\r\n        })\r\n        \r\n        this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n  \r\n  updateStatus(value, userInfo) {\r\n   // userInfo.active = value\r\n  //  console.log(\"****** userInfo   ===== **\"+JSON.stringify(userInfo))\r\n  let data ={}\r\n  userInfo.active = !userInfo.active\r\n  console.log(\"******  userInfo.active   ===== **\"+userInfo.active )\r\n    \r\n      userInfo.locationId = userInfo._id\r\n      data['locationId'] = userInfo._id\r\n      data['active'] = userInfo.active\r\n      console.log(\"****** userInfo   ===== **\"+JSON.stringify(data))\r\n\r\n          this.dataService.updateLocation(data).then((result) => {\r\n          //  console.log(\"****** updatelocation result   ===== **\"+JSON.stringify(result))\r\n          this.fetchLocations()\r\n            this.loading = false;\r\n      \r\n        }, (err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    \r\n    this.toastr.successToastr('Location record updated successfully');\r\n  }\r\n\r\n  \r\n}\r\n","<div>\r\n  <app-page-header [heading]=\"'Practice Location'\" [icon]=\"'fa-user'\"></app-page-header>\r\n</div>\r\n\r\n  <div class=\"col-md-12\" >\r\n      \r\n          <!--div class=\"card-header\">\r\n              User type\r\n          </div-->\r\n          \r\n          \r\n                \r\n                <div class=\"col-md-12 text-right \" *ngIf=\"user.role.doctor.location.create\">                      \r\n                  <div class=\"content\">\r\n                    <button type=\"button\" class=\"btn btn-dark\" (click)=\"openAddLocationDialog()\">Add Practice Location</button>\r\n                  </div>\r\n              </div>\r\n             \r\n          \r\n          \r\n\r\n      <div class=\"card-body table-responsive marginLeft\"> <span class=\"pb-3 \"><b> List of existing {{userKind}}s </b>  </span>\r\n        <table class=\"table table-striped table-bordered table-sm\">\r\n          <thead>\r\n          <tr>\r\n            <th>Location Details</th>\r\n              <th>Doctor Name</th>\r\n              <th>AttendantID</th>\r\n              <th>Near By Location</th>            \r\n              <th>Slot</th>      \r\n              \r\n              <th *ngIf=\"user.role.doctor.location.edit\">Enable/Disable</th>\r\n              \r\n              <th>Created Date</th>\r\n              <th *ngIf=\"user.role.doctor.location.edit\">Edit</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tbody *ngIf=\"normalFiltereduserListArr && normalFiltereduserListArr.length>0\">\r\n            \r\n              <tr *ngFor=\"let obj of normalFiltereduserListArr | paginate: { id:'forlocation1', itemsPerPage: pageSize, currentPage: pageNo, totalItems: totalDocRecords }\">              \r\n                <td>\r\n                            \r\n                  <table  class='table borderless'><tr><td class=\"customdiv\"><b>Address</b></td><td>{{obj?.address}}</td></tr>\r\n\r\n                    <tr><td class=\"customdiv\"><b>Area</b></td><td>{{obj?.area}}</td></tr>\r\n\r\n                    <tr><td class=\"customdiv\"><b>City</b></td><td>{{obj?.city}}</td></tr>\r\n                    <tr><td class=\"customdiv\"><b>State</b></td><td>{{obj?.state}}</td></tr>\r\n                  \r\n                  </table>      \r\n\r\n                </td>\r\n                  <td>{{obj?.doctor?.name}}</td>                  \r\n              <td>{{obj?.attendantID}}</td>              \r\n              <td>{{obj?.nearByLocation}}</td>\r\n              <td>{{obj?.slot}}</td>\r\n              <!--td *ngIf=\"user.role.doctor.location.edit\"> \r\n                <span  *ngIf=\"obj.active\">Enabled</span>\r\n                <span *ngIf=\"!obj.active\">Disabled</span>\r\n            </td-->\r\n              <td *ngIf=\"user.role.doctor.location.edit\">               \r\n                <ui-switch [(ngModel)]=\"obj.active\" (change)=\"updateStatus($event, obj)\"></ui-switch>\r\n                    \r\n              </td>              \r\n<td >{{convertToHumanDate(obj.createdDate)}}</td>\r\n\r\n<td *ngIf=\"user.role.doctor.location.edit\" ><button class=\"btn btn-dark\" (click)=\"openForeditLocation(obj)\"> Edit </button></td>    \r\n\r\n            </tr>\r\n          </tbody>\r\n          <div class=\"col-md-12 text-left clearfix \">\r\n          <pagination-controls class=\"my-pagination marginLeft\"  id=\"forlocation1\" \r\n               (pageChange)=\"pageChanged($event)\"\r\n                      (pageBoundsCorrection)=\"pageChanged($event)\"                      \r\n                      directionLinks=\"true\"               maxSize=\"9\"\r\n                      directionLinks=\"true\"\r\n                      autoHide=\"true\"\r\n                      responsive=\"true\"\r\n                      previousLabel=\"Prev\"\r\n                      nextLabel=\"Next\"\r\n                      screenReaderPaginationLabel=\"Pagination\"\r\n                      screenReaderPageLabel=\"page\"\r\n                      screenReaderCurrentLabel=\"You're on page\"></pagination-controls >\r\n          </div>\r\n          <tbody *ngIf=\"(normalFiltereduserListArr && normalFiltereduserListArr.length==0)\">\r\n              <tr>\r\n                <td colspan=\"7\" align = \"center\">No record available</td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n\r\n\r\n\r\n      <ng-template #locationFormModal let-close=\"close\">\r\n        <form [formGroup]=\"locationFormGroup\" class=\"custom_timebox p-0\">\r\n            <div class=\"modal-header py-1\">\r\n                    <h4 class=\"modal-title headerTitle mb-0\">Add Location</h4>\r\n                    <button type=\"button\" class=\"close\" (click)=\"closeModal();\">×</button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12 form-group\">\r\n                      <label for=\"name\" class=\"labelTitles\"><b>Name</b></label><span class=\"required-asterisk\">*</span>\r\n                  </div>\r\n                  <div class=\"col-md-12 marginTop\">\r\n                      <input class=\"form-control labelValue\" [(ngModel)]=\"locationObject.name\"  formControlName=\"name\" placeholder=\"Enter name\">\r\n                  </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 form-group\">\r\n                    <label for=\"name\" class=\"labelTitles\"><b>City</b></label><span class=\"required-asterisk\">*</span>\r\n                </div>\r\n                <div class=\"col-md-12 marginTop\">\r\n                    <input class=\"form-control labelValue\" [(ngModel)]=\"locationObject.city\"  formControlName=\"city\" placeholder=\"Enter city\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 form-group\">\r\n                  <label for=\"name\" class=\"labelTitles\"><b>Area</b></label><span class=\"required-asterisk\">*</span>\r\n              </div>\r\n              <div class=\"col-md-12 marginTop\">\r\n                  <input class=\"form-control labelValue\" [(ngModel)]=\"locationObject.area\"  formControlName=\"area\" placeholder=\"Enter Area\">\r\n              </div>\r\n          </div>\r\n\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 form-group\">\r\n                  <label for=\"name\" class=\"labelTitles\"><b>Address</b></label><span class=\"required-asterisk\">*</span>\r\n              </div>\r\n              <div class=\"col-md-12 marginTop\">\r\n                <textarea class=\"form-control\" [(ngModel)]=\"locationObject.address\"  formControlName=\"address\"  rows=\"3\"></textarea>\r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 form-group\">\r\n                <label for=\"name\" class=\"labelTitles\"><b>Near By Location</b></label><span class=\"required-asterisk\">*</span>\r\n            </div>\r\n            <div class=\"col-md-12 marginTop\">\r\n                <input class=\"form-control labelValue\" [(ngModel)]=\"locationObject.nearByLocation\"  formControlName=\"nearByLocation\" placeholder=\"Enter NearByLocation\">\r\n            </div>\r\n        </div>\r\n\r\n        <div formArrayName=\"dateTimeitems\"\r\n            *ngFor=\"let item of getControls(); let i = index;\">\r\n\r\n                    <div [formGroupName]=\"i\">\r\n                      <div class=\"divider mt-3\"></div>\r\n                      <div class=\"row \">\r\n                        <div class=\"col-md-12 form-group\">\r\n                            <label class=\"labelTitles\"><b>Date</b></label>\r\n                        </div>\r\n                        <!--pattern=\"\\d{1,2}/\\d{1,2}/\\d{4}\"-->\r\n                        <div class=\"col-md-12 marginTop\">\r\n                                <input type=\"date\"   class=\"form-control\" formControlName=\"date\"\r\n                                placeholder=\"Enter date\">\r\n                                \r\n                        </div>\r\n                  </div>\r\n\r\n                  <div class=\"row \">\r\n                    <div class=\"col-md-12 form-group\">\r\n                    <label class=\"labelValue\"><b>Time</b></label>\r\n                    <ngb-timepicker formControlName=\"time\" [meridian]=\"openingMeridian\">\r\n                    </ngb-timepicker>\r\n                    \r\n                  </div>\r\n                  \r\n                </div>\r\n\r\n          <div class=\"row text-right ml-2\">\r\n          <button class=\"btn btn-dark\" (click)=\"removeItem(i)\"> Remove Datetime </button>\r\n          </div>\r\n  </div>\r\n\r\n  <!--Chosen name: {{ orderForm.controls.items.controls[i].controls.name.value }} -->\r\n</div>\r\n\r\n<div class=\"col-md-12 text-right mt-4\">\r\n  <button class=\"btn btn-dark\" (click)=\"addItem()\"> Add Datetime </button>\r\n  </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12\">\r\n                      <div class=\"form-group\">\r\n                          <label class=\"labelTitles\">State </label>\r\n                          <select formControlName=\"state\" [(ngModel)]=\"locationObject.state\" class=\"form-control\" name=\"state\"       >\r\n                            \r\n                              <option *ngFor=\"let state of states\" value=\"{{state}}\" class=\"labelValue\">{{state}}</option>\r\n                          </select>\r\n                         \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"labelTitles\">Select Doctor </label><span class=\"required-asterisk\">*</span>\r\n                  \r\n  \r\n                        <ng-autocomplete \r\n                        [data]=\"doctorList\"\r\n                        [(ngModel)] = \"doctorName\"\r\n                        formControlName=\"doctorName\"\r\n                        [searchKeyword]=\"keywordDoctor\"\r\n                        (selected)='doctorSelectEvent($event)'\r\n                        (inputChanged)='doctorLocationSearch($event)'\r\n                        \r\n                        [itemTemplate]=\"itemTemplate\"\r\n                        [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n                      </ng-autocomplete>\r\n                   \r\n                      \r\n                      <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n                        <a [innerHTML]=\"item.name\"></a>\r\n                        </ng-template>\r\n                        <ng-template #notFoundTemplate let-notFound>\r\n                        <div [innerHTML]=\"notFound\"></div>\r\n                        </ng-template>\r\n                        \r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"labelTitles\">Select Attendant </label>\r\n                        <select formControlName=\"attendantID\"  [(ngModel)]=\"locationObject.attendantID\"  class=\"form-control\" name=\"attendant\"\r\n                            >\r\n                           \r\n                            <option *ngFor=\"let attendant of attendantList\" value=\"{{attendant}}\" class=\"labelValue\">{{attendant}}</option>\r\n                        </select>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n                \r\n            <div class=\"row\">\r\n            <div class=\"col-md-12 form-group\">\r\n                <label for=\"name\" class=\"labelTitles\"><b>Slot</b></label>\r\n            </div>\r\n            <div class=\"col-md-12 marginTop\">\r\n                <input class=\"form-control labelValue\" [(ngModel)]=\"locationObject.slot\"  formControlName=\"slot\" placeholder=\"Enter slot\">\r\n            </div>\r\n        </div>\r\n\r\n         \r\n\r\n             </div>\r\n             <div class=\"modal-footer\">\r\n                <button [disabled]=\"!locationFormGroup.valid\" type=\"button\" class=\"btn btn-primary m-10\"\r\n                    (click)=\"save();\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"closeModal();\">Cancel</button>\r\n            </div>\r\n        </form>\r\n        <p *ngIf=\"submitAttempt\" class=\"cutomeerrortext\">\r\n                \r\n         <span class=\"redcolor ml-2\"><i class=\"fa fas fa-exclamation\"></i><b>&nbsp;Fix The Error : </b></span> {{form_fill_failure_msg}}\r\n          \r\n        </p>\r\n</ng-template>\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n<!--div class=\"my-container\">\r\n  <ngx-loading [show]=\"loading\"></ngx-loading>\r\n</div-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { LocationRoutingModule } from './location-routing.module';\r\nimport { LocationComponent } from './location.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AutocompleteLibModule,\r\n    NgxPaginationModule,\r\n    LocationRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBorderRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [LocationComponent]\r\n})\r\nexport class LocationModule { }\r\n"],"sourceRoot":"webpack:///"}