{"version":3,"sources":["./src/app/layout/listdigitalmakt/listdigitalmakt-routing.module.ts","./src/app/layout/listdigitalmakt/listdigitalmakt.component.ts","./src/app/layout/listdigitalmakt/listdigitalmakt.component.html","./src/app/layout/listdigitalmakt/listdigitalmakt.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEgB;;;AAEvE,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mFAAwB;KAChD;CACJ,CAAC;AAMK,MAAM,4BAA4B;;2GAA5B,4BAA4B;kLAA5B,4BAA4B,kBAH9B,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEX,4BAA4B,uFAF7B,4DAAY;6FAEX,4BAA4B;cAJxC,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6F;AAGtC;AAKjB;AAGgB;AACqC;;;;;;;;;;;;;;;;;;;;ICwB7E,qEAA4E;;IAAA,yEAAsB;IAAA,oEAAG;IAAA,gEAAK;IAAA,4DAAI;IAAA,4DAAK;IAAA,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAAA,qEAAI;IAAA,4DAAC;IAAA,4DAAK;IAAA,yEAAsB;IAAA,qEAAG;IAAA,gEAAI;IAAA,4DAAI;IAAA,4DAAK;IAAA,sEAAI;IAAA,wDAAiB;IAAA,4DAAK;IAAwE,4DAAK;;;;IAApS,0IAAkC;IAAiF,0DAAqB;IAArB,gHAAqB;IAAyD,0DAAiB;IAAjB,4GAAiB;;;;IAT1N,qEAEI;;IAAA,qEAAI;IAAA,uDAAY;IAAA,4DAAK;IACrB,qEAAI;IAAA,uDAAa;IAAA,4DAAK;IACtB,qEAAI;IAAA,uDAAgB;IAAA,4DAAK;IACzB,qEAAI;IAAA,uDAAqB;IAAA,4DAAK;IAClC,sEAEE;IAAA,6EACE;IAAA,oIAA4E;IAE9E,4DAAQ;IAEV,4DAAK;IAEf,sEAAK;IAAA,wDAAuC;IAAA,4DAAK;IAEjD,sEACA;IAAA,8EAA8D;IAAjC,2XAA+B;IAAE,8EAAiB;IAAA,4DAAS;IAAA,4DAAK;IAErF,4DAAK;;;;IApBC,0IAAkC;IAE9B,0DAAY;IAAZ,uGAAY;IACZ,0DAAa;IAAb,wGAAa;IACb,0DAAgB;IAAhB,2GAAgB;IAChB,0DAAqB;IAArB,gHAAqB;IAIc,0DAAoC;IAApC,0FAAoC;IAMpF,0DAAuC;IAAvC,kHAAuC;;;;IAjBlC,wEAEA;IAAA,8HAEI;;IAmBR,4DAAQ;;;IArBoC,0DAAgK;IAAhK,6SAAgK;;;IAoC5M,wEACI;IAAA,qEACE;IAAA,yEAAiC;IAAA,8EAAmB;IAAA,4DAAK;IAC3D,4DAAK;IACP,4DAAQ;;;;IAOZ,0EACE;IAAA,yEAAyC;IAAA,qFAA0B;IAAA,4DAAK;IAExE,6EAAkE;IAA9B,kVAA6B;IAAC,iEAAC;IAAA,4DAAS;IAChF,4DAAM;IAEN,0EACE;IAAA,qEACF;IAAA,4DAAM;;;IADC,0DAAqB;IAArB,6JAAqB;;;;IAI1B,0EACE;IAAA,yEAAyC;IAAA,wEAAa;IAAA,4DAAK;IAE3D,6EAAmE;IAA/B,mVAA8B;IAAC,iEAAC;IAAA,4DAAS;IACjF,4DAAM;IAEN,0EACE;IAAA,qEACF;IAAA,4DAAM;;;IADC,0DAA0B;IAA1B,kKAA0B;;;IAOvB,0EAEZ;;;ADjFO,MAAM,wBAAyB,SAAQ,mEAAe;IAqK3D,YACS,MAAc,EACb,KAAqB,EACrB,KAAe,EAChB,MAAqB,EACpB,GAAgB,EACjB,WAAuB;QAG9B,KAAK,CAAC,MAAM,CAAC;QARN,WAAM,GAAN,MAAM,CAAQ;QACb,UAAK,GAAL,KAAK,CAAgB;QACrB,UAAK,GAAL,KAAK,CAAU;QAChB,WAAM,GAAN,MAAM,CAAe;QACpB,QAAG,GAAH,GAAG,CAAa;QACjB,gBAAW,GAAX,WAAW,CAAY;QA1KhC,sBAAiB,GAAO,YAAY;QACpC,gBAAW,GAAW,KAAK;QAE3B,gBAAW,GAAW,KAAK;QAC3B,sBAAiB,GAAW,KAAK;QAEjC,qBAAgB,GAAO,EAAE;QAGzB,qBAAgB,GAAW,KAAK;QACzB,YAAO,GAAW,IAAI,CAAC;QACvB,2BAAsB,GAAG,KAAK;QACrC,wBAAmB,GAAO,EAAE;QAI5B,kBAAa,GAAG,IAAI;QACpB,gBAAW,GAAO,EAAE;QACpB,iBAAY,GAAO,EAAE;QAIrB,WAAM,GAAG,8CAAM,CAAC,MAAM;QACtB,oBAAe,GAAU,MAAM;QAC/B,mCAA8B,GAAW,KAAK;QAC9C,wBAAmB,GAAO,EAAE;QAU5B,qBAAgB,GAAW,KAAK;QAEzB,aAAQ,GAAQ,iBAAiB;QACxC,8BAAyB,GAAO,EAAE,CAAC;QACnC,mCAA8B,GAAO,EAAE,CAAC;QAGxC,gBAAW,GAAO;YAChB,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,EAAC,SAAS,EAAC;YACpC,EAAC,OAAO,EAAC,SAAS,EAAC,MAAM,EAAC,SAAS,EAAC;SAAG;QAIxC,UAAK,GAAG,EAAE,CAAC;QAQL,aAAQ,GAAG,8CAAM,CAAC,UAAU,CAAC;QAC7B,WAAM,GAAG,CAAC;QACjB,cAAS,GAAU,EAAE,CAAC;QASxB,qBAAgB,GAAW,KAAK;QAChC,gCAA2B,GAAW,KAAK;QAC3C,8BAAyB,GAAW,KAAK;QACzC,mBAAc,GAAW,KAAK;QAI9B,oBAAe,GAAG,MAAM;QACtB,0BAAqB,GACrB;YACG,IAAI,EAAC,EAAE;YACV,OAAO,EAAC,EAAE;YACV,YAAY,EAAG,YAAY;YACzB,MAAM,EAAG,IAAI;YACb,YAAY,EAAG;gBACb;oBACE,UAAU,EAAE,EAAE;oBACd,YAAY,EAAG,EAAE;oBACjB,QAAQ,EAAG,EAAE;oBACb,EAAE,EAAE,EAAE;oBACN,GAAG,EAAC,CAAC;oBACL,MAAM,EAAC,IAAI;oBACX,UAAU,EAAG,EAAE;oBACf,KAAK,EAAG,GAAG;oBAEX,SAAS,EAAG,GAAG;oBACf,KAAK,EAAG,GAAG;oBACX,UAAU,EAAG,GAAG;oBAChB,WAAW,EAAG,GAAG;oBACjB,cAAc,EAAG,EAAE;oBACnB,UAAU,EAAG,EAAE;iBAEhB;aACF;YAED,YAAY,EAAC,EAAE;YACf,eAAe,EAAC,EAAE;YAClB,YAAY,EAAC,SAAS;YACtB,MAAM,EAAG,uBAAuB;SACjC;QAED,kBAAa,GAAO,CAAC,CAAC;oBACpB,UAAU,EAAE,EAAE;oBACd,YAAY,EAAG,EAAE;oBACjB,QAAQ,EAAG,EAAE;oBACb,EAAE,EAAE,EAAE;oBACN,GAAG,EAAC,EAAE;oBACN,MAAM,EAAC,IAAI;oBACX,QAAQ,EAAG,EAAE;oBACb,GAAG,EAAG,GAAG;oBACT,OAAO,EAAG,GAAG;oBACb,GAAG,EAAG,GAAG;oBACT,QAAQ,EAAG,GAAG;oBACd,SAAS,EAAG,GAAG;oBACf,YAAY,EAAG,EAAE;oBACjB,QAAQ,EAAG,EAAE;iBAEd,CAAC,CAAC;QACH,kBAAa,GAAO,EAAE;QACtB,8BAAyB,GACzB;YACE,IAAI,EAAC,EAAE;YACP,OAAO,EAAC,EAAE;YACV,YAAY,EAAG,YAAY;YAC3B,MAAM,EAAG,IAAI;YACb,YAAY,EAAG;gBACb;oBACE,UAAU,EAAE,EAAE;oBACd,YAAY,EAAG,EAAE;oBACjB,QAAQ,EAAG,EAAE;oBACb,EAAE,EAAE,EAAE;oBACN,GAAG,EAAC,CAAC;oBACL,MAAM,EAAC,IAAI;oBACX,UAAU,EAAG,EAAE;oBACf,KAAK,EAAG,GAAG;oBACX,SAAS,EAAG,GAAG;oBACf,KAAK,EAAG,GAAG;oBACX,UAAU,EAAG,GAAG;oBAChB,WAAW,EAAG,GAAG;oBACjB,cAAc,EAAG,EAAE;oBACnB,UAAU,EAAG,EAAE;iBAEhB;aACF;YAED,YAAY,EAAC,EAAE;YACf,eAAe,EAAC,EAAE;YAClB,YAAY,EAAC,SAAS;YACtB,MAAM,EAAG,uBAAuB;SACjC;QAMD,oBAAe,GAAa,IAAI,CAAC;QAYjC,2CAA2C;QAC1C,6CAA6C;QAM3C,kDAAkD;QAEnD,wCAAwC;QAExC,IAAI,CAAC,OAAO,GAAG,KAAK;QACpB,2BAA2B;QAE3B,kGAAkG;QACnG,4BAA4B;QAC3B,IAAI,CAAC,2BAA2B,EAAE;QAClC,IAAI,CAAC,sBAAsB,EAAE;IAE/B,CAAC;IAzL+D,CAAC;IA0LhE,GAAG;QACF,IAAI,IAAI,GAAG,KAAK,CAAC;QACjB,IAAI,IAAI,GAAG,KAAK,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;aAC/B,MAAM,EAAE,GAAG,CAAC,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IAC1C,CAAC;IAEC,WAAW;QACT,OAAQ,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,mBAAmB,CAAe,CAAC,QAAQ,CAAC;IACxF,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAC,EAAC,uBAAuB,EAAC,yBAAyB,EAAC,CAAC,CAAC,CAAC;IAC1F,CAAC;IACD,gBAAgB;QACd,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACtC,CAAC;IACD,kBAAkB;QAChB,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,UAAU,EAAE,IAAI,0DAAW,EAAE;YAC7B,YAAY,EAAE,IAAI,0DAAW,EAAE;YAC/B,EAAE,EAAE,IAAI,0DAAW,EAAE;YACrB,QAAQ,EAAE,IAAI,0DAAW,EAAE;YAC3B,GAAG,EAAC,IAAI,0DAAW,EAAE;YACpB,QAAQ,EAAG,IAAI,0DAAW,EAAE;YAC5B,OAAO,EAAG,IAAI,0DAAW,EAAE;YAC1B,GAAG,EAAG,IAAI,0DAAW,EAAE;YACvB,YAAY;YACZ,QAAQ,EAAG,IAAI,0DAAW,EAAE;YAC5B,SAAS,EAAG,IAAI,0DAAW,EAAE;YAC7B,YAAY,EAAG,IAAI,0DAAW,EAAE;YAChC,QAAQ,EAAG,IAAI,0DAAW,EAAE;SAC/B,CAAC,CAAC;IACL,CAAC;IAED,4BAA4B,CAAC,QAAQ;QACnC,OAAO,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;YACpB,UAAU,EAAE,IAAI,0DAAW,EAAE;YAC7B,YAAY,EAAE,IAAI,0DAAW,EAAE;YAC/B,EAAE,EAAE,IAAI,0DAAW,EAAE;YACrB,QAAQ,EAAE,IAAI,0DAAW,EAAE;YAC3B,GAAG,EAAC,IAAI,0DAAW,EAAE;YACpB,QAAQ,EAAG,IAAI,0DAAW,EAAE;YAC5B,OAAO,EAAG,IAAI,0DAAW,EAAE;YAC1B,GAAG,EAAG,IAAI,0DAAW,EAAE;YACvB,YAAY;YACZ,QAAQ,EAAG,IAAI,0DAAW,EAAE;YAC5B,SAAS,EAAG,IAAI,0DAAW,EAAE;YAC7B,YAAY,EAAG,IAAI,0DAAW,EAAE;YAChC,QAAQ,EAAG,IAAI,0DAAW,EAAE;SAC/B,CAAC,CAAC;IACL,CAAC;IAEH;;;;;;;;;;QAUI;IACF,kBAAkB;IAElB,CAAC;IACD,OAAO;QACL,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,mBAAmB,CAAc,CAAC;QAC7F,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,UAAU,CAAC,CAAC;QAET,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,mBAAmB,CAAc,CAAC;QAC9F,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;IAEpC,CAAC;IAGD,gBAAgB;QACd,oCAAoC;QACpC,yCAAyC;QACzC,IAAG,IAAI,CAAC,yBAAyB;YACjC,IAAI,CAAC,yBAAyB,CAAC,OAAO,EAAE;IAC1C,CAAC;IAEA,+BAA+B;QAElC,IAAG;YACE,iCAAiC;YACjC,IAAI,CAAC,qBAAqB,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,yBAAyB,CAAC,CAAC;YAEhF,IAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC;YACzC,IAAI,CAAC,UAAU,GAAG,EAAE;YACpB;;;;;cAKE;YACF,IAAI,CAAC,IAAI,GAAG,KAAK;YACjB,0FAA0F;YAG1F,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,mBAAmB,CAAc,CAAC;YAC9F,GAAG;SACH;QAAA,OAAM,CAAC,EAAC;YACP,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;SACf;IAED,CAAC;IACD,UAAU;IAEV,CAAC;IAED,QAAQ;QAGN,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SAClC;QAID,oCAAoC;QACpC,iBAAiB;QACjB,IAAI,CAAC,sBAAsB,EAAE;IAI/B,CAAC;IAAA,CAAC;IAIJ,UAAU;QACR,4BAA4B;QAC5B,4DAA4D;QAC5D,0BAA0B;QAC1B,4BAA4B;QAC5B,0BAA0B;QAC1B,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACtE,CAAC;IACD,mBAAmB,CAAC,GAAG;QACrB,yBAAyB;QACzB,uBAAuB;QACvB,IAAI,KAAK,GAAI,GAAG,CAAC,yCAAyC;QAC1D,IAAI,CAAC,gBAAgB,GAAG,KAAK;QAC7B,IAAI,CAAC,+BAA+B,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;IACzF,CAAC;IAED,kBAAkB,CAAC,GAAG;QACrB,iEAAiE;QAChE,iCAAiC;QACjC,8EAA8E;QAE9E,GAAG,CAAC,WAAW,GAAG,IAAI;QAEtB,KAAM,IAAI,CAAC,IAAK,IAAI,CAAC,8BAA8B,EAAC;YAClD,IAAI,QAAQ,GAAG,IAAI,CAAC,8BAA8B,CAAC,CAAC,CAAC;YACrD,IAAG,QAAQ,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,EAAC;gBACzB,SAAQ;aACT;iBAAI;gBACH,mDAAmD;gBACnD,QAAQ,CAAC,WAAW,GAAG,KAAK;gBAC5B,4DAA4D;aAC7D;SACF;QACD,IAAI,CAAC,qBAAqB,CAAC,YAAY,GAAG,GAAG,CAAC,sCAAsC;QACpF,IAAI,CAAC,qBAAqB,CAAC,YAAY,GAAG,wBAAwB,GAAC,IAAI,CAAC,qBAAqB,CAAC,YAAY;QAC1G,IAAI,CAAC,qBAAqB,CAAC,eAAe,GAAG,GAAG,CAAC,yCAAyC;QAE1F,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;QAEtG,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACzC,6EAA6E;QAC7E,0FAA0F;IAC5F,CAAC;IAED,uBAAuB,CAAC,KAAK;QAC3B,IAAI;YAGF,OAAO,MAAM,GAAG,KAAK,GAAG,GAAG;SAC5B;QACD,OAAM,KAAK,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SAC5B;IACH,CAAC;IAED,QAAQ,CAAC,SAAS;QAChB,IAAI;YACF,OAAO,CAAC,GAAG,CAAC,+DAA+D,GAAC,IAAI,CAAC,qBAAqB,CAAC,eAAe,CAAC;YACvH,IAAI,KAAK,GAAI,IAAI,CAAC,qBAAqB,CAAC,eAAe;YAGvD,KAAK,GAAI,IAAI,CAAC,qBAAqB,CAAC,YAAY;YAKhD,8BAA8B;YAE9B,IAAI,CAAC,WAAW,GAAG,KAAK;YAExB,+BAA+B;YAGhC,+EAA+E;YAC/E;;;;;;;;gBAQI;YAIH,OAAO,MAAM,GAAG,KAAK,GAAG,GAAG;SAC5B;QACD,OAAM,KAAK,EAAE;YACZ,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;SAC5B;IACH,CAAC;IAED,uBAAuB,CAAC,GAAG;QACzB,IAAI;YACF,IAAI,KAAK,GAAI,GAAG,CAAC,yCAAyC;YAExD,KAAK,GAAI,GAAG,CAAC,yCAAyC;YACtD;;;YAGA;YACJ,4BAA4B;YAG1B,OAAO,MAAM,GAAG,KAAK,GAAG,GAAG;SAC5B;QACD,OAAM,KAAK,EAAE;YACZ,iCAAiC;SACjC;IACH,CAAC;IAGD,iBAAiB;QACf,OAAO,CAAC,GAAG,CAAC,WAAW,GAAC,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAE;IAChE,CAAC;IACD,iBAAiB;QACf,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAC,IAAI,CAAC,qBAAqB,CAAC,YAAY,CAAE;IACzE,CAAC;IAGD,cAAc;QAEZ,IAAG,IAAI,CAAC,iCAAiC;YACvC,IAAI,CAAC,iCAAiC,CAAC,KAAK,EAAE,CAAC;QAE/C,IAAI,CAAC,gBAAgB,GAAG,KAAK;IAEjC,CAAC;IACC,YAAY,CAAC,WAAuB;QAClC,+BAA+B;QAC/B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,CAAC;IAEnB,CAAC;IAID,sBAAsB,CAAC,GAAW;QAChC,uDAAuD;QACxD,6BAA6B;QAC5B,IAAI,IAAI,GAAG,EAAC,IAAI,EAAC,GAAG,EAAC;QACrB,IAAI,CAAC,WAAW,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAS,EAAE,EAAE;YAC1D,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC;QACpD,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YACP,mBAAmB;QACvB,CAAC,CAAC,CAAC;QACJ,IAAI;IACL,CAAC;IAGD,gBAAgB,CAAC,GAAG;QAElB,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,eAAe;QACtC,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAEtE,CAAC;IAED,WAAW,CAAC,KAAK;QACf,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAC,KAAK,CAAC;QACjD,IAAI,CAAC,MAAM,GAAG,KAAK;QACnB,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAED,WAAW;QAKP,IAAI,CAAC,sBAAsB,EAAE;IAKjC,CAAC;IAED,2BAA2B;QAEzB,IAAI,IAAI,GAAG,EAAC,MAAM,EAAC,IAAI,CAAC,MAAM,EAAC,OAAO,EAAC,IAAI,CAAC,QAAQ,EAAC,MAAM,EAAG,IAAI,CAAC,aAAa,EAAC;QACjF,+DAA+D;QAC9D,mEAAmE;QACnE,OAAO,CAAC,GAAG,CAAC,eAAe,GAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAEjD,IAAI,CAAC,WAAW,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAEjE,OAAO,CAAC,GAAG,CAAC,sDAAsD,GAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YAC5F,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;YAC9B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAErB,OAAO,CAAC,GAAG,CAAC,sCAAsC,GAAC,IAAI,CAAC,eAAe,CAAC;QAE1E,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACH,CAAC;IAED,sBAAsB;QAErB,IAAI,IAAI,GAAG,EAAC,MAAM,EAAC,IAAI,CAAC,MAAM,EAAC,OAAO,EAAC,IAAI,CAAC,QAAQ,EAAC,MAAM,EAAG,IAAI,CAAC,aAAa,EAAC;QAEnF,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,MAAU,EAAE,EAAE;YAChE,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;YAClC,kEAAkE;YACjE,mBAAmB;YACrB,KAAK;YAEN,KAAI,IAAI,CAAC,IAAI,MAAM,EAAC;gBAClB,IAAI,mBAAmB,GAAG,MAAM,CAAC,CAAC,CAAC;gBACpC,iGAAiG;gBAClG,qDAAqD;gBACrD,KAAK;gBAEH,OAAO,CAAC,GAAG,CAAC,uCAAuC,GAAC,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;gBACxF,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,mBAAmB,CAAC;aACzD;YAGD,8HAA8H;YAC5H,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QAEzB,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;YACT,IAAI,CAAC,yBAAyB,GAAG,EAAE,CAAC;YACpC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IAEH,CAAC;;gGA5iBY,wBAAwB;wGAAxB,wBAAwB;;;;;;;;;;;;;;;;;;;qFAFvB,CAAC,mEAAQ,CAAC;QClBxB,sEACE;QAAA,gFAA6F;QAC/F,4DAAM;QAEN,yEAEE;QAGA,yEAAoD;QAAA,0EAAoB;QAAA,oEAAI;QAAA,uDAA+B;QAAA,4DAAI;QAAE,4DAAO;QACtH,2EACE;QAAA,wEACA;QAAA,qEACE;QAAA,sEAAI;QAAA,oEAAQ;QAAA,4DAAK;QACf,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,sEAAI;QAAA,0EAAc;QAAA,4DAAK;QACvB,sEAAI;QAAA,2EAAe;QAAA,4DAAK;QACxB,sEAAI;QAAA,4EAAgB;QAAA,4DAAK;QAGzB,sEAAI;QAAA,wEAAY;QAAA,4DAAK;QACrB,sEAAK;QAAA,wEAAY;QAAA,4DAAK;QAC1B,4DAAK;QACL,4DAAQ;QACR,oEACI;QAAA,0HAEA;QAsBJ,0EACA;QAAA,0FAW6E;QAVxE,8KAAc,uBAAmB,IAAC,0IACH,uBAAmB,IADhB;QAUe,4DAAuB;QAC7E,4DAAM;QACN,0HACI;QAIN,4DAAQ;QACV,4DAAM;QAIN,kNACE;QAUF,kNACE;QAWJ,2EACE;QAAA,mNAEU;QAGV,8EAAkK;QACpK,4DAAM;QAnGN,4DAEE;;;QALiB,0DAAsC;QAAtC,+FAAsC;QAQqB,0DAA+B;QAA/B,0GAA+B;QAgB5F,2DAAuE;QAAvE,2IAAuE;QAsC3E,0DAA0E;QAA1E,4IAA0E;QAuCxE,0DAAgB;QAAhB,6EAAgB;;6FDlFlB,wBAAwB;cANpC,uDAAS;eAAC;gBACT,QAAQ,EAAE,qBAAqB;gBAC/B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;gBAC/C,SAAS,EAAG,CAAC,mEAAQ,CAAC;aACvB;;kBASE,uDAAS;mBAAC,QAAQ;;kBAClB,uDAAS;mBAAC,oBAAoB;;kBA4B9B,uDAAS;mBAAC,KAAK;;kBAWf,uDAAS;mBAAC,SAAS;;kBAElB,uDAAS;mBAAC,0BAA0B;;kBACpC,uDAAS;mBAAC,kBAAkB;;kBAC5B,uDAAS;mBAAC,oBAAoB;;kBAC9B,uDAAS;mBAAC,2BAA2B;;;;;;;;;;;;;;AEzEzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACkB;AAIf;AAClD,8CAA8C;AAC9C,6CAA6C;AACM;AACE;AAEA;AACU;AACU;AACtB;AAEoB;AACT;AACkB;AAChF,iFAAiF;AACjF,oDAAoD;AACpD,kDAAkD;AACuB;;;;;;AA8BlE,MAAM,qBAAqB;;oGAArB,qBAAqB;oKAArB,qBAAqB,kBA5BvB;YACP,4DAAY;YACZ,kEAAmB;YACnB,8EAAqB;YACrB,kEAAmB;YACnB,6FAA4B;YAC5B,0DAAW;YACX,wDAAgB;YAChB,6DAAgB,CAAC,OAAO,CAAC;gBACvB,aAAa,EAAE,qEAAwB,CAAC,cAAc;gBACtD,wBAAwB,EAAE,iBAAiB;gBAC3C,8BAA8B,EAAE,KAAK;gBACrC,aAAa,EAAE,SAAS;gBACxB,eAAe,EAAE,SAAS;gBAC1B,cAAc,EAAE,SAAS;aAC5B,CAAC;YACA,gEAAc;YACd,oEAAS,CAAC,OAAO,EAAE;YACrB,mBAAmB;YACnB,kBAAkB;YAChB,kEAAe,CAAC,OAAO,EAAE;YACzB,+DAAc,CAAC,OAAO,CAAC;gBACrB,OAAO,EAAE,4DAAW;gBACpB,UAAU,EAAE,sFAAc;aAC3B,CAAC;SACH;mIAGU,qBAAqB,mBAFjB,oFAAwB,aAzBrC,4DAAY;QACZ,kEAAmB;QACnB,8EAAqB;QACrB,kEAAmB;QACnB,6FAA4B;QAC5B,0DAAW;QACX,wDAAgB,iEAShB,gEAAc;6FAYL,qBAAqB;cA7BjC,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;oBACZ,kEAAmB;oBACnB,8EAAqB;oBACrB,kEAAmB;oBACnB,6FAA4B;oBAC5B,0DAAW;oBACX,wDAAgB;oBAChB,6DAAgB,CAAC,OAAO,CAAC;wBACvB,aAAa,EAAE,qEAAwB,CAAC,cAAc;wBACtD,wBAAwB,EAAE,iBAAiB;wBAC3C,8BAA8B,EAAE,KAAK;wBACrC,aAAa,EAAE,SAAS;wBACxB,eAAe,EAAE,SAAS;wBAC1B,cAAc,EAAE,SAAS;qBAC5B,CAAC;oBACA,gEAAc;oBACd,oEAAS,CAAC,OAAO,EAAE;oBACrB,mBAAmB;oBACnB,kBAAkB;oBAChB,kEAAe,CAAC,OAAO,EAAE;oBACzB,+DAAc,CAAC,OAAO,CAAC;wBACrB,OAAO,EAAE,4DAAW;wBACpB,UAAU,EAAE,sFAAc;qBAC3B,CAAC;iBACH;gBACD,YAAY,EAAE,CAAC,oFAAwB,CAAC;aACzC","file":"listdigitalmakt-listdigitalmakt-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ListdigitalmaktComponent } from './listdigitalmakt.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: ListdigitalmaktComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ListdigitalmaktRoutingModule { }\r\n","import { Component, OnInit, NgZone, ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion,NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router , ActivatedRoute} from '@angular/router';\r\nimport *  as moment from 'moment';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\nimport { Config } from '../../config';\r\n\r\n\r\nimport { BaseComponentDM } from 'src/BaseComponentDM';\r\nimport { FormBuilder, FormGroup, FormControl, Validators,FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-listdigitalmakt',\r\n  templateUrl: './listdigitalmakt.component.html',\r\n  styleUrls: ['./listdigitalmakt.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class ListdigitalmaktComponent extends BaseComponentDM implements OnInit {\r\n  loadingCustomeMsg:any = \"Loading...\"\r\n  otpVerified:boolean = false\r\n  randomOTP:any\r\n  sendOTPflag:boolean = false\r\n  verifyActionStart:boolean = false\r\n  \r\n  otpEnteredByUser:any = ''\r\n  @ViewChild('myname') input: ElementRef;\r\n  @ViewChild('fileInputDemoPhoto') fileInputDemoPhoto :ElementRef;;\r\n  fromOldImageList:boolean = false\r\n  public loading:boolean = true;\r\n  public isPrescriptionUploaded = false\r\n  showOldPrescription:any = ''\r\n  public closeResult: string;\r\n  enlargedPic:any\r\n  enlargedPrescPic:any\r\n  allDynaFilter = null\r\n  patientList:any = []\r\n  customerList:any = []\r\n  listdigitalmaktStatus:string\r\n  listdigitalmaktId:string\r\n  listdigitalmaktDate:string\r\n  states = Config.states\r\n  keywordCustomer:string = \"name\"\r\n  fetchListdigitalmaktByCustomer:boolean = false\r\n  listdigitalmaktList:any = []\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  prescriptionSource:any\r\n  fromCustomerPage:boolean = false\r\n  @ViewChild('acc') accordionComponent: NgbAccordion;\r\n  public userKind:string=\"listdigitalmakt\"\r\n  normalFiltereduserListArr:any = [];\r\n  customerOldPrescriptionListArr:any = [];\r\n  \r\n  modalSearchFilerReference: NgbModalRef;\r\n  delModeList:any = [\r\n    {\"value\":\"Express\",\"name\":\"Express\"},\r\n    {\"value\":\"General\",\"name\":\"General\"}  ]\r\n\r\n  modalReferenceListdigitalmaktForm: NgbModalRef;\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('listdigitalmaktFormModal') listdigitalmaktFormModal: TemplateRef<any>;\r\n   @ViewChild('searFiltersModal') searFiltersModal: TemplateRef<any>;\r\n   @ViewChild('enlargedImageModal') enlargedImageModal: TemplateRef<any>;\r\n   @ViewChild('enlargedPrescriptionModal') enlargedPrescriptionModal: TemplateRef<any>;\r\n\r\n   \r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  listdigitalmaktFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  customListdigitalmakttime : {\r\n    hour: 10,\r\n    minute: 20,\r\n\r\n};\r\nsearchByCustomer:boolean = false\r\nsearchByListdigitalmaktDate:boolean = false\r\nsearchByListdigitalmaktId:boolean = false\r\nsearchByStatus:boolean = false\r\n\r\n\r\nmedicineName:any\r\nkeywordMedicine = \"name\"\r\n  listdigitalmaktObject =  \r\n  {     \r\n     name:\"\",\r\n  emailId:\"\",  \r\n  mobileNumber : \"9134683936\",\r\n    active : true,       \r\n    medicineList : [ \r\n      {\r\n        medicineId: '',             \r\n        medicineName : \"\",\r\n        quantity : \"\",\r\n        mg: '',\r\n        mrp:0,      \r\n        active:true,      \r\n        \"b2bPrice\" : \"\",\r\n        \"gst\" : \"0\",\r\n\r\n        \"hsnCode\" : \"0\",\r\n        \"vat\" : \"0\",\r\n        \"otherTax\" : \"0\",\r\n        \"discounts\" : \"0\",\r\n        \"medicineType\" : \"\",      \r\n        \"category\" : \"\"\r\n                \r\n      }\r\n    ],    \r\n    \r\n    uploadedFile:\"\",\r\n    uploadedFileURL:\"\",\r\n    deliveryMode:\"General\",\r\n    status : \"ListdigitalmaktPlaced\"    \r\n  }\r\n\r\n  medicineArray:any = [[{\r\n    medicineId: '',             \r\n    medicineName : \"\",\r\n    quantity : \"\",\r\n    mg: '',\r\n    mrp:\"\",      \r\n    active:true,      \r\n    b2bPrice : \"\",\r\n    gst : \"0\",\r\n    hsnCode : \"0\",\r\n    vat : \"0\",\r\n    otherTax : \"0\",\r\n    discounts : \"0\",\r\n    medicineType : \"\",      \r\n    category : \"\"\r\n            \r\n  }]]\r\n  attendantList:any = []\r\n  listdigitalmaktObjectBase =  \r\n  {    \r\n    name:\"\",\r\n    emailId:\"\",  \r\n    mobileNumber : \"9134683936\",\r\n    active : true,       \r\n    medicineList : [ \r\n      {\r\n        medicineId: '',             \r\n        medicineName : \"\",\r\n        quantity : \"\",\r\n        mg: '',\r\n        mrp:0,      \r\n        active:true,      \r\n        \"b2bPrice\" : \"\",\r\n        \"gst\" : \"0\",\r\n        \"hsnCode\" : \"0\",\r\n        \"vat\" : \"0\",\r\n        \"otherTax\" : \"0\",\r\n        \"discounts\" : \"0\",\r\n        \"medicineType\" : \"\",      \r\n        \"category\" : \"\"\r\n                \r\n      }\r\n    ],    \r\n    \r\n    uploadedFile:\"\",\r\n    uploadedFileURL:\"\",\r\n    deliveryMode:\"General\",\r\n    status : \"ListdigitalmaktPlaced\"    \r\n  }\r\n  customer:any\r\n  customerName:any\r\n  customerId:any\r\n  doctorName:any\r\n  medicineListItems: FormArray;\r\n  openingMeridian : boolean = true;\r\n\r\n  constructor(    \r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess   \r\n    \r\n  ) {\r\n    super(router)\r\n  //  this.customListdigitalmakttime.hour = 9\r\n   // this.customListdigitalmakttime.minute = 10\r\n\r\n\r\n      \r\n    \r\n\r\n     //this.listdigitalmaktFormGroup = this.buildForm()\r\n\r\n    //this.openforAddListdigitalmaktDialog()\r\n\r\n    this.loading = false\r\n    //this.createMedicineItem()\r\n\r\n    //this.listdigitalmaktFormGroup.valueChanges.subscribe(data => console.log('form changes', data));\r\n   // this.loading = false;    \r\n    this.fetchDigitalmargetingsCount()   \r\n    this.fetchDigitalmargetings()\r\n    \r\n  }\r\n   gfg() { \r\n    var minm = 10000; \r\n    var maxm = 99999; \r\n    this.randomOTP = Math.floor(Math \r\n    .random() * (maxm - minm + 1)) + minm; \r\n} \r\n\r\n  getControls() {\r\n    return (this.listdigitalmaktFormGroup.get('medicineListItems') as FormArray).controls;\r\n  }\r\n  gotoCustomerPage(){\r\n    this.router.navigate([\"/customer\",{fromListdigitalmaktPage:'fromListdigitalmaktPage'}]);\r\n  }\r\n  openCustomerPage(){\r\n    this.router.navigate([\"/customer\"]);\r\n  }\r\n  createMedicineItem(): FormGroup {\r\n    return this._fb.group({\r\n      medicineId: new FormControl(),\r\n      medicineName: new FormControl(),\r\n      mg: new FormControl(),\r\n      quantity: new FormControl(),      \r\n      mrp:new FormControl(),            \r\n       b2bPrice : new FormControl() ,\r\n       hsnCode : new FormControl(),\r\n        gst : new FormControl(),\r\n        //vat : \"0\",\r\n        otherTax : new FormControl(),\r\n        discounts : new FormControl(),\r\n        medicineType : new FormControl(),      \r\n        category : new FormControl()\r\n    });\r\n  }\r\n\r\n  createMedicineItemDuringEdit(medicine): FormGroup {\r\n    return this._fb.group({\r\n      medicineId: new FormControl(),\r\n      medicineName: new FormControl(),\r\n      mg: new FormControl(),\r\n      quantity: new FormControl(),      \r\n      mrp:new FormControl(),            \r\n       b2bPrice : new FormControl() ,\r\n       hsnCode : new FormControl(),\r\n        gst : new FormControl(),\r\n        //vat : \"0\",\r\n        otherTax : new FormControl(),\r\n        discounts : new FormControl(),\r\n        medicineType : new FormControl(),      \r\n        category : new FormControl()\r\n    });\r\n  }\r\n\r\n/*\r\n  ngAfterViewInit(){\r\n    this.dataService.fetchAllPatients().then((result:[]) => {\r\n      this.patientList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n\r\n   \r\n  }\r\n  */\r\n  getListdigitalmakt(){\r\n\r\n  }\r\n  addItem(): void {\r\n    this.medicineListItems = this.listdigitalmaktFormGroup.get('medicineListItems') as FormArray;\r\n    this.medicineListItems.push(this.createMedicineItem());\r\n  }\r\n\r\n  removeItem(i){\r\n\r\n     this.medicineListItems = this.listdigitalmaktFormGroup.get('medicineListItems') as FormArray;\r\n    this.medicineListItems.removeAt(i)  \r\n\r\n  }\r\n\r\n \r\n  closeSearchModal(){\r\n    //if(this.modalSearchFilerReference)\r\n    //this.modalSearchFilerReference.close();\r\n    if(this.modalSearchFilerReference)\r\n    this.modalSearchFilerReference.dismiss()\r\n  }\r\n \r\n   openforAddListdigitalmaktDialog(){\r\n\r\ntry{\r\n     //this.medicineListItems.push({})\r\n     this.listdigitalmaktObject = Object.assign({}, this.listdigitalmaktObjectBase); \r\n\r\n    this.customerOldPrescriptionListArr = []; \r\n    this.customerId = ''\r\n    /*\r\n    if(this.customerId == undefined || !this.customerId || this.customerId == ''){\r\n     alert(\"Please select a customer first, from the dropdown\")\r\n     return\r\n    }\r\n    */\r\n    this.mode = \"add\"\r\n    //this.modalReferenceListdigitalmaktForm = this.modal.open(this.listdigitalmaktFormModal);\r\n    \r\n    \r\n    this.medicineListItems = this.listdigitalmaktFormGroup.get('medicineListItems') as FormArray;\r\n   // \r\n  }catch(e){\r\n    console.log(e)\r\n  }\r\n \r\n  }\r\n  getPatient(){\r\n\r\n  }\r\n \r\n  ngOnInit(){\r\n\r\n\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n\r\n  \r\n\r\n    //this.pageSize = Config.RECORDSIZE;\r\n    //this.pageNo = 1\r\n    this.fetchDigitalmargetings()     \r\n\r\n    \r\n\r\n  };\r\n\r\n  \r\n    \r\nenlargePic(){\r\n  //alert(\"trying to enlarge\")\r\n  //let image  = this.listdigitalmaktObject.uploadedFileURL   \r\n  //this.enlargedPic = image\r\n  //this.enlargedPrescPic = ''\r\n  //this.closeCustomModal2()\r\n  this.modalReferenceImage = this.modal.open(this.enlargedImageModal); \r\n}\r\nenlargePrescription(obj){\r\n  //this.closeCustomModal()\r\n  //this.enlargedPic = ''\r\n  let image  = obj.uploadPhotoListdigitalmaktPrescriptionURL    \r\n  this.enlargedPrescPic = image\r\n  this.modalReferencePrescriptionImage = this.modal.open(this.enlargedPrescriptionModal); \r\n}\r\n\r\nselectPrescription(obj){\r\n // let image  = obj.uploadPhotoListdigitalmaktPrescriptionURL    \r\n  //  this.enlargedPrescPic = image\r\n  //this.modalReferenceImage = this.modal.open(this.enlargedPrescriptionModal); \r\n  \r\n  obj.selectValue = true\r\n\r\n  for ( var i in  this.customerOldPrescriptionListArr){\r\n    let oldPresc = this.customerOldPrescriptionListArr[i]\r\n    if(oldPresc._id == obj._id){\r\n      continue\r\n    }else{\r\n      //this.customerOldPrescriptionListArr.splice(i, 1);\r\n      oldPresc.selectValue = false\r\n      //this.customerOldPrescriptionListArr.splice(i, 1,oldPresc);\r\n    }\r\n  }\r\n  this.listdigitalmaktObject.uploadedFile = obj.uploadPhotoListdigitalmaktPrescription\r\n  this.listdigitalmaktObject.uploadedFile = \"data:image/jpg;base64,\"+this.listdigitalmaktObject.uploadedFile\r\n  this.listdigitalmaktObject.uploadedFileURL = obj.uploadPhotoListdigitalmaktPrescriptionURL\r\n\r\n  this.listdigitalmaktFormGroup.get('uploadedFile').patchValue(this.listdigitalmaktObject.uploadedFile);\r\n\r\n  console.log(\"obj ==\"+JSON.stringify(obj))\r\n  //this.getPhotoOLDPrescription(obj.uploadPhotoListdigitalmaktPrescriptionURL)\r\n  //this.showOldPrescription  = 'url(' + obj.uploadPhotoListdigitalmaktPrescriptionURL + ')'\r\n}\r\n\r\ngetPhotoOLDPrescription(image) {\r\n  try {\r\n    \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   console.log('Error', error);\r\n  }\r\n}\r\n\r\ngetPhoto(photoType) {\r\n  try {\r\n    console.log(\"in getPhoto == this.listdigitalmaktObject.uploadedFileURL == \"+this.listdigitalmaktObject.uploadedFileURL)\r\n    let image  = this.listdigitalmaktObject.uploadedFileURL\r\n\r\n\r\n    image  = this.listdigitalmaktObject.uploadedFile\r\n    \r\n    \r\n\r\n\r\n    //alert(this.fromOldImageList)\r\n\r\n    this.enlargedPic = image\r\n   \r\n    //this.fromOldImageList = false\r\n\r\n\r\n   //let  image = \"data:image/jpg;base64,\"+this.listdigitalmaktObject.uploadedFile\r\n   /* if(photoType == 'prescription'){\r\n      image  = this.listdigitalmaktObject.uploadedFileURL\r\n      if(!image && this.listdigitalmaktObject.uploadedFile){\r\n        image = \"data:image/jpg;base64,\"+this.listdigitalmaktObject.uploadedFile\r\n\r\n        this.listdigitalmaktObject.uploadedFile = \"data:image/jpg;base64,\"+this.listdigitalmaktObject.uploadedFile\r\n\r\n      }\r\n    }*/\r\n    \r\n   \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   console.log('Error', error);\r\n  }\r\n}\r\n\r\ngetPhotoOldPrescription(obj) {\r\n  try {\r\n    let image  = obj.uploadPhotoListdigitalmaktPrescriptionURL\r\n    \r\n      image  = obj.uploadPhotoListdigitalmaktPrescriptionURL\r\n      /*if(obj && obj.uploadPhotoListdigitalmaktPrescription){\r\n        image = obj.uploadPhotoListdigitalmaktPrescription\r\n      }\r\n    */\r\n  //  this.enlargedPic = image\r\n   \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   // //console.log('Error', error);\r\n  }\r\n}\r\n\r\n\r\ncheckStatusChange(){\r\n  console.log(\"status **\"+this.listdigitalmaktObject['status'] )\r\n}\r\ncheckDeliveryMode(){\r\n  console.log(\"deliverymode **\"+this.listdigitalmaktObject.deliveryMode )\r\n}\r\n\r\n\r\ncloseMainModal() {\r\n     \r\n  if(this.modalReferenceListdigitalmaktForm)\r\n    this.modalReferenceListdigitalmaktForm.close();\r\n\r\n    this.fromOldImageList = false\r\n  \r\n}\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n \r\n  \r\n\r\nonChangeCustomerSearch(val: string) {\r\n  //console.log(\" inside onChangePatientSearch val \"+val)\r\n // if(val && val.length >2 ){\r\n  let data = {name:val}\r\n  this.dataService.fetchAllCustomers(data).then((result:[]) => {\r\n    this.customerList = result.map(element => element)\r\n  }, (err) => {\r\n      //console.log(err);\r\n  });\r\n // }\r\n}\r\n\r\n\r\nviewPrescription(obj){\r\n\r\n  this.enlargedPic = obj.uploadedFileURL\r\n  this.modalReferenceImage = this.modal.open(this.enlargedImageModal); \r\n\r\n}\r\n\r\npageChanged(event){\r\n  console.log(\"****** this.event   ===== **\"+event)\r\n  this.pageNo = event\r\n  this.applyFilter()\r\n}\r\n\r\napplyFilter() {\r\n      \r\n    \r\n               \r\n  \r\n    this.fetchDigitalmargetings()\r\n  \r\n\r\n \r\n  \r\n}\r\n\r\nfetchDigitalmargetingsCount(){\r\n  \r\n  let data = {pageNo:this.pageNo,perPage:this.pageSize,filter : this.allDynaFilter}\r\n  // this.fetchDigitalmargetingsCount({filter : allDynaFilter})  \r\n   //this.fetchDigitalmargetingsByFilters({filter : allDynaFilter})   \r\n   console.log(\" inside data \"+JSON.stringify(data))\r\n \r\n   this.dataService.fetchDigitalmargetingsCount(data).then((result) => {\r\n         \r\n     console.log(\"****** fetchdigitalmargetingsCount result   ===== **\"+JSON.stringify(result))\r\n   this.totalDocRecords = result;\r\n   this.loading = false;\r\n\r\n   console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n \r\n }, (err) => {\r\n   this.loading = false;\r\n   console.log(err);\r\n });\r\n }\r\n\r\n fetchDigitalmargetings(){\r\n  \r\n  let data = {pageNo:this.pageNo,perPage:this.pageSize,filter : this.allDynaFilter}\r\n\r\nthis.dataService.fetchDigitalmargetings(data).then((result:any) => {        \r\n  this.normalFiltereduserListArr = []; \r\n    //this.normalFiltereduserListArr = result.map(element => {        \r\n     // return   element\r\n   // })\r\n\r\n  for(var i in result){\r\n    let digitalmargetingObj = result[i]\r\n   // if(!digitalmargetingObj['deliveryMode'] || digitalmargetingObj['deliveryMode'] == undefined ){\r\n  //    digitalmargetingObj['deliveryMode'] = \"General\"\r\n  //  }\r\n\r\n    console.log(\"****** digitalmargetingObj   ===== **\"+JSON.stringify(digitalmargetingObj))    \r\n    this.normalFiltereduserListArr.push(digitalmargetingObj)\r\n  }\r\n\r\n\r\n  //  console.log(\"****** this.fetchDigitalmargetingsByFilters   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))      \r\n    this.loading = false;\r\n\r\n}, (err) => {\r\n  this.normalFiltereduserListArr = []; \r\n  this.loading = false;\r\n  console.log(err);\r\n});\r\n \r\n}\r\n  \r\n  \r\n}\r\n","<div>\r\n  <app-page-header [heading]=\"'Digital Marketing Orders'\" [icon]=\"'fa-user'\"></app-page-header>\r\n</div>\r\n\r\n<div class=\"col-md-12\" >\r\n      \r\n  <!--div class=\"card-header\">\r\n      User type\r\n  </div-->\r\n  <div class=\"card-body table-responsive marginLeft\"> <span class=\"pb-3 \"><b> List of existing {{userKind}}s </b>  </span>\r\n    <table class=\"table table-blistdigitalmakted table-sm\">\r\n      <thead>\r\n      <tr>\r\n        <th>Lead Id </th>\r\n          <th>Customer Name</th>\r\n          <th>Customer Email</th>\r\n          <th>Customer Mobile</th>\r\n          <th>Medicine Details</th>\r\n                    \r\n          \r\n          <th>Created Date</th>\r\n          <th >Prescription</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n          <tbody *ngIf=\"normalFiltereduserListArr && normalFiltereduserListArr.length>0\">\r\n        \r\n          <tr class=\"{{obj.status | lowercase}}\"  *ngFor=\"let obj of normalFiltereduserListArr | paginate: { id:'forlistdigitalmakt1', itemsPerPage: pageSize, currentPage: pageNo, totalItems: totalDocRecords }\">              \r\n     \r\n              <td>{{obj?._id}}</td>                  \r\n              <td>{{obj?.name}}</td>                  \r\n              <td>{{obj?.emailId}}</td>                  \r\n              <td>{{obj?.mobileNumber}}</td>                  \r\n          <td >\r\n            \r\n            <table  class='table blistdigitalmaktless'>\r\n              <tr class=\"{{obj.status | lowercase}}\" *ngFor=\"let med of obj.medicineList\"><td class=\"customdiv\"><b>Name:</b></td><td>{{med?.medicineName}}</td><td>/</td><td class=\"customdiv\"><b>Qty:</b></td><td>{{med?.quantity}}</td><!--td>/</td><td class=\"customdiv\"><b>Mg:</b></td><td>{{med?.mg}}</td--></tr>\r\n            \r\n            </table>      \r\n\r\n          </td>              \r\n          \r\n<td >{{convertToHumanDate(obj.createdDate)}}</td>\r\n<!-- [disabled]=\"obj.status=='Confirmed'\"-->\r\n<td >\r\n<button class=\"btn btn-dark\" (click)=\"viewPrescription(obj)\"> View Prescription</button></td>    \r\n\r\n        </tr>\r\n      </tbody>\r\n      <div class=\"col-md-12 text-left clearfix \">\r\n      <pagination-controls class=\"my-pagination marginLeft\"  id=\"forlistdigitalmakt1\" \r\n           (pageChange)=\"pageChanged($event)\"\r\n                  (pageBoundsCorrection)=\"pageChanged($event)\"                      \r\n                  directionLinks=\"true\"               maxSize=\"9\"\r\n                  directionLinks=\"true\"\r\n                  autoHide=\"true\"\r\n                  responsive=\"true\"\r\n                  previousLabel=\"Prev\"\r\n                  nextLabel=\"Next\"\r\n                  screenReaderPaginationLabel=\"Pagination\"\r\n                  screenReaderPageLabel=\"page\"\r\n                  screenReaderCurrentLabel=\"You're on page\"></pagination-controls >\r\n      </div>\r\n      <tbody *ngIf=\"(normalFiltereduserListArr && normalFiltereduserListArr.length==0)\">\r\n          <tr>\r\n            <td colspan=\"7\" align = \"center\">No record available</td>\r\n          </tr>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n  \r\n\r\n\r\n  <ng-template #enlargedImageModal let-close=\"close\">\r\n    <div class=\"modal-header py-1\">\r\n      <h4 class=\"modal-title headerTitle mb-0\">Enlarged Prescription View</h4>\r\n      \r\n      <button type=\"button\" class=\"close\" (click)=\"closeCustomModal();\">×</button>\r\n  </div>\r\n  \r\n  <div class=\"modal-body\">\r\n    <img src=\"{{enlargedPic}}\" class=\"para\"/>\r\n  </div>\r\n  </ng-template>\r\n  <ng-template #enlargedPrescriptionModal let-close=\"close\">\r\n    <div class=\"modal-header py-1\">\r\n      <h4 class=\"modal-title headerTitle mb-0\">Enlarged View</h4>\r\n      \r\n      <button type=\"button\" class=\"close\" (click)=\"closeCustomModal2();\">×</button>\r\n  </div>\r\n  \r\n  <div class=\"modal-body\">\r\n    <img src=\"{{enlargedPrescPic}}\" class=\"para\"/>\r\n  </div>\r\n  </ng-template>\r\n\r\n<div class=\"my-container\">\r\n  <ng-template #customLoadingTemplate>\r\n    \r\n            Please wait..\r\n    \r\n</ng-template>\r\n  <ngx-loading [show]=\"loading\" [config]=\"{ primaryColour: 'blue',secondaryColour:'red',fullScreenBackdrop:false}\" [template]=\"customLoadingTemplate\"></ngx-loading>\r\n</div>\r\n\r\n\r\n\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\n\r\nimport { ListdigitalmaktComponent } from './listdigitalmakt.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\nimport { ListdigitalmaktRoutingModule } from './listdigitalmakt-routing.module';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AutocompleteLibModule,\r\n    NgxPaginationModule,\r\n    ListdigitalmaktRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBlistdigitalmaktRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [ListdigitalmaktComponent]\r\n})\r\nexport class ListdigitalmaktModule { }\r\n"],"sourceRoot":"webpack:///"}