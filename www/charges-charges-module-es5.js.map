{"version":3,"sources":["webpack:///src/app/layout/charges/charges-routing.module.ts","webpack:///src/app/layout/charges/charges.component.ts","webpack:///src/app/layout/charges/charges.component.html","webpack:///src/app/layout/charges/charges.module.ts"],"names":["routes","path","component","ChargesRoutingModule","forChild","imports","exports","ChargesComponent","datePipe","router","route","modal","toastr","_fb","dataService","loading","userKind","normalFiltereduserListArr","items","pageSize","RECORDSIZE","pageNo","tempArray","fromOrderPage","sexList","chargesObject","serviceChargeName","serviceChargeAmount","active","chargesObjectBase","user","role","doctor","charges","view","oldEmail","chargesFormGroup","group","required","fetchChargess","openAddChargesDialog","mode","Object","assign","modalReference","open","chargesFormModal","localStorage","getItem","navigate","fetchChargessCount","valid","submitAttempt","validateFields","controls","console","log","JSON","stringify","addCharges","then","result","closeModal","form_fill_failure_msg","successToastr","err","updateCharges","event","applyFilter","pageOfItems","totalDocRecords","data","perPage","map","element","value","userInfo","chargesId","_id","selector","templateUrl","styleUrls","providers","ChargesModule","forRoot","animationType","wanderingCubes","backdropBackgroundColour","backdropBorderRadius","primaryColour","secondaryColour","tertiaryColour","provide","useFactory","declarations"],"mappings":"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","file":"charges-charges-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChargesComponent } from './charges.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: ChargesComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ChargesRoutingModule { }\r\n","import { Component, OnInit,  ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport *  as moment from 'moment';\r\n\r\nimport { Config } from '../../config';\r\n\r\n\r\n\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { BaseComponent } from 'src/BaseComponent';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\n@Component({\r\n  selector: 'app-charges',\r\n  templateUrl: './charges.component.html',\r\n  styleUrls: ['./charges.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class ChargesComponent extends BaseComponent implements OnInit {\r\n\r\n  \r\n  public loading:boolean = true;\r\n  public closeResult: string;\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  \r\n  public userKind:string=\"charges\"\r\n  normalFiltereduserListArr:any = [];\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('chargesFormModal') chargesFormModal: TemplateRef<any>;\r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  \r\n  chargesFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  fromOrderPage:boolean = false\r\n  sexList = [\"Male\",\"Female\"]\r\n  oldEmail:string\r\n     chargesObject = {\r\n      serviceChargeName:\"\",\r\n    serviceChargeAmount:\"\",      \r\n      active:true      \r\n        \r\n    }\r\n    chargesObjectBase = {\r\n      serviceChargeName:\"\",\r\n      serviceChargeAmount:\"\",      \r\n      active:true      \r\n        \r\n        \r\n    }\r\n  constructor(\r\n    private datePipe : DatePipe,\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess,\r\n    \r\n    \r\n  ) {\r\n    super(router)\r\n\r\n    if(!this.user.role.doctor.charges.view){\r\n      return\r\n    }\r\n    this.oldEmail = ''\r\n\r\n    this.chargesFormGroup = _fb.group({\r\n      serviceChargeName: new FormControl(this.chargesObject.serviceChargeName, Validators.required),\r\n      active: new FormControl(this.chargesObject.active),            \r\n      serviceChargeAmount: new FormControl(this.chargesObject.serviceChargeAmount, Validators.required),\r\n      \r\n    });\r\n\r\n    this.loading = false;    \r\n    this.fetchChargess()   \r\n   \r\n  }\r\n  ngAfterViewInit(){\r\n    if(this.fromOrderPage){\r\n      this.openAddChargesDialog()\r\n    }\r\n   \r\n  }\r\n  \r\n  openAddChargesDialog(){\r\n    this.mode = \"add\"\r\n    this.chargesObject =Object.assign({}, this.chargesObjectBase); \r\n    this.modalReference = this.modal.open(this.chargesFormModal);\r\n  }\r\n  ngOnInit(){\r\n\r\n    \r\n\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n\r\n  \r\n\r\n    //this.pageSize = Config.RECORDSIZE;\r\n    //this.pageNo = 1\r\n    this.fetchChargessCount()      \r\n    \r\n //   this.items = Array(150).fill(0).map((x, i) => ({ id: (i + 1), name: `Item ${i + 1}`})\r\n  };\r\n\r\n  save(){\r\n//alert(\"mode: \"+this.mode)\r\n    \r\n\r\n    if(!this.chargesFormGroup.valid){\r\n        this.submitAttempt = true;        \r\n        this.validateFields(this.chargesFormGroup.controls)                   \r\n        return; \r\n    } \r\n    \r\n\r\n    \r\n    if(this.mode == \"add\"){\r\n      console.log(\"this.chargesObject for add == \"+JSON.stringify(this.chargesObject))\r\n      this.dataService.addCharges(this.chargesObject).then((result) => {                \r\n        //  console.log(\"result after adduser == \"+JSON.stringify(result))\r\n          this.fetchChargess()\r\n          this.mode = \"add\"\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('New Charges is added successfully');\r\n      }, (err) => {        \r\n           console.log(err);\r\n      });\r\n    }if(this.mode == \"edit\"){\r\n      this.chargesObject['chargesId'] = this.chargesObject['_id']\r\n      console.log(\"this.chargesObject for edit == \"+JSON.stringify(this.chargesObject))\r\n      this.dataService.updateCharges(this.chargesObject).then((result) => {\r\n        //  console.log(\"****** updateCharges result   ===== **\"+JSON.stringify(result))\r\n          //this.loading = false;\r\n          this.mode = \"add\"   \r\n          this.fetchChargess()\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('Charges is updated successfully'); \r\n      }, (err) => {\r\n        this.mode = \"add\"\r\n        //this.loading = false;\r\n        console.log(err);\r\n      });\r\n    }\r\n    \r\n}\r\nopenForeditCharges(user){\r\n\r\n  this.oldEmail = user['emailId']\r\n  this.chargesObject = Object.assign({}, user); \r\n\r\n  \r\n\r\n  //this.openAddChargesDialog()\r\n  this.mode = \"edit\"\r\n  this.modalReference = this.modal.open(this.chargesFormModal);\r\n\r\n  //console.log(\"this.chargesObject.dateOfBirth **\"+this.chargesObject.dateOfBirth)\r\n  //this.userObject.userId = user._id\r\n  //this.role = user.role\r\n\r\n  \r\n  \r\n}\r\n  pageChanged(event){\r\n    console.log(\"****** this.event   ===== **\"+event)\r\n    this.pageNo = event\r\n    this.applyFilter()\r\n  }\r\n  userKindChange(){\r\n    this.pageNo = 1\r\n    \r\n    this.applyFilter()\r\n  }\r\n  applyFilter() {\r\n      \r\n    \r\n               \r\n    if( this.userKind && this.userKind==\"charges\")  {      \r\n      this.fetchChargess()\r\n    }\r\n \r\n   \r\n    \r\n  }\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n  \r\n\r\n  fetchChargessCount(){\r\n  //  this.pageNo = 1\r\n  //  this.pageSize = 10\r\n    this.dataService.fetchChargessCount().then((result) => {\r\n        \r\n        console.log(\"****** fetchChargessCount result   ===== **\"+JSON.stringify(result))\r\n      this.totalDocRecords = result;\r\n      console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n  \r\n\r\n  fetchChargess(){\r\n  //  this.pageNo = 1\r\n    //this.pageSize = 10\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    this.dataService.fetchChargess(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = [];      \r\n\r\n        this.normalFiltereduserListArr = result.map(element => element)\r\n       // console.log(\"****** this.normalFiltereduserListArr   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n\r\n        this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n  \r\n  updateStatus(value, userInfo) {\r\n   // userInfo.active = value\r\n  //  console.log(\"****** userInfo   ===== **\"+JSON.stringify(userInfo))\r\n  let data ={}\r\n  userInfo.active = !userInfo.active\r\n  console.log(\"******  userInfo.active   ===== **\"+userInfo.active )\r\n    if( this.userKind && this.userKind==\"charges\")  {    \r\n      userInfo.chargesId = userInfo._id\r\n      data['chargesId'] = userInfo._id\r\n      data['active'] = userInfo.active\r\n      console.log(\"****** userInfo   ===== **\"+JSON.stringify(data))\r\n\r\n          this.dataService.updateCharges(data).then((result) => {\r\n          //  console.log(\"****** updateCharges result   ===== **\"+JSON.stringify(result))\r\n\r\n            this.loading = false;\r\n      \r\n        }, (err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    }\r\n \r\n  }\r\n\r\n  \r\n}","<div>\r\n  <app-page-header [heading]=\"'Service Charges'\" [icon]=\"'fa-user'\"></app-page-header>\r\n</div>\r\n\r\n  <div class=\"col-md-12\" >\r\n      \r\n          <!--div class=\"card-header\">\r\n              User type\r\n          </div-->\r\n          \r\n          \r\n                \r\n                <div class=\"col-md-12 text-right \" *ngIf=\"user.role.doctor.charges.create\">                      \r\n                  <div class=\"content\">\r\n                    <button type=\"button\" class=\"btn btn-dark\" (click)=\"openAddChargesDialog()\">Add Charges</button>\r\n                  </div>\r\n              </div>        \r\n\r\n      <div class=\"card-body table-responsive marginLeft\"> <span class=\"pb-3 \"><b> List of existing {{userKind}}s </b>  </span>\r\n        <table class=\"table table-striped table-bordered table-sm\" *ngIf=\"userKind == 'charges'\">\r\n          <thead>\r\n          <tr>\r\n            <th> Service Change ID</th>\r\n              <th>Service Charge Name</th>              \r\n              <th>Service Charge Amount</th>              \r\n              \r\n              <th *ngIf=\"user.role.doctor.charges.edit\">Enable/Disable</th>              \r\n              <th>Created Date</th>\r\n              <th *ngIf=\"user.role.doctor.charges.edit\">Edit</th>              \r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tbody *ngIf=\"normalFiltereduserListArr && normalFiltereduserListArr.length>0\">\r\n            \r\n              <tr *ngFor=\"let obj of normalFiltereduserListArr | paginate: { id:'forcharges', itemsPerPage: pageSize, currentPage: pageNo, totalItems: totalDocRecords }\">              \r\n                <td> {{obj?._id}} </td>\r\n              <td> {{obj?.serviceChargeName}} </td>\r\n              <td>{{obj.serviceChargeAmount}}</td>              \r\n              <td *ngIf=\"user.role.doctor.charges.edit\">               \r\n                <ui-switch [(ngModel)]=\"obj.active\" (change)=\"updateStatus($event, obj)\"></ui-switch>\r\n                    \r\n              </td>\r\n              \r\n      <td >{{convertToHumanDate(obj.createdDate)}}</td>\r\n      <td *ngIf=\"user.role.doctor.charges.edit\" >\r\n        <button class=\"btn btn-dark\" (click)=\"openForeditCharges(obj)\"> Edit </button></td>    \r\n            </tr>\r\n          </tbody>\r\n          <div class=\"col-md-12 text-left clearfix \">\r\n          <pagination-controls class=\"my-pagination marginLeft\" *ngIf=\"userKind=='charges'\" id=\"forcharges\" \r\n               (pageChange)=\"pageChanged($event)\"\r\n                      (pageBoundsCorrection)=\"pageChanged($event)\"                      \r\n                      directionLinks=\"true\"               maxSize=\"9\"\r\n                      directionLinks=\"true\"\r\n                      autoHide=\"true\"\r\n                      responsive=\"true\"\r\n                      previousLabel=\"Prev\"\r\n                      nextLabel=\"Next\"\r\n                      screenReaderPaginationLabel=\"Pagination\"\r\n                      screenReaderPageLabel=\"page\"\r\n                      screenReaderCurrentLabel=\"You're on page\"></pagination-controls >\r\n          </div>\r\n          <tbody *ngIf=\"(normalFiltereduserListArr && normalFiltereduserListArr.length==0)\">\r\n              <tr>\r\n                <td colspan=\"7\" align = \"center\">No record available</td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n\r\n\r\n\r\n      <ng-template #chargesFormModal let-close=\"close\">\r\n        <form [formGroup]=\"chargesFormGroup\" class=\"custom_timebox p-0\">\r\n            <div class=\"modal-header py-1\">\r\n                    <h4 class=\"modal-title headerTitle mb-0\">{{mode | titlecase}} Charges</h4>\r\n                    <button type=\"button\" class=\"close\" (click)=\"closeModal();\">×</button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 form-group\">\r\n                        <label for=\"name\" class=\"labelTitles\"><b>Services Charge Name</b></label>\r\n                    </div>\r\n                    <div class=\"col-md-12 marginTop\">\r\n                        <input class=\"form-control labelValue\" [(ngModel)]=\"chargesObject.serviceChargeName\"  formControlName=\"serviceChargeName\" placeholder=\"Enter Service Charge Name\">\r\n                    </div>\r\n                </div>\r\n\r\n                <!--pan changeText>Welcome to {{chargesObject.catValue}}.</span-->\r\n\r\n                \r\n                <div class=\"row \">\r\n                  <div class=\"col-md-12 form-group\">\r\n                      <label for=\"email\" class=\"labelTitles\"><b> Services Charge Amount</b></label>\r\n                  </div>\r\n                  <div class=\"col-md-12 marginTop\">\r\n                          <input class=\"form-control\" [(ngModel)]=\"chargesObject.serviceChargeAmount\" formControlName=\"serviceChargeAmount\"\r\n                          placeholder=\"Enter Service Charge Amount\">\r\n                          \r\n                   </div>\r\n                </div>\r\n\r\n\r\n\r\n             </div>\r\n             <div class=\"modal-footer\">\r\n                <button [disabled]=\"!chargesFormGroup.valid\" type=\"button\" class=\"btn btn-primary m-10\"\r\n                    (click)=\"save();\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"closeModal();\">Cancel</button>\r\n            </div>\r\n        </form>\r\n        <p *ngIf=\"submitAttempt\" class=\"cutomeerrortext\">\r\n                \r\n         <span class=\"redcolor ml-2\"><i class=\"fa fas fa-exclamation\"></i><b>&nbsp;Fix The Error : </b></span> {{form_fill_failure_msg}}\r\n          \r\n        </p>\r\n</ng-template>\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n<!--div class=\"my-container\">\r\n  <ngx-loading [show]=\"loading\"></ngx-loading>\r\n</div-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { ChargesRoutingModule } from './charges-routing.module';\r\nimport { ChargesComponent } from './charges.component';\r\n\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n\r\n    NgxPaginationModule,\r\n    ChargesRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBorderRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [ChargesComponent]\r\n})\r\nexport class ChargesModule { }"]}