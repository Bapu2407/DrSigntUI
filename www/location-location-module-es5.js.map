{"version":3,"sources":["webpack:///src/app/layout/location/location-routing.module.ts","webpack:///src/app/layout/location/location.component.html","webpack:///src/app/layout/location/location.component.ts","webpack:///src/app/layout/location/location.module.ts"],"names":["routes","path","component","LocationRoutingModule","forChild","imports","exports","LocationComponent","datePipe","router","modal","toastr","_fb","dataService","loading","patientList","states","locationList","userKind","normalFiltereduserListArr","items","pageSize","RECORDSIZE","pageNo","tempArray","keywordDoctor","locationObject","active","doctorID","dateTime","date","time","addByID","user","name","area","address","city","attendantID","state","nearByLocation","latitude","longitude","slot","doctorList","attendantList","locationObjectBase","openingMeridian","role","doctor","location","view","locationFormGroup","group","required","doctorName","dateTimeitems","array","createdateTimeItem","fetchLocations","get","push","controls","i","removeAt","item","patchValue","fetchAttendantList","then","result","map","element","err","val","data","fetchAllDoctors","mode","Object","assign","modalReference","open","locationFormModal","localStorage","getItem","navigate","fetchLocationsCount","valid","submitAttempt","validateFields","length","formObject","at","console","log","JSON","stringify","value","convertTimeFormogo","convertDate","fromJsDateToLocationdateTimeFormat","addLocation","closeModal","form_fill_failure_msg","successToastr","updateLocation","dateTimeArray","backTONgTImeFOrmat","convertFromddmmyyy","transform","earlierAttendent","fetchDoctrById","doctorId","Promise","resolve","error","event","applyFilter","pageOfItems","perPage","fetchPatients","totalDocRecords","forEach","index","userInfo","locationId","_id","pageChanged","selector","templateUrl","styleUrls","providers","LocationModule","forRoot","animationType","wanderingCubes","backdropBackgroundColour","backdropBorderRadius","primaryColour","secondaryColour","tertiaryColour","provide","useFactory","declarations"],"mappings":"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","file":"location-location-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LocationComponent } from './location.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: LocationComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LocationRoutingModule { }\r\n","<div>\r\n  <app-page-header [heading]=\"'Practice Location'\" [icon]=\"'fa-user'\"></app-page-header>\r\n</div>\r\n\r\n  <div class=\"col-md-12\" >\r\n      \r\n          <!--div class=\"card-header\">\r\n              User type\r\n          </div-->\r\n          \r\n          \r\n                \r\n                <div class=\"col-md-12 text-right \" *ngIf=\"user.role.doctor.location.create\">                      \r\n                  <div class=\"content\">\r\n                    <button type=\"button\" class=\"btn btn-dark\" (click)=\"openAddLocationDialog()\">Add Practice Location</button>\r\n                  </div>\r\n              </div>\r\n             \r\n          \r\n          \r\n\r\n      <div class=\"card-body table-responsive marginLeft\"> <span class=\"pb-3 \"><b> List of existing {{userKind}}s </b>  </span>\r\n        <table class=\"table table-striped table-bordered table-sm\">\r\n          <thead>\r\n          <tr>\r\n            <th>Location Details</th>\r\n              <th>Doctor Name</th>\r\n              <th>AttendantID</th>\r\n              <th>Near By Location</th>            \r\n              <th>Slot</th>      \r\n              \r\n              <th *ngIf=\"user.role.doctor.location.edit\">Enable/Disable</th>\r\n              \r\n              <th>Created Date</th>\r\n              <th *ngIf=\"user.role.doctor.location.edit\">Edit</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tbody *ngIf=\"normalFiltereduserListArr && normalFiltereduserListArr.length>0\">\r\n            \r\n              <tr *ngFor=\"let obj of normalFiltereduserListArr | paginate: { id:'forlocation1', itemsPerPage: pageSize, currentPage: pageNo, totalItems: totalDocRecords }\">              \r\n                <td>\r\n                            \r\n                  <table  class='table borderless'><tr><td class=\"customdiv\"><b>Address</b></td><td>{{obj?.address}}</td></tr>\r\n\r\n                    <tr><td class=\"customdiv\"><b>Area</b></td><td>{{obj?.area}}</td></tr>\r\n\r\n                    <tr><td class=\"customdiv\"><b>City</b></td><td>{{obj?.city}}</td></tr>\r\n                    <tr><td class=\"customdiv\"><b>State</b></td><td>{{obj?.state}}</td></tr>\r\n                  \r\n                  </table>      \r\n\r\n                </td>\r\n                  <td>{{obj?.doctor?.name}}</td>                  \r\n              <td>{{obj?.attendantID}}</td>              \r\n              <td>{{obj?.nearByLocation}}</td>\r\n              <td>{{obj?.slot}}</td>\r\n              <!--td *ngIf=\"user.role.doctor.location.edit\"> \r\n                <span  *ngIf=\"obj.active\">Enabled</span>\r\n                <span *ngIf=\"!obj.active\">Disabled</span>\r\n            </td-->\r\n              <td *ngIf=\"user.role.doctor.location.edit\">               \r\n                <ui-switch [(ngModel)]=\"obj.active\" (change)=\"updateStatus($event, obj)\"></ui-switch>\r\n                    \r\n              </td>              \r\n<td >{{convertToHumanDate(obj.createdDate)}}</td>\r\n\r\n<td *ngIf=\"user.role.doctor.location.edit\" ><button class=\"btn btn-dark\" (click)=\"openForeditLocation(obj)\"> Edit </button></td>    \r\n\r\n            </tr>\r\n          </tbody>\r\n          <div class=\"col-md-12 text-left clearfix \">\r\n          <pagination-controls class=\"my-pagination marginLeft\"  id=\"forlocation1\" \r\n               (pageChange)=\"pageChanged($event)\"\r\n                      (pageBoundsCorrection)=\"pageChanged($event)\"                      \r\n                      directionLinks=\"true\"               maxSize=\"9\"\r\n                      directionLinks=\"true\"\r\n                      autoHide=\"true\"\r\n                      responsive=\"true\"\r\n                      previousLabel=\"Prev\"\r\n                      nextLabel=\"Next\"\r\n                      screenReaderPaginationLabel=\"Pagination\"\r\n                      screenReaderPageLabel=\"page\"\r\n                      screenReaderCurrentLabel=\"You're on page\"></pagination-controls >\r\n          </div>\r\n          <tbody *ngIf=\"(normalFiltereduserListArr && normalFiltereduserListArr.length==0)\">\r\n              <tr>\r\n                <td colspan=\"7\" align = \"center\">No record available</td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n\r\n\r\n\r\n      <ng-template #locationFormModal let-close=\"close\">\r\n        <form [formGroup]=\"locationFormGroup\" class=\"custom_timebox p-0\">\r\n            <div class=\"modal-header py-1\">\r\n                    <h4 class=\"modal-title headerTitle mb-0\">Add Location</h4>\r\n                    <button type=\"button\" class=\"close\" (click)=\"closeModal();\">×</button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12 form-group\">\r\n                      <label for=\"name\" class=\"labelTitles\"><b>Name</b></label><span class=\"required-asterisk\">*</span>\r\n                  </div>\r\n                  <div class=\"col-md-12 marginTop\">\r\n                      <input class=\"form-control labelValue\" [(ngModel)]=\"locationObject.name\"  formControlName=\"name\" placeholder=\"Enter name\">\r\n                  </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12 form-group\">\r\n                    <label for=\"name\" class=\"labelTitles\"><b>City</b></label><span class=\"required-asterisk\">*</span>\r\n                </div>\r\n                <div class=\"col-md-12 marginTop\">\r\n                    <input class=\"form-control labelValue\" [(ngModel)]=\"locationObject.city\"  formControlName=\"city\" placeholder=\"Enter city\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 form-group\">\r\n                  <label for=\"name\" class=\"labelTitles\"><b>Area</b></label><span class=\"required-asterisk\">*</span>\r\n              </div>\r\n              <div class=\"col-md-12 marginTop\">\r\n                  <input class=\"form-control labelValue\" [(ngModel)]=\"locationObject.area\"  formControlName=\"area\" placeholder=\"Enter Area\">\r\n              </div>\r\n          </div>\r\n\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 form-group\">\r\n                  <label for=\"name\" class=\"labelTitles\"><b>Address</b></label><span class=\"required-asterisk\">*</span>\r\n              </div>\r\n              <div class=\"col-md-12 marginTop\">\r\n                <textarea class=\"form-control\" [(ngModel)]=\"locationObject.address\"  formControlName=\"address\"  rows=\"3\"></textarea>\r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 form-group\">\r\n                <label for=\"name\" class=\"labelTitles\"><b>Near By Location</b></label><span class=\"required-asterisk\">*</span>\r\n            </div>\r\n            <div class=\"col-md-12 marginTop\">\r\n                <input class=\"form-control labelValue\" [(ngModel)]=\"locationObject.nearByLocation\"  formControlName=\"nearByLocation\" placeholder=\"Enter NearByLocation\">\r\n            </div>\r\n        </div>\r\n\r\n        <div formArrayName=\"dateTimeitems\"\r\n            *ngFor=\"let item of getControls(); let i = index;\">\r\n\r\n                    <div [formGroupName]=\"i\">\r\n                      <div class=\"divider mt-3\"></div>\r\n                      <div class=\"row \">\r\n                        <div class=\"col-md-12 form-group\">\r\n                            <label class=\"labelTitles\"><b>Date</b></label>\r\n                        </div>\r\n                        <!--pattern=\"\\d{1,2}/\\d{1,2}/\\d{4}\"-->\r\n                        <div class=\"col-md-12 marginTop\">\r\n                                <input type=\"date\"   class=\"form-control\" formControlName=\"date\"\r\n                                placeholder=\"Enter date\">\r\n                                \r\n                        </div>\r\n                  </div>\r\n\r\n                  <div class=\"row \">\r\n                    <div class=\"col-md-12 form-group\">\r\n                    <label class=\"labelValue\"><b>Time</b></label>\r\n                    <ngb-timepicker formControlName=\"time\" [meridian]=\"openingMeridian\">\r\n                    </ngb-timepicker>\r\n                    \r\n                  </div>\r\n                  \r\n                </div>\r\n\r\n          <div class=\"row text-right ml-2\">\r\n          <button class=\"btn btn-dark\" (click)=\"removeItem(i)\"> Remove Datetime </button>\r\n          </div>\r\n  </div>\r\n\r\n  <!--Chosen name: {{ orderForm.controls.items.controls[i].controls.name.value }} -->\r\n</div>\r\n\r\n<div class=\"col-md-12 text-right mt-4\">\r\n  <button class=\"btn btn-dark\" (click)=\"addItem()\"> Add Datetime </button>\r\n  </div>\r\n\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12\">\r\n                      <div class=\"form-group\">\r\n                          <label class=\"labelTitles\">State </label>\r\n                          <select formControlName=\"state\" [(ngModel)]=\"locationObject.state\" class=\"form-control\" name=\"state\"       >\r\n                            \r\n                              <option *ngFor=\"let state of states\" value=\"{{state}}\" class=\"labelValue\">{{state}}</option>\r\n                          </select>\r\n                         \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"labelTitles\">Select Doctor </label><span class=\"required-asterisk\">*</span>\r\n                  \r\n  \r\n                        <ng-autocomplete \r\n                        [data]=\"doctorList\"\r\n                        [(ngModel)] = \"doctorName\"\r\n                        formControlName=\"doctorName\"\r\n                        [searchKeyword]=\"keywordDoctor\"\r\n                        (selected)='doctorSelectEvent($event)'\r\n                        (inputChanged)='doctorLocationSearch($event)'\r\n                        \r\n                        [itemTemplate]=\"itemTemplate\"\r\n                        [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n                      </ng-autocomplete>\r\n                   \r\n                      \r\n                      <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n                        <a [innerHTML]=\"item.name\"></a>\r\n                        </ng-template>\r\n                        <ng-template #notFoundTemplate let-notFound>\r\n                        <div [innerHTML]=\"notFound\"></div>\r\n                        </ng-template>\r\n                        \r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"labelTitles\">Select Attendant </label>\r\n                        <select formControlName=\"attendantID\"  [(ngModel)]=\"locationObject.attendantID\"  class=\"form-control\" name=\"attendant\"\r\n                            >\r\n                           \r\n                            <option *ngFor=\"let attendant of attendantList\" value=\"{{attendant}}\" class=\"labelValue\">{{attendant}}</option>\r\n                        </select>\r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n                \r\n            <div class=\"row\">\r\n            <div class=\"col-md-12 form-group\">\r\n                <label for=\"name\" class=\"labelTitles\"><b>Slot</b></label>\r\n            </div>\r\n            <div class=\"col-md-12 marginTop\">\r\n                <input class=\"form-control labelValue\" [(ngModel)]=\"locationObject.slot\"  formControlName=\"slot\" placeholder=\"Enter slot\">\r\n            </div>\r\n        </div>\r\n\r\n         \r\n\r\n             </div>\r\n             <div class=\"modal-footer\">\r\n                <button [disabled]=\"!locationFormGroup.valid\" type=\"button\" class=\"btn btn-primary m-10\"\r\n                    (click)=\"save();\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"closeModal();\">Cancel</button>\r\n            </div>\r\n        </form>\r\n        <p *ngIf=\"submitAttempt\" class=\"cutomeerrortext\">\r\n                \r\n         <span class=\"redcolor ml-2\"><i class=\"fa fas fa-exclamation\"></i><b>&nbsp;Fix The Error : </b></span> {{form_fill_failure_msg}}\r\n          \r\n        </p>\r\n</ng-template>\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n<!--div class=\"my-container\">\r\n  <ngx-loading [show]=\"loading\"></ngx-loading>\r\n</div-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, NgZone, ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport *  as moment from 'moment';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\nimport { Config } from '../../config';\r\n\r\n\r\nimport { BaseComponent } from 'src/BaseComponent';\r\nimport { FormBuilder, FormGroup, FormControl, Validators,FormArray } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\n@Component({\r\n  selector: 'app-location',\r\n  templateUrl: './location.component.html',\r\n  styleUrls: ['./location.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class LocationComponent extends BaseComponent implements OnInit {\r\n\r\n  @ViewChild('fileInputDemoPhoto') fileInputDemoPhoto :ElementRef;;\r\n  public loading:boolean = true;\r\n  public closeResult: string;\r\n  patientList:any = []\r\n  states = Config.states\r\n  locationList:any = []\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  @ViewChild('acc') accordionComponent: NgbAccordion;\r\n  public userKind:string=\"location\"\r\n  normalFiltereduserListArr:any = [];\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('locationFormModal') locationFormModal: TemplateRef<any>;\r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  locationFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  customLocationtime : {\r\n    hour: 10,\r\n    minute: 20,\r\n\r\n};\r\nkeywordDoctor = \"name\"\r\n  locationObject =  \r\n  {    \r\n    active : true,   \r\n    doctorID : \"\", \r\n    dateTime : [ \r\n      {\r\n          date : \"25-03-2020\",\r\n          time : \"05:30 am\"\r\n      }\r\n    ],    \r\n    addByID : this.user['_id'],\r\n    name : \"\",\r\n    area : \"\",\r\n    address : \"\",\r\n    city : \"\",\r\n    attendantID : \"\",\r\n    state : \"\",\r\n    nearByLocation : \"\",\r\n    latitude : 22.604298,\r\n    longitude : 88.421425,    \r\n    slot : 3\r\n  }\r\n  doctorList:any  = []\r\n  attendantList:any = []\r\n  locationObjectBase =  \r\n  {    \r\n    active : true,   \r\n    doctorID : \"\", \r\n    dateTime : [ \r\n      {\r\n          date : \"25-03-2020\",\r\n          time : \"05:30 am\"\r\n      }\r\n    ],    \r\n    addByID : this.user['_id'],\r\n    name : \"\",\r\n    area : \"\",\r\n    address : \"\",\r\n    city : \"\",\r\n    attendantID : \"\",\r\n    state : \"\",\r\n    nearByLocation : \"\",\r\n    latitude : 22.604298,\r\n    longitude : 88.421425,    \r\n    slot : 3\r\n  }\r\n  doctorName:any\r\n  dateTimeitems: FormArray;\r\n  openingMeridian : boolean = true;\r\n\r\n  constructor(\r\n    private datePipe : DatePipe,\r\n    public router: Router,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess,\r\n    \r\n    \r\n  ) {\r\n    super(router)\r\n  //  this.customLocationtime.hour = 9\r\n   // this.customLocationtime.minute = 10\r\n\r\n    if(!this.user.role.doctor.location.view){\r\n      return\r\n    }\r\n   \r\n    this.locationFormGroup = _fb.group({\r\n      doctorID: new FormControl(this.locationObject.doctorID, Validators.required),\r\n      doctorName: new FormControl(''),\r\n      attendantID: new FormControl(this.locationObject.attendantID, Validators.required),\r\n      name: new FormControl(this.locationObject.name, Validators.required),\r\n      city: new FormControl(this.locationObject.city, Validators.required),\r\n      area: new FormControl(this.locationObject.area),\r\n      nearByLocation: new FormControl(this.locationObject.nearByLocation),\r\n      address: new FormControl(this.locationObject.address, Validators.required),\r\n      state: new FormControl(this.locationObject.state, Validators.required),\r\n      slot: new FormControl(this.locationObject.slot)  ,    \r\n      dateTimeitems: this._fb.array([ this.createdateTimeItem() ])\r\n    });\r\n\r\n    //this.locationFormGroup.valueChanges.subscribe(data => console.log('form changes', data));\r\n    this.loading = false;    \r\n    this.fetchLocations()   \r\n    \r\n  }\r\n  createdateTimeItem(): FormGroup {\r\n    return this._fb.group({\r\n      date: '',\r\n      time: ''\r\n    });\r\n  }\r\n/*\r\n  ngAfterViewInit(){\r\n    this.dataService.fetchAllPatients().then((result:[]) => {\r\n      this.patientList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n\r\n   \r\n  }\r\n  */\r\n  getLocation(){\r\n\r\n  }\r\n  addItem(): void {\r\n    this.dateTimeitems = this.locationFormGroup.get('dateTimeitems') as FormArray;\r\n    this.dateTimeitems.push(this.createdateTimeItem());\r\n  }\r\n\r\n  getControls() {\r\n    return (this.locationFormGroup.get('dateTimeitems') as FormArray).controls;\r\n  }\r\n\r\n  removeItem(i){\r\n\r\n     this.dateTimeitems = this.locationFormGroup.get('dateTimeitems') as FormArray;\r\n    this.dateTimeitems.removeAt(i)  \r\n\r\n  }\r\n\r\n  doctorSelectEvent(item) {\r\n    if(item){\r\n    this.locationFormGroup.get('doctorID').patchValue(item['_id']);\r\n    this.locationObject.doctorID = item['_id']\r\n\r\n    this.dataService.fetchAttendantList({doctorID:this.locationObject.doctorID}).then((result:[]) => {\r\n      this.attendantList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n\r\n    //console.log(\" inside locationSelectEvent \"+JSON.stringify(item))\r\n    }\r\n    // do something with selected item\r\n  }\r\n \r\n  doctorLocationSearch(val: string) {\r\n    //console.log(\" inside onChangePatientSearch val \"+val)\r\n   // if(val && val.length >2 ){\r\n    let data = {name:val}\r\n    this.dataService.fetchAllDoctors(data).then((result:[]) => {\r\n      this.doctorList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n   // }\r\n  }\r\n  openAddLocationDialog(){\r\n    this.mode = \"add\"\r\n    this.locationFormGroup = this._fb.group({\r\n      doctorID: new FormControl(this.locationObject.doctorID, Validators.required),\r\n      doctorName: new FormControl(''),\r\n      attendantID: new FormControl(this.locationObject.attendantID, Validators.required),\r\n      name: new FormControl(this.locationObject.name, Validators.required),\r\n      city: new FormControl(this.locationObject.city, Validators.required),\r\n      area: new FormControl(this.locationObject.area),\r\n      nearByLocation: new FormControl(this.locationObject.nearByLocation),\r\n      address: new FormControl(this.locationObject.address, Validators.required),\r\n      state: new FormControl(this.locationObject.state, Validators.required),\r\n      slot: new FormControl(this.locationObject.slot)  ,    \r\n      dateTimeitems: this._fb.array([ this.createdateTimeItem() ])\r\n    });\r\n    this.dateTimeitems = this.locationFormGroup.get('dateTimeitems') as FormArray;\r\n   // \r\n    //this.dateTimeitems.push({})\r\n    this.locationObject = Object.assign({}, this.locationObjectBase); \r\n    this.modalReference = this.modal.open(this.locationFormModal);\r\n  }\r\n  getPatient(){\r\n\r\n  }\r\n \r\n  ngOnInit(){\r\n\r\n\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n\r\n  \r\n\r\n    //this.pageSize = Config.RECORDSIZE;\r\n    //this.pageNo = 1\r\n    this.fetchLocationsCount()  \r\n    this.fetchLocations()    \r\n    \r\n //   this.items = Array(150).fill(0).map((x, i) => ({ id: (i + 1), name: `Item ${i + 1}`})\r\n  };\r\n  save(){\r\n//alert(\"mode: \"+this.mode)\r\n   \r\n\r\n    if(!this.locationFormGroup.valid){\r\n        this.submitAttempt = true;        \r\n        this.validateFields(this.locationFormGroup.controls)                   \r\n        return; \r\n    } \r\n\r\n    this.locationObject.addByID = this.user['_id']\r\n\r\n   let dateTime = []\r\n    for(var i = 0 ; i< this.dateTimeitems.length ; i++){      \r\n      let formObject = this.dateTimeitems.at(i)      \r\n\r\n       // if(formObject && formObject.get('time').value != undefined && formObject.get('date').value != undefined ){\r\n            \r\n            console.log(\"time before conversion**\"+JSON.stringify(formObject.get('time').value)) \r\n            let time = this.convertTimeFormogo(formObject.get('time').value)\r\n            console.log(\"time after conversion **\"+time) \r\n\r\n            console.log(\" date before conversion **\"+JSON.stringify(formObject.get('date').value)) \r\n\r\n          let convertDate = this.fromJsDateToLocationdateTimeFormat(formObject.get('date').value)\r\n          console.log(\"convertDate **\"+convertDate)             \r\n          dateTime.push({date:convertDate,time:time})\r\n       // }\r\n   \r\n  }\r\n\r\n    this.locationObject.dateTime = dateTime\r\n    if(this.mode == \"add\"){\r\n      delete this.locationObject['doctor']\r\n      console.log(\"this.locationObject for add == \"+JSON.stringify(this.locationObject))\r\n      this.dataService.addLocation(this.locationObject).then((result) => {                \r\n        //  console.log(\"result after adduser == \"+JSON.stringify(result))\r\n          this.fetchLocations()\r\n          this.mode = \"add\"\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('New location is added successfully');\r\n          \r\n      }, (err) => {        \r\n      console.log(err);\r\n      });\r\n      \r\n    }if(this.mode == \"edit\"){\r\n      //delete this.locationObject['patient']\r\n      delete this.locationObject['doctor']\r\n      this.locationObject['practiceLocationId'] = this.locationObject['_id']\r\n      console.log(\"this.locationObject for edit == \"+JSON.stringify(this.locationObject))\r\n      this.dataService.updateLocation(this.locationObject).then((result) => {\r\n        //  console.log(\"****** updatelocation result   ===== **\"+JSON.stringify(result))\r\n          //this.loading = false;\r\n          this.mode = \"add\"   \r\n          this.fetchLocations()\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('location is updated successfully'); \r\n      }, (err) => {\r\n        this.mode = \"add\"\r\n        //this.loading = false;\r\n        console.log(err);\r\n      });\r\n      \r\n    }\r\n    \r\n}\r\nasync openForeditLocation(user){\r\n\r\n  \r\n  this.locationObject = Object.assign({}, user); \r\n\r\n  //console.log(\"dateTimeArray LENGTH **\"+dateTimeArray.length)\r\n\r\n\r\n  this.locationFormGroup = this._fb.group({\r\n    doctorID: new FormControl(this.locationObject.doctorID, Validators.required),\r\n    doctorName: new FormControl(''),\r\n    attendantID: new FormControl(this.locationObject.attendantID, Validators.required),\r\n    name: new FormControl(this.locationObject.name, Validators.required),\r\n    city: new FormControl(this.locationObject.city, Validators.required),\r\n    area: new FormControl(this.locationObject.area),\r\n    nearByLocation: new FormControl(this.locationObject.nearByLocation),\r\n    address: new FormControl(this.locationObject.address, Validators.required),\r\n    state: new FormControl(this.locationObject.state, Validators.required),\r\n    slot: new FormControl(this.locationObject.slot)  ,    \r\n    dateTimeitems: this._fb.array([ this.createdateTimeItem() ])\r\n  });\r\n\r\n\r\n  console.log(\"this.locationObject ==\"+JSON.stringify(this.locationObject))\r\n  let dateTimeArray = []\r\n  this.dateTimeitems = this.locationFormGroup.get('dateTimeitems') as FormArray;\r\n    this.dateTimeitems.removeAt(0)  \r\n  for(var i in this.locationObject.dateTime){\r\n      let dateTime = this.locationObject.dateTime[i]\r\n      let time = this.backTONgTImeFOrmat(dateTime.time)\r\n      console.log(\"time **\"+JSON.stringify(time)) \r\n      let convertDate = this.convertFromddmmyyy(dateTime.date)\r\n      console.log(\"convertDate **\"+convertDate) \r\n      let date = this.datePipe.transform( convertDate, 'yyyy-MM-dd')\r\n      dateTimeArray.push({date:date,time:time})\r\n    //this.dateTimeitems.push({date:date,time:time})\r\n    \r\n    this.dateTimeitems.push(this._fb.group({\r\n      date: date,\r\n      time: time\r\n    }))\r\n  }\r\n\r\n  console.log(\"dateTimeArray LENGTH **\"+dateTimeArray.length)\r\n  let earlierAttendent = this.locationObject.attendantID\r\n  this.doctorName = await this.fetchDoctrById(this.locationObject.doctorID)\r\n\r\n  this.dataService.fetchAttendantList({doctorID:this.locationObject.doctorID}).then((result:[]) => {\r\n    this.attendantList = result.map(element => element)\r\n  }, (err) => {\r\n      //console.log(err);\r\n  });\r\n\r\n  //this.locationObject.attendantID = earlierAttendent\r\n\r\n  //this.locationFormGroup.get('dateTimeitems').patchValue(dateTimeArray)\r\n  //addItem\r\n\r\n  this.mode = \"edit\"\r\n  this.modalReference = this.modal.open(this.locationFormModal);\r\n\r\n  //this.userObject.userId = user._id\r\n  //this.role = user.role\r\n\r\n  \r\n  \r\n}\r\nfetchDoctrById(doctorId){\r\n  let data = {doctorId:doctorId}\r\n  try {      \r\n      return new Promise((resolve) => {    \r\n            this.dataService.fetchDoctrById(data).then((result) => {\r\n              \r\n            //console.log(\"****** location  ===== **\"+JSON.stringify(result))\r\n                resolve(result['name'])                 \r\n        \r\n            }, (err) => {\r\n              resolve('')                 \r\n            //this.loading = false;\r\n            \r\n            //console.log(err);\r\n            });\r\n        });\r\n  }\r\n  catch(error) {\r\n      //console.log('Error', error);\r\n  }\r\n}\r\n  pageChanged(event){\r\n    console.log(\"****** this.event   ===== **\"+event)\r\n    this.pageNo = event\r\n    this.applyFilter()\r\n  }\r\n  userKindChange(){\r\n    this.pageNo = 1\r\n    \r\n    this.applyFilter()\r\n  }\r\n  applyFilter() {\r\n      \r\n      this.fetchLocations()\r\n    \r\n    \r\n  }\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n  fetchPatients(){\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    this.dataService.fetchPatients(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = [];      \r\n      this.normalFiltereduserListArr = result.map(element => element)\r\n     // console.log(\"****** this.normalFiltereduserListArr   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n  \r\n\r\n\r\n  fetchLocationsCount(){\r\n  //  this.pageNo = 1\r\n  //  this.pageSize = 10\r\n    this.dataService.fetchLocationsCount().then((result) => {\r\n        \r\n        console.log(\"****** fetchlocationsCount result   ===== **\"+JSON.stringify(result))\r\n      this.totalDocRecords = result;\r\n      console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n \r\n\r\n  fetchLocations(){\r\n  //  this.pageNo = 1\r\n    //this.pageSize = 10\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    this.dataService.fetchLocations(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = [];  \r\n        this.normalFiltereduserListArr = result.map(element => element)\r\n        //console.log(\"****** this.fetchLocations   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n        this.normalFiltereduserListArr.forEach(function(location, index){\r\n          console.log(\"****** active   ===== **\"+ location.active)\r\n        })\r\n        \r\n        this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n  \r\n  updateStatus(value, userInfo) {\r\n   // userInfo.active = value\r\n  //  console.log(\"****** userInfo   ===== **\"+JSON.stringify(userInfo))\r\n  let data ={}\r\n  userInfo.active = !userInfo.active\r\n  console.log(\"******  userInfo.active   ===== **\"+userInfo.active )\r\n    \r\n      userInfo.locationId = userInfo._id\r\n      data['locationId'] = userInfo._id\r\n      data['active'] = userInfo.active\r\n      console.log(\"****** userInfo   ===== **\"+JSON.stringify(data))\r\n\r\n          this.dataService.updateLocation(data).then((result) => {\r\n          //  console.log(\"****** updatelocation result   ===== **\"+JSON.stringify(result))\r\n          this.fetchLocations()\r\n            this.loading = false;\r\n      \r\n        }, (err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    \r\n    this.toastr.successToastr('Location record updated successfully');\r\n  }\r\n\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { LocationRoutingModule } from './location-routing.module';\r\nimport { LocationComponent } from './location.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AutocompleteLibModule,\r\n    NgxPaginationModule,\r\n    LocationRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBorderRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [LocationComponent]\r\n})\r\nexport class LocationModule { }\r\n"]}