{"version":3,"sources":["webpack:///src/app/layout/digitalmargeting/digitalmargeting-routing.module.ts","webpack:///src/app/layout/digitalmargeting/digitalmargeting.component.ts","webpack:///src/app/layout/digitalmargeting/digitalmargeting.component.html","webpack:///src/app/layout/digitalmargeting/digitalmargeting.module.ts"],"names":["routes","path","component","DigitalmargetingRoutingModule","forChild","imports","exports","DigitalmargetingComponent","router","route","modal","toastr","_fb","dataService","loadingCustomeMsg","otpVerified","sendOTPflag","verifyActionStart","otpEnteredByUser","fromOldImageList","loading","isPrescriptionUploaded","showOldPrescription","allDynaFilter","patientList","customerList","states","keywordCustomer","fetchDigitalmargetingByCustomer","digitalmargetingList","fromCustomerPage","userKind","normalFiltereduserListArr","customerOldPrescriptionListArr","delModeList","items","pageSize","RECORDSIZE","pageNo","tempArray","searchByCustomer","searchByDigitalmargetingDate","searchByDigitalmargetingId","searchByStatus","keywordMedicine","digitalmargetingObject","name","emailId","mobileNumber","active","medicineList","medicineId","medicineName","quantity","mg","mrp","uploadedFile","uploadedFileURL","deliveryMode","status","medicineArray","b2bPrice","gst","hsnCode","vat","otherTax","discounts","medicineType","category","attendantList","digitalmargetingObjectBase","openingMeridian","digitalmargetingFormGroup","buildForm","openforAddDigitalmargetingDialog","minm","maxm","randomOTP","Math","floor","random","group","required","pattern","minLength","medicineListItems","array","createMedicineItem","gfg","mobileNUmber","controls","value","console","log","get","valid","touched","length","otpData","otp","phone","setTimeout","sendOTP","then","result","err","errorToastr","message","alert","navigate","fromDigitalmargetingPage","medicine","push","i","removeAt","modalSearchFilerReference","dismiss","Object","assign","customerId","mode","e","submitAttempt","validateFields","formObject","at","JSON","stringify","addDigitalmargeting","commonAfterSaveCode","reinitialise","form_fill_failure_msg","successToastr","closeMainModal","modalReferenceImage","open","enlargedImageModal","obj","image","uploadPhotoDigitalmargetingPrescriptionURL","enlargedPrescPic","modalReferencePrescriptionImage","enlargedPrescriptionModal","selectValue","oldPresc","_id","uploadPhotoDigitalmargetingPrescription","patchValue","error","photoType","enlargedPic","event","reader","FileReader","onload","readerEvent","imageData","target","files","readAsDataURL","document","getElementById","prescriptionSource","URL","createObjectURL","setAttribute","dateTimeArray","user","modalReferenceDigitalmargetingForm","digitalmargetingFormModal","data","commonCodeDuringEdit","fetchAllDigitalmargetingPrescriptions","digitalmargetingDate","digitalmargetingId","digitalmargetingStatus","customerName","fetchDigitalmargetingsCount","totalDocRecords","fetchDigitalmargetings","applyFilter","dynaFilterArry","dynaFilter","converteddate","fromJsDateToLocationdateTimeFormat","createdDate","$and","closeSearchModal","close","undefined","pageOfItems","item","val","fetchAllCustomers","map","element","perPage","filter","digitalmargetingObj","addItem","enlargePic","capturePhoto","save","selector","templateUrl","styleUrls","providers","DigitalmargetingModule","forRoot","animationType","wanderingCubes","backdropBackgroundColour","backdropBdigitalmargetingRadius","primaryColour","secondaryColour","tertiaryColour","provide","useFactory","declarations"],"mappings":"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","file":"layout-digitalmargeting-digitalmargeting-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DigitalmargetingComponent } from './digitalmargeting.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: DigitalmargetingComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DigitalmargetingRoutingModule { }\r\n","import { Component, OnInit, NgZone, ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion,NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router , ActivatedRoute} from '@angular/router';\r\nimport *  as moment from 'moment';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\nimport { Config } from '../../config';\r\n\r\n\r\nimport { BaseComponentDM } from 'src/BaseComponentDM';\r\nimport { FormBuilder, FormGroup, FormControl, Validators,FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-digitalmargeting',\r\n  templateUrl: './digitalmargeting.component.html',\r\n  styleUrls: ['./digitalmargeting.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class DigitalmargetingComponent extends BaseComponentDM implements OnInit {\r\n  loadingCustomeMsg:any = \"Loading...\"\r\n  otpVerified:boolean = false\r\n  randomOTP:any\r\n  sendOTPflag:boolean = false\r\n  verifyActionStart:boolean = false\r\n  \r\n  otpEnteredByUser:any = ''\r\n  @ViewChild('myname') input: ElementRef;\r\n  @ViewChild('fileInputDemoPhoto') fileInputDemoPhoto :ElementRef;;\r\n  fromOldImageList:boolean = false\r\n  public loading:boolean = true;\r\n  public isPrescriptionUploaded = false\r\n  showOldPrescription:any = ''\r\n  public closeResult: string;\r\n  enlargedPic:any\r\n  enlargedPrescPic:any\r\n  allDynaFilter = null\r\n  patientList:any = []\r\n  customerList:any = []\r\n  digitalmargetingStatus:string\r\n  digitalmargetingId:string\r\n  digitalmargetingDate:string\r\n  states = Config.states\r\n  keywordCustomer:string = \"name\"\r\n  fetchDigitalmargetingByCustomer:boolean = false\r\n  digitalmargetingList:any = []\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  prescriptionSource:any\r\n  fromCustomerPage:boolean = false\r\n  @ViewChild('acc') accordionComponent: NgbAccordion;\r\n  public userKind:string=\"digitalmargeting\"\r\n  normalFiltereduserListArr:any = [];\r\n  customerOldPrescriptionListArr:any = [];\r\n  \r\n  modalSearchFilerReference: NgbModalRef;\r\n  delModeList:any = [\r\n    {\"value\":\"Express\",\"name\":\"Express\"},\r\n    {\"value\":\"General\",\"name\":\"General\"}  ]\r\n\r\n  modalReferenceDigitalmargetingForm: NgbModalRef;\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('digitalmargetingFormModal') digitalmargetingFormModal: TemplateRef<any>;\r\n   @ViewChild('searFiltersModal') searFiltersModal: TemplateRef<any>;\r\n   @ViewChild('enlargedImageModal') enlargedImageModal: TemplateRef<any>;\r\n   @ViewChild('enlargedPrescriptionModal') enlargedPrescriptionModal: TemplateRef<any>;\r\n\r\n   \r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  digitalmargetingFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  customDigitalmargetingtime : {\r\n    hour: 10,\r\n    minute: 20,\r\n\r\n};\r\nsearchByCustomer:boolean = false\r\nsearchByDigitalmargetingDate:boolean = false\r\nsearchByDigitalmargetingId:boolean = false\r\nsearchByStatus:boolean = false\r\n\r\n\r\nmedicineName:any\r\nkeywordMedicine = \"name\"\r\n  digitalmargetingObject =  \r\n  {     \r\n     name:\"\",\r\n  emailId:\"\",  \r\n  mobileNumber : \"9134683936\",\r\n    active : true,       \r\n    medicineList : [ \r\n      {\r\n        medicineId: '',             \r\n        medicineName : \"\",\r\n        quantity : \"\",\r\n        mg: '',\r\n        mrp:0,      \r\n        active:true,      \r\n        \"b2bPrice\" : \"\",\r\n        \"gst\" : \"0\",\r\n\r\n        \"hsnCode\" : \"0\",\r\n        \"vat\" : \"0\",\r\n        \"otherTax\" : \"0\",\r\n        \"discounts\" : \"0\",\r\n        \"medicineType\" : \"\",      \r\n        \"category\" : \"\"\r\n                \r\n      }\r\n    ],    \r\n    \r\n    uploadedFile:\"\",\r\n    uploadedFileURL:\"\",\r\n    deliveryMode:\"General\",\r\n    status : \"DigitalmargetingPlaced\"    \r\n  }\r\n\r\n  medicineArray:any = [[{\r\n    medicineId: '',             \r\n    medicineName : \"\",\r\n    quantity : \"\",\r\n    mg: '',\r\n    mrp:\"\",      \r\n    active:true,      \r\n    b2bPrice : \"\",\r\n    gst : \"0\",\r\n    hsnCode : \"0\",\r\n    vat : \"0\",\r\n    otherTax : \"0\",\r\n    discounts : \"0\",\r\n    medicineType : \"\",      \r\n    category : \"\"\r\n            \r\n  }]]\r\n  attendantList:any = []\r\n  digitalmargetingObjectBase =  \r\n  {    \r\n    name:\"\",\r\n    emailId:\"\",  \r\n    mobileNumber : \"9134683936\",\r\n    active : true,       \r\n    medicineList : [ \r\n      {\r\n        medicineId: '',             \r\n        medicineName : \"\",\r\n        quantity : \"\",\r\n        mg: '',\r\n        mrp:0,      \r\n        active:true,      \r\n        \"b2bPrice\" : \"\",\r\n        \"gst\" : \"0\",\r\n        \"hsnCode\" : \"0\",\r\n        \"vat\" : \"0\",\r\n        \"otherTax\" : \"0\",\r\n        \"discounts\" : \"0\",\r\n        \"medicineType\" : \"\",      \r\n        \"category\" : \"\"\r\n                \r\n      }\r\n    ],    \r\n    \r\n    uploadedFile:\"\",\r\n    uploadedFileURL:\"\",\r\n    deliveryMode:\"General\",\r\n    status : \"DigitalmargetingPlaced\"    \r\n  }\r\n  customer:any\r\n  customerName:any\r\n  customerId:any\r\n  doctorName:any\r\n  medicineListItems: FormArray;\r\n  openingMeridian : boolean = true;\r\n\r\n  constructor(    \r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess   \r\n    \r\n  ) {\r\n    super(router)\r\n  //  this.customDigitalmargetingtime.hour = 9\r\n   // this.customDigitalmargetingtime.minute = 10\r\n\r\n\r\n      \r\n    \r\n\r\n     this.digitalmargetingFormGroup = this.buildForm()\r\n\r\n    this.openforAddDigitalmargetingDialog()\r\n\r\n    this.loading = false\r\n    //this.createMedicineItem()\r\n\r\n    //this.digitalmargetingFormGroup.valueChanges.subscribe(data => console.log('form changes', data));\r\n   // this.loading = false;    \r\n    //this.fetchDigitalmargetings()   \r\n    \r\n  }\r\n   gfg() { \r\n    var minm = 10000; \r\n    var maxm = 99999; \r\n    this.randomOTP = Math.floor(Math \r\n    .random() * (maxm - minm + 1)) + minm; \r\n} \r\n\r\nbuildForm(){\r\n return this._fb.group({\r\n    name: new FormControl(this.digitalmargetingObject.name, Validators.required),\r\n    emailId: new FormControl(this.digitalmargetingObject.emailId, [\r\n      \r\n      Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]),    \r\n  mobileNumber: new FormControl(this.digitalmargetingObject.mobileNumber, [\r\n    Validators.required,\r\n    Validators.pattern(\"^[0-9]*$\"),\r\n    Validators.minLength(10),\r\n  ]),\r\n  otpEnteredByUser:new FormControl(''),\r\n    uploadedFile: new FormControl(this.digitalmargetingObject.uploadedFile, Validators.required),\r\n    //medicineName: new FormControl(this.digitalmargetingObject.attendantID, Validators.required),\r\n    //quantity: new FormControl(this.digitalmargetingObject.name, Validators.required),\r\n    medicineListItems: this._fb.array([this.createMedicineItem()])\r\n  });\r\n}\r\n  sendOTP()\r\n  {\r\n\r\n\r\n    try{    \r\n      this.otpEnteredByUser = ''\r\n      this.sendOTPflag = true\r\n      this.verifyActionStart = false\r\n      \r\n      this.gfg()\r\n      let mobileNUmber  =  this.digitalmargetingFormGroup.controls.mobileNumber.value\r\n\r\n    \r\n    console.log(\"this.mobileNumber ==\"+ mobileNUmber)\r\n\r\n    console.log(\"this.digitalmargetingObject.mobileNumber ==\"+this.digitalmargetingObject.mobileNumber)\r\n\r\n    console.log(\"this.digitalmargetingFormGroup.get('mobileNumber').valid ==\"+this.digitalmargetingFormGroup.get('mobileNumber').valid)\r\n\r\n    console.log(\"this.digitalmargetingFormGroup.get('mobileNumber').touched ) ==\"+this.digitalmargetingFormGroup.get('mobileNumber').touched )\r\n\r\n   \r\n    console.log(\"this.randomOTP ==\"+this.randomOTP )\r\n    // \r\n    if(this.digitalmargetingObject.mobileNumber && this.digitalmargetingObject.mobileNumber.length >=0 && this.digitalmargetingFormGroup.get('mobileNumber').valid && this.digitalmargetingFormGroup.get('mobileNumber').touched){\r\n      \r\n      this.loading = true\r\n      let otpData = {otp:this.randomOTP,phone:this.digitalmargetingObject.mobileNumber}\r\n      \r\n      \r\n      \r\n      setTimeout(() => {\r\n        this.dataService.sendOTP(otpData).then((result:any) => {\r\n          this.loading = false;          \r\n        }, (err) => {\r\n          this.toastr.errorToastr('problem in sending OTP, please resend OTP,'+err.message);\r\n          this.loading = false;          \r\n        console.log(err);\r\n        });      \r\n    }, 3000);\r\n  \r\n  \r\n    }else{\r\n      alert(\"please enter a valid mobile number first\")\r\n    }\r\n\r\n  }catch(err){\r\n        \r\n    console.log(err);\r\n  }\r\n  }\r\n  verifyOTP(){\r\n\r\n    this.verifyActionStart = true\r\n    //console.log(\"this.randomOTP ==\"+this.randomOTP )\r\n    //console.log(\"this.otpEnteredByUser ==\"+this.otpEnteredByUser )\r\n\r\n    if(!this.otpVerified && this.otpEnteredByUser != this.randomOTP){\r\n      alert(\"You've entered a wrong OTP \")\r\n\r\n    }else{\r\n      this.otpVerified = true\r\n      \r\n    }\r\n\r\n  }\r\n  getControls() {\r\n    return (this.digitalmargetingFormGroup.get('medicineListItems') as FormArray).controls;\r\n  }\r\n  gotoCustomerPage(){\r\n    this.router.navigate([\"/customer\",{fromDigitalmargetingPage:'fromDigitalmargetingPage'}]);\r\n  }\r\n  openCustomerPage(){\r\n    this.router.navigate([\"/customer\"]);\r\n  }\r\n  createMedicineItem(): FormGroup {\r\n    return this._fb.group({\r\n      medicineId: new FormControl(),\r\n      medicineName: new FormControl(),\r\n      mg: new FormControl(),\r\n      quantity: new FormControl(),      \r\n      mrp:new FormControl(),            \r\n       b2bPrice : new FormControl() ,\r\n       hsnCode : new FormControl(),\r\n        gst : new FormControl(),\r\n        //vat : \"0\",\r\n        otherTax : new FormControl(),\r\n        discounts : new FormControl(),\r\n        medicineType : new FormControl(),      \r\n        category : new FormControl()\r\n    });\r\n  }\r\n\r\n  createMedicineItemDuringEdit(medicine): FormGroup {\r\n    return this._fb.group({\r\n      medicineId: new FormControl(),\r\n      medicineName: new FormControl(),\r\n      mg: new FormControl(),\r\n      quantity: new FormControl(),      \r\n      mrp:new FormControl(),            \r\n       b2bPrice : new FormControl() ,\r\n       hsnCode : new FormControl(),\r\n        gst : new FormControl(),\r\n        //vat : \"0\",\r\n        otherTax : new FormControl(),\r\n        discounts : new FormControl(),\r\n        medicineType : new FormControl(),      \r\n        category : new FormControl()\r\n    });\r\n  }\r\n\r\n/*\r\n  ngAfterViewInit(){\r\n    this.dataService.fetchAllPatients().then((result:[]) => {\r\n      this.patientList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n\r\n   \r\n  }\r\n  */\r\n  getDigitalmargeting(){\r\n\r\n  }\r\n  addItem(): void {\r\n    this.medicineListItems = this.digitalmargetingFormGroup.get('medicineListItems') as FormArray;\r\n    this.medicineListItems.push(this.createMedicineItem());\r\n  }\r\n\r\n  removeItem(i){\r\n\r\n     this.medicineListItems = this.digitalmargetingFormGroup.get('medicineListItems') as FormArray;\r\n    this.medicineListItems.removeAt(i)  \r\n\r\n  }\r\n\r\n \r\n  closeSearchModal(){\r\n    //if(this.modalSearchFilerReference)\r\n    //this.modalSearchFilerReference.close();\r\n    if(this.modalSearchFilerReference)\r\n    this.modalSearchFilerReference.dismiss()\r\n  }\r\n \r\n   openforAddDigitalmargetingDialog(){\r\n\r\ntry{\r\n     //this.medicineListItems.push({})\r\n     this.digitalmargetingObject = Object.assign({}, this.digitalmargetingObjectBase); \r\n\r\n    this.customerOldPrescriptionListArr = []; \r\n    this.customerId = ''\r\n    /*\r\n    if(this.customerId == undefined || !this.customerId || this.customerId == ''){\r\n     alert(\"Please select a customer first, from the dropdown\")\r\n     return\r\n    }\r\n    */\r\n    this.mode = \"add\"\r\n    //this.modalReferenceDigitalmargetingForm = this.modal.open(this.digitalmargetingFormModal);\r\n    \r\n    this.digitalmargetingFormGroup = this.buildForm()\r\n    this.medicineListItems = this.digitalmargetingFormGroup.get('medicineListItems') as FormArray;\r\n   // \r\n  }catch(e){\r\n    console.log(e)\r\n  }\r\n \r\n  }\r\n  getPatient(){\r\n\r\n  }\r\n \r\n  ngOnInit(){\r\n\r\n\r\n    \r\n\r\n  };\r\n\r\n  \r\n    \r\n  save(){\r\n\r\n\r\n    if(!this.otpVerified){\r\n     // this.verifyOTP()\r\n      alert(\"Please verify your mobile with an OTP first\")\r\n      return\r\n    }\r\n    if(!this.digitalmargetingFormGroup.valid){\r\n        this.submitAttempt = true;        \r\n        this.validateFields(this.digitalmargetingFormGroup.controls)                   \r\n        return; \r\n    } \r\n   let medicineListItems = []\r\n    for(var i = 0 ; i< this.medicineListItems.length ; i++){      \r\n        let formObject = this.medicineListItems.at(i)              \r\n        //let medicineObj = formObject.get('medicineName').value\r\n         medicineListItems.push({\r\n          //medicineId: formObject.get('medicineId')?.value,\r\n          medicineName: formObject.get('medicineName')?.value,\r\n          //mg: formObject.get('mg')?.value,\r\n          quantity: formObject.get('quantity')?.value\r\n          \r\n          \r\n         })        \r\n        \r\n\r\n    }\r\n    this.digitalmargetingObject.medicineList = []\r\n    this.digitalmargetingObject.medicineList = medicineListItems\r\n    //this.digitalmargetingObject.customerId = this.customerId\r\n  \r\n\r\n//    console.log(\"digitalmargeting this.digitalmargetingObject **\"+JSON.stringify(this.digitalmargetingObject))\r\n//this.fromOldImageList = false\r\n\r\n    if(this.mode == \"add\"){\r\n      delete this.digitalmargetingObject['customer']\r\n      console.log(\"this.digitalmargetingObject for add == \"+JSON.stringify(this.digitalmargetingObject))\r\n      this.dataService.addDigitalmargeting(this.digitalmargetingObject).then((result) => {                \r\n        //  console.log(\"result after adduser == \"+JSON.stringify(result))\r\n        this.commonAfterSaveCode()\r\n\r\n          this.reinitialise()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('New digitalmargeting is added successfully');\r\n\r\n        //  this.fromOldImageList = false\r\n\r\n      }, (err) => {        \r\n      console.log(err);\r\n      });\r\n      \r\n    }\r\n    \r\n}\r\n\r\ncommonAfterSaveCode(){\r\n  this.customerId = ''\r\n          this.loading = true;\r\n         // this.normalFiltereduserListArr = []; \r\n          this.closeMainModal()\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.mode = \"add\"   \r\n          //  this.fetchDigitalmargetings()\r\n            \r\n        }, 2000);\r\n      \r\n}\r\nenlargePic(){\r\n  //alert(\"trying to enlarge\")\r\n  //let image  = this.digitalmargetingObject.uploadedFileURL   \r\n  //this.enlargedPic = image\r\n  //this.enlargedPrescPic = ''\r\n  //this.closeCustomModal2()\r\n  this.modalReferenceImage = this.modal.open(this.enlargedImageModal); \r\n}\r\nenlargePrescription(obj){\r\n  //this.closeCustomModal()\r\n  //this.enlargedPic = ''\r\n  let image  = obj.uploadPhotoDigitalmargetingPrescriptionURL    \r\n  this.enlargedPrescPic = image\r\n  this.modalReferencePrescriptionImage = this.modal.open(this.enlargedPrescriptionModal); \r\n}\r\n\r\nselectPrescription(obj){\r\n // let image  = obj.uploadPhotoDigitalmargetingPrescriptionURL    \r\n  //  this.enlargedPrescPic = image\r\n  //this.modalReferenceImage = this.modal.open(this.enlargedPrescriptionModal); \r\n  \r\n  obj.selectValue = true\r\n\r\n  for ( var i in  this.customerOldPrescriptionListArr){\r\n    let oldPresc = this.customerOldPrescriptionListArr[i]\r\n    if(oldPresc._id == obj._id){\r\n      continue\r\n    }else{\r\n      //this.customerOldPrescriptionListArr.splice(i, 1);\r\n      oldPresc.selectValue = false\r\n      //this.customerOldPrescriptionListArr.splice(i, 1,oldPresc);\r\n    }\r\n  }\r\n  this.digitalmargetingObject.uploadedFile = obj.uploadPhotoDigitalmargetingPrescription\r\n  this.digitalmargetingObject.uploadedFile = \"data:image/jpg;base64,\"+this.digitalmargetingObject.uploadedFile\r\n  this.digitalmargetingObject.uploadedFileURL = obj.uploadPhotoDigitalmargetingPrescriptionURL\r\n\r\n  this.digitalmargetingFormGroup.get('uploadedFile').patchValue(this.digitalmargetingObject.uploadedFile);\r\n\r\n  console.log(\"obj ==\"+JSON.stringify(obj))\r\n  //this.getPhotoOLDPrescription(obj.uploadPhotoDigitalmargetingPrescriptionURL)\r\n  //this.showOldPrescription  = 'url(' + obj.uploadPhotoDigitalmargetingPrescriptionURL + ')'\r\n}\r\n\r\ngetPhotoOLDPrescription(image) {\r\n  try {\r\n    \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   console.log('Error', error);\r\n  }\r\n}\r\n\r\ngetPhoto(photoType) {\r\n  try {\r\n    console.log(\"in getPhoto == this.digitalmargetingObject.uploadedFileURL == \"+this.digitalmargetingObject.uploadedFileURL)\r\n    let image  = this.digitalmargetingObject.uploadedFileURL\r\n\r\n\r\n    image  = this.digitalmargetingObject.uploadedFile\r\n    \r\n    \r\n\r\n\r\n    //alert(this.fromOldImageList)\r\n\r\n    this.enlargedPic = image\r\n   \r\n    //this.fromOldImageList = false\r\n\r\n\r\n   //let  image = \"data:image/jpg;base64,\"+this.digitalmargetingObject.uploadedFile\r\n   /* if(photoType == 'prescription'){\r\n      image  = this.digitalmargetingObject.uploadedFileURL\r\n      if(!image && this.digitalmargetingObject.uploadedFile){\r\n        image = \"data:image/jpg;base64,\"+this.digitalmargetingObject.uploadedFile\r\n\r\n        this.digitalmargetingObject.uploadedFile = \"data:image/jpg;base64,\"+this.digitalmargetingObject.uploadedFile\r\n\r\n      }\r\n    }*/\r\n    \r\n   \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   console.log('Error', error);\r\n  }\r\n}\r\ncapturePhoto(event,photoType){\r\n  //  alert(\"I am clicked\")\r\n    let reader = new FileReader();\r\n\r\n    \r\n    try {\r\n      reader.onload = (readerEvent) => {\r\n\r\n        let imageData = (readerEvent.target as any).result;\r\n        this.enlargedPic = imageData\r\n        \r\n      console.log(\"in capturePhoto imageData == \"+imageData)\r\n\r\n\r\n        if(photoType == 'prescription')\r\n          this.digitalmargetingObject.uploadedFile =  imageData;\r\n\r\n          //var dataURL = reader.result;\r\n          //this.digitalmargetingObject.uploadedFileURL  =  imageData;\r\n\r\n          this.digitalmargetingFormGroup.get('uploadedFile').patchValue(this.digitalmargetingObject.uploadedFile);\r\n          //this.isPrescriptionUploaded = true\r\n\r\n      };\r\n\r\n      \r\n      this.digitalmargetingObject.uploadedFileURL = event.target.files[0]\r\n\r\n      console.log(\"in capturePhoto this.digitalmargetingObject.uploadedFileURL == \"+this.digitalmargetingObject.uploadedFileURL)\r\n\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      var image = document.getElementById('output');\r\n      this.prescriptionSource = URL.createObjectURL(event.target.files[0]);\r\n      document.getElementById('output').setAttribute( 'src',  URL.createObjectURL(event.target.files[0]));\r\n      console.log(\"this.prescriptionSource == \"+this.prescriptionSource)\r\n      //this.prescriptionSource = event.target.files[0];\r\n\r\n      \r\n    }\r\n    catch(error) {\r\n     console.log('Error', error);\r\n    }\r\n  }\r\n\r\ngetPhotoOldPrescription(obj) {\r\n  try {\r\n    let image  = obj.uploadPhotoDigitalmargetingPrescriptionURL\r\n    \r\n      image  = obj.uploadPhotoDigitalmargetingPrescriptionURL\r\n      /*if(obj && obj.uploadPhotoDigitalmargetingPrescription){\r\n        image = obj.uploadPhotoDigitalmargetingPrescription\r\n      }\r\n    */\r\n  //  this.enlargedPic = image\r\n   \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   // //console.log('Error', error);\r\n  }\r\n}\r\n\r\ncommonCodeDuringEdit(){\r\n\r\n  \r\n  this.digitalmargetingFormGroup = this._fb.group({\r\n    customerId: new FormControl(this.customerId, Validators.required),      \r\n    uploadedFile: new FormControl(this.digitalmargetingObject.uploadedFile, Validators.required),\r\n    deliveryMode: new FormControl(this.digitalmargetingObject.deliveryMode, Validators.required),      \r\n    //medicineName: new FormControl(this.digitalmargetingObject.attendantID, Validators.required),\r\n    //quantity: new FormControl(this.digitalmargetingObject.name, Validators.required),\r\n    status: new FormControl(this.digitalmargetingObject.status, Validators.required),      \r\n    medicineListItems: this._fb.array([ this.createMedicineItem() ])\r\n  });\r\n  \r\n\r\n  this.digitalmargetingFormGroup.get('uploadedFile').patchValue(this.digitalmargetingObject.uploadedFile);\r\n\r\n  //console.log(\"this.digitalmargetingObject ==\"+JSON.stringify(this.digitalmargetingObject))\r\n  let dateTimeArray = []\r\n  this.medicineListItems = this.digitalmargetingFormGroup.get('medicineListItems') as FormArray;\r\n  this.medicineListItems.removeAt(0)  \r\n\r\n\r\n    \r\n  for(var i in this.digitalmargetingObject.medicineList){\r\n      let medicine = this.digitalmargetingObject.medicineList[i]      \r\n     // dateTimeArray.push({date:date,time:time})\r\n    //this.medicineListItems.push({date:date,time:time})\r\n    \r\n    this.medicineListItems.push(this._fb.group({      \r\n          medicineId: medicine.medicineId,             \r\n          medicineName : medicine.medicineName,\r\n          quantity : medicine.quantity,\r\n          mg: medicine.mg  ,\r\n          mrp: medicine.mrp,\r\n          active: medicine.active,\r\n          b2bPrice: medicine.b2bPrice,\r\n          gst: medicine.gst,          \r\n          hsnCode: medicine.hsnCode,\r\n          otherTax: medicine.otherTax,\r\n          discounts: medicine.discounts,\r\n          medicineType: medicine.medicineType,\r\n          category: medicine.category                          \r\n      \r\n    }))\r\n  }\r\n\r\n  console.log(\"this.medicineListItems **\"+this.medicineListItems.length)\r\n  \r\n  \r\n  //this.digitalmargetingObject.attendantID = earlierAttendent\r\n\r\n  //this.digitalmargetingFormGroup.get('medicineListItems').patchValue(dateTimeArray)\r\n  //addItem\r\n //setTimeout(() => {\r\n  //try{\r\n  //  this.modalReferenceDigitalmargetingForm = this.modal.open(this.digitalmargetingFormModal);\r\n  //}catch(error){\r\n//    console.log(error)\r\n  //}\r\n//}, 2000);\r\n  //setTimeout(() => {\r\n   \r\n}\r\ncheckStatusChange(){\r\n  console.log(\"status **\"+this.digitalmargetingObject['status'] )\r\n}\r\ncheckDeliveryMode(){\r\n  console.log(\"deliverymode **\"+this.digitalmargetingObject.deliveryMode )\r\n}\r\n openForeditDigitalmargeting(user){\r\n\r\n  //this.input.nativeElement.focus();\r\n  //this.fromOldImageList = false\r\n\r\n//  console.log(\"digitalmargeting object **\"+JSON.stringify(user))\r\n  //this.modalReferenceDigitalmargetingForm = this.modal.open(this.digitalmargetingFormModal);\r\n\r\n  this.loading = true\r\n  this.loadingCustomeMsg == \"Fetching old prescriptions, please wait..\"\r\n  this.mode = \"edit\"\r\n  \r\n  //this.digitalmargetingObject = Object.assign({}, this.digitalmargetingObjectBase); \r\n  this.customerId = user['customerId']\r\n  this.digitalmargetingObject = Object.assign({}, user); \r\n\r\n\r\n  console.log(\"deliverymode **\"+this.digitalmargetingObject['deliveryMode'] )\r\n\r\n  this.modalReferenceDigitalmargetingForm = this.modal.open(this.digitalmargetingFormModal);\r\n\r\n  //console.log(\"digitalmargeting in EDIT this.digitalmargetingObject **\"+JSON.stringify(this.digitalmargetingObject))\r\n\r\n  console.log(\"this.customerId == \"+this.customerId)\r\n\r\n  //if(this.customerId)\r\n  //this.fetchAllDigitalmargetingPrescriptions()  \r\n\r\n  let data ={customerId:this.customerId}\r\n  this.commonCodeDuringEdit()\r\n  console.log(\" fetch old prescription for \"+JSON.stringify(data))\r\n  this.dataService.fetchAllDigitalmargetingPrescriptions(data).then((result:[]) => {        \r\n    this.customerOldPrescriptionListArr = []; \r\n\r\n    setTimeout(() => {\r\n      if(result){\r\n        for(var i in result){\r\n          let obj:any = result[i]\r\n          obj['selectValue'] = false\r\n          this.customerOldPrescriptionListArr.push(obj)\r\n\r\n        }\r\n      }  \r\n      this.loading = false\r\n   //   this.commonCodeDuringEdit()\r\n  },1000)\r\n  }, (err) => {\r\n\r\n    //this.commonCodeDuringEdit()\r\n    this.customerOldPrescriptionListArr = []; \r\n    this.loading = false;\r\n    console.log(err);\r\n  });\r\n \r\n  \r\n  \r\n}\r\n\r\n  reinitialise(){\r\n    this.searchByDigitalmargetingDate = false\r\n    this.searchByDigitalmargetingId = false\r\n    this.searchByCustomer = false\r\n    this.searchByStatus = false\r\n    this.digitalmargetingDate = ''\r\n    this.customerId = ''\r\n    this.digitalmargetingId = ''\r\n    this.digitalmargetingStatus = ''\r\n    this.customerName = ''\r\n    this.allDynaFilter = null\r\n    this.fetchDigitalmargetingsCount()\r\n    this.totalDocRecords = 0\r\n    this.fetchDigitalmargetings()\r\n    this.digitalmargetingObject = Object.assign({}, this.digitalmargetingObjectBase); \r\n    this.mode = \"add\"\r\n    this.medicineListItems = this.digitalmargetingFormGroup.get('medicineListItems') as FormArray;\r\n  }\r\n  reset(){\r\n    this.reinitialise()\r\n    this.toastr.successToastr('Filters reset, digitalmargeting list refreshed');\r\n  }\r\n  pageChanged(event){\r\n    console.log(\"****** this.event   ===== **\"+event)\r\n    this.pageNo = event\r\n    this.applyFilter()\r\n  }\r\nsearchByFilters(){\r\n  let dynaFilterArry = []\r\n  let dynaFilter = {}\r\n // let allDynaFilter = {}\r\n  if(this.searchByDigitalmargetingDate && this.digitalmargetingDate){\r\n    let converteddate = this.fromJsDateToLocationdateTimeFormat(this.digitalmargetingDate)\r\n    dynaFilter['createdDate'] = converteddate\r\n    dynaFilterArry.push({createdDate:converteddate}) \r\n    console.log(\"converteddate **\"+converteddate) \r\n    //moment(new Date()).format('YYYY-MM-DD[T00:00:00.000Z]'\r\n\r\n    //var dateTime = new Date(this.digitalmargetingDate);\r\n    /*\r\n    var dateTime1dayAgo = moment(this.digitalmargetingDate,\"YYYY-MM-DD HH:mm:ss\").subtract(1,'d').format('YYYY-MM-DD[T00:00:00.000Z]');\r\n    var dateTime1dayLater = moment(this.digitalmargetingDate,\"YYYY-MM-DD HH:mm:ss\").add(1,'days').format('YYYY-MM-DD[T00:00:00.000Z]');\r\n    dynaFilter['createdDate'] = {\"$gt\": dateTime1dayAgo}     \r\n    //console.log(\"this.digitalmargetingDate **\"+converteddate)    \r\n    console.log(\"this.digitalmargetingDate **\"+this.digitalmargetingDate) \r\n    dynaFilterArry.push({createdDate:{\"$gt\": dateTime1dayAgo} })     \r\n    dynaFilterArry.push({createdDate:{\"$lt\": dateTime1dayLater} }) \r\n    */\r\n\r\n  }\r\n  if(this.searchByCustomer && this.customerId){\r\n    //dynaFilter['customerId'] = this.customerId   \r\n    dynaFilterArry.push({customerId:this.customerId }) \r\n  }\r\n  if(this.searchByDigitalmargetingId && this.digitalmargetingId){\r\n    //dynaFilter['digitalmargetingId'] = this.digitalmargetingId   \r\n    dynaFilterArry.push({digitalmargetingId:this.digitalmargetingId }) \r\n  }\r\n  if(this.searchByStatus && this.digitalmargetingStatus){\r\n    //dynaFilter['status'] = this.digitalmargetingStatus   \r\n    dynaFilterArry.push({status:this.digitalmargetingStatus})    \r\n  }\r\n  this.allDynaFilter = {$and:dynaFilterArry} \r\n  \r\n  \r\n  this.fetchDigitalmargetingsCount()  \r\n  this.fetchDigitalmargetings()     \r\n  \r\n\r\n  this.closeSearchModal()\r\n  this.toastr.successToastr('Searching Done');\r\n          \r\n\r\n  \r\n}\r\ncloseMainModal() {\r\n     \r\n  if(this.modalReferenceDigitalmargetingForm)\r\n    this.modalReferenceDigitalmargetingForm.close();\r\n\r\n    this.fromOldImageList = false\r\n  \r\n}\r\n  userKindChange(){\r\n    this.pageNo = 1\r\n    \r\n    this.applyFilter()\r\n  }\r\n  applyFilter() {  \r\n    if(this.customerId != undefined && this.customerId && this.customerId != ''){\r\n      this.fetchDigitalmargetingByCustomer = true\r\n    }else{\r\n      this.fetchDigitalmargetingByCustomer = false\r\n    }\r\n\r\n    console.log(\"this.customerId \"+this.customerId)    \r\n        \r\n    this.fetchDigitalmargetingsCount()  \r\n    this.fetchDigitalmargetings()    \r\n    \r\n  }\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n \r\n  \r\ncustomerSelectEvent(item) {\r\n  if(item){\r\n  this.digitalmargetingFormGroup.get('customerId').patchValue(item['_id']);\r\n  this.customerId = item['_id']\r\n\r\n  if(this.customerId){\r\n    this.loading = true\r\n    this.loadingCustomeMsg == \"Fetching old prescriptions, please wait..\"\r\n    this.fetchAllDigitalmargetingPrescriptions()   \r\n  }\r\n  //console.log(\" inside customerSelectEvent \"+JSON.stringify(item))\r\n  }\r\n  // do something with selected item\r\n}\r\n\r\nonChangeCustomerSearch(val: string) {\r\n  //console.log(\" inside onChangePatientSearch val \"+val)\r\n // if(val && val.length >2 ){\r\n  let data = {name:val}\r\n  this.dataService.fetchAllCustomers(data).then((result:[]) => {\r\n    this.customerList = result.map(element => element)\r\n  }, (err) => {\r\n      //console.log(err);\r\n  });\r\n // }\r\n}\r\n\r\n\r\n\r\n  fetchDigitalmargetingsCount(){\r\n  \r\n   let data = {pageNo:this.pageNo,perPage:this.pageSize,filter : this.allDynaFilter}\r\n   // this.fetchDigitalmargetingsCount({filter : allDynaFilter})  \r\n    //this.fetchDigitalmargetingsByFilters({filter : allDynaFilter})   \r\n    console.log(\" inside data \"+JSON.stringify(data))\r\n  \r\n    this.dataService.fetchDigitalmargetingsCount(data).then((result) => {\r\n          \r\n      console.log(\"****** fetchdigitalmargetingsCount result   ===== **\"+JSON.stringify(result))\r\n    this.totalDocRecords = result;\r\n    this.loading = false;\r\n\r\n    console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n  \r\n  }, (err) => {\r\n    this.loading = false;\r\n    console.log(err);\r\n  });\r\n  }\r\n \r\n   fetchAllDigitalmargetingPrescriptions(){\r\n    \r\n    let data ={customerId:this.customerId}\r\n\r\n    console.log(\" fetch old prescription for \"+JSON.stringify(data))\r\n    this.dataService.fetchAllDigitalmargetingPrescriptions(data).then((result:[]) => {        \r\n     \r\n     /* this.customerOldPrescriptionListArr = []; \r\n      if(this.customerOldPrescriptionListArr.length >0 ){\r\n        this.customerOldPrescriptionListArr = result.map(element => {        \r\n          //let obj = element \r\n         // element['selectValue'] = false\r\n\r\n          //return   element\r\n          return Object.assign({}, element, {\r\n            selectValue: false\r\n          })\r\n        \r\n        }\r\n        )\r\n      }\r\n      */\r\n\r\n     this.customerOldPrescriptionListArr = []; \r\n     if(result){\r\n       for(var i in result){\r\n         let obj:any = result[i]\r\n         obj['selectValue'] = false\r\n         this.customerOldPrescriptionListArr.push(obj)\r\n \r\n       }\r\n     }\r\n     //   console.log(\"****** this.customerOldPrescriptionListArr   ===== **\"+JSON.stringify(this.customerOldPrescriptionListArr))      \r\n        this.loading = false;\r\n  \r\n    }, (err) => {\r\n      this.customerOldPrescriptionListArr = []; \r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n  fetchDigitalmargetings(){\r\n  \r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize,filter : this.allDynaFilter}\r\n \r\n  this.dataService.fetchDigitalmargetings(data).then((result:any) => {        \r\n    this.normalFiltereduserListArr = []; \r\n      //this.normalFiltereduserListArr = result.map(element => {        \r\n       // return   element\r\n     // })\r\n\r\n    for(var i in result){\r\n      let digitalmargetingObj = result[i]\r\n     // if(!digitalmargetingObj['deliveryMode'] || digitalmargetingObj['deliveryMode'] == undefined ){\r\n    //    digitalmargetingObj['deliveryMode'] = \"General\"\r\n    //  }\r\n\r\n     // console.log(\"****** digitalmargetingObj   ===== **\"+JSON.stringify(digitalmargetingObj))    \r\n      this.normalFiltereduserListArr.push(digitalmargetingObj)\r\n    }\r\n\r\n\r\n    //  console.log(\"****** this.fetchDigitalmargetingsByFilters   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))      \r\n      this.loading = false;\r\n\r\n  }, (err) => {\r\n    this.normalFiltereduserListArr = []; \r\n    this.loading = false;\r\n    console.log(err);\r\n  });\r\n   \r\n  }\r\n  \r\n  \r\n}\r\n","\r\n<ng-template #enlargedImageModal let-close=\"close\">\r\n  <div class=\"modal-header py-1\">\r\n    <h4 class=\"modal-title headerTitle mb-0\">Enlarged Prescription View</h4>\r\n    \r\n    <button type=\"button\" class=\"close\" (click)=\"closeCustomModal();\">×</button>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n  <img src=\"{{enlargedPic}}\" class=\"para\"/>\r\n</div>\r\n</ng-template>\r\n<ng-template #enlargedPrescriptionModal let-close=\"close\">\r\n  <div class=\"modal-header py-1\">\r\n    <h4 class=\"modal-title headerTitle mb-0\">Enlarged View</h4>\r\n    \r\n    <button type=\"button\" class=\"close\" (click)=\"closeCustomModal2();\">×</button>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n  <img src=\"{{enlargedPrescPic}}\" class=\"para\"/>\r\n</div>\r\n</ng-template>\r\n\r\n<div class=\"containerDM\">\r\n \r\n        <form [formGroup]=\"digitalmargetingFormGroup\" class=\"p-2\">\r\n            \r\n        <div formArrayName=\"medicineListItems\"\r\n        *ngFor=\"let medicine of getControls(); let i = index;\">\r\n\r\n                <div [formGroupName]=\"i\">\r\n                  \r\n          <table class=\"table table-bordered table-sm mt-2\">\r\n            <thead>\r\n            <tr>\r\n                <th>Id </th>\r\n                <th>Medicine Name</th>\r\n                <th>Quantity</th>                    \r\n            </tr>\r\n            </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                    <td style=\"width: 10%\">{{i+1}}</td>\r\n                  <td style=\"width: 60%\">\r\n                 \r\n                  <tr >\r\n                      \r\n                      <input   class=\" customwidth form-control\" placeholder=\"Enter Medicine name\" formControlName=\"medicineName\"\r\n                      >\r\n\r\n                    </tr>\r\n                    \r\n              </td>\r\n                  \r\n              <td style=\"width: 30%\">\r\n                <input   class=\"form-control\" formControlName=\"quantity\"\r\n                placeholder=\"Quantity\">\r\n                \r\n              </td>\r\n              \r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n            </div>\r\n\r\n      <div class=\"row text-right ml-2\">\r\n        <i class=\"fa fa-minus-circle customfiltericon m-10\" aria-hidden=\"true\" (click)=\"removeItem(i)\"><span class=\"reducetextforicon\">Remove</span></i>                     \r\n<!--\r\n      <button class=\"btn btn-dark\" (click)=\"removeItem(i)\"> Remove Medicine </button>-->\r\n      </div>\r\n</div>\r\n\r\n<!--Chosen name: {{ digitalmargetingForm.controls.items.controls[i].controls.name.value }} -->\r\n\r\n\r\n\r\n<div class=\"col-md-12 text-right mt-4\">\r\n<i class=\"fa fa-plus-circle customfiltericon m-10\" aria-hidden=\"true\" (click)=\"addItem()\"><span class=\"reducetextforicon\">Add</span></i>    \r\n<!--\r\n<button class=\"btn btn-dark\" (click)=\"addItem()\"> Add More Medicines </button>\r\n-->\r\n</div>\r\n\r\n<div class=\"row \">\r\n  <div class=\"col-md-12 form-group\">\r\n      <label for=\"mobileNumber\" class=\"labelTitles\"><b> Mobile Number</b></label><span class=\"required-asterisk\">*</span>\r\n  </div>\r\n  <div class=\"col-md-12 marginTop\">\r\n          <input class=\"form-control\" [(ngModel)]=\"digitalmargetingObject.mobileNumber\" formControlName=\"mobileNumber\"\r\n          placeholder=\"Enter Mobile Number\">\r\n          \r\n   </div>\r\n   <div class=\"col-md-12 text-right m-2\">\r\n    <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"sendOTP();\"><span class=\"reducetextforicon\" *ngIf=\"!sendOTPflag\">Send OTP</span><span class=\"reducetextforicon\" *ngIf=\"sendOTPflag\">Re-Send OTP</span></button>\r\n   </div>\r\n   \r\n</div>\r\n<p *ngIf=\"!verifyActionStart && sendOTPflag \" class=\"cutomeerrortext\">\r\n                \r\n  <span class=\"redcolor\"> You will receive an OTP in your above mobile shortly, please enter that below and press the verify button to validate that.\r\n   </span>\r\n </p>\r\n     \r\n\r\n<div class=\"row\" *ngIf=\"sendOTPflag\">\r\n  <div class=\"col-md-12 form-group\">\r\n      <label for=\"name\" class=\"labelTitles\"><b>OTP</b></label><span class=\"required-asterisk\">*</span>\r\n  </div>\r\n  <div class=\"col-md-12 marginTop\">\r\n      <input class=\"form-control labelValue\" [(ngModel)]=\"otpEnteredByUser\"  formControlName=\"otpEnteredByUser\"  placeholder=\"Enter OTP\">\r\n  </div>\r\n  <div class=\"col-md-12 text-right m-2\">\r\n    <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"verifyOTP();\">Verify OTP</button>\r\n   </div>\r\n</div>\r\n\r\n<p *ngIf=\"otpVerified && otpEnteredByUser == randomOTP\" class=\"cutomeerrortext\">\r\n                \r\n  <span class=\"redcolor ml-4\"> OTP is verifed successfully </span>\r\n   \r\n </p>\r\n     \r\n\r\n\r\n\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 form-group\">\r\n                <label for=\"name\" class=\"labelTitles\"><b>Name</b></label><span class=\"required-asterisk\">*</span>\r\n            </div>\r\n            <div class=\"col-md-12 marginTop\">\r\n                <input class=\"form-control labelValue\" [(ngModel)]=\"digitalmargetingObject.name\"  formControlName=\"name\" placeholder=\"Enter name\">\r\n            </div>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n                <div class=\"col-md-12 form-group\">\r\n                    <label for=\"email\" class=\"labelTitles\"><b>Email</b></label>\r\n                </div>\r\n                <div class=\"col-md-12 marginTop\">\r\n                        <input type=\"email\"  [class.is-invalid] = \"digitalmargetingFormGroup.get('emailId').invalid && digitalmargetingFormGroup.get('emailId').touched\" class=\"form-control\" [(ngModel)]=\"digitalmargetingObject.emailId\" formControlName=\"emailId\"\r\n                        placeholder=\"Enter email\">\r\n                 </div>\r\n            </div>\r\n        \r\n       \r\n  \r\n              <div style=\"border: 0; padding: 10;\" class=\"row mt-4\">\r\n                <div class=\"col-md-12 form-group\">\r\n                  <label for=\"email\" class=\"labelTitlesDM\"><b>Upload your prescription <span *ngIf=\"customerOldPrescriptionListArr && customerOldPrescriptionListArr.length > 0\" > <br>OR<br> just click a row on an old prescription from the list below </span> </b></label>\r\n              </div>\r\n                <div class=\"col-md-12 form-group marginTop\" (click)=\"enlargePic()\" >\r\n                \r\n                <div class=\"profile-image-wrapper\"  >\r\n                  <div class=\"profile-image\"  >\r\n\r\n                    <!--[style.backgroundImage]=\"getPhoto('prescription') \" src=\"{{prescriptionSource}}\" -->\r\n                    <img id=\"output\" class=\"profile-image\" />\r\n                    <span class=\"edit-icon\" (click)=\"capturePhoto(null,'prescription')\">\r\n                      <!-- (click)=\"enlargePic()\"\r\n                      <i class=\"fa fa-plus\" aria-hidden=\"true\" *ngIf=\"mode=='add'\" ></i>\r\n                      <i class=\"fa fa-pencil-square-o\" *ngIf=\"mode=='edit'\" aria-hidden=\"true\" ></i>\r\n                     -->\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <input type=\"file\" name=\"files[]\" id=\"file-selector\" accept=\".jpg, .jpeg, .png\" (change)=\"capturePhoto($event,'prescription')\" />\r\n              </div>\r\n              </div>\r\n\r\n              <p></p>\r\n             \r\n\r\n             <div class=\"modal-footer\">\r\n                <button [disabled]=\"!digitalmargetingFormGroup.valid\" type=\"button\" class=\"btn btn-primary m-10\"\r\n                    (click)=\"save();\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"closeMainModal();\">Cancel</button>\r\n            </div>\r\n        \r\n        <p *ngIf=\"submitAttempt\" class=\"cutomeerrortext\">\r\n                \r\n         <span class=\"redcolor ml-2\"><i class=\"fa fas fa-exclamation\"></i><b>&nbsp;Fix The Error : </b></span> {{form_fill_failure_msg}}\r\n          \r\n        </p>\r\n            \r\n\r\n</form>\r\n      \r\n\r\n\r\n\r\n<div class=\"my-container\">\r\n  <ng-template #customLoadingTemplate>\r\n    \r\n            Please wait..\r\n    \r\n</ng-template>\r\n  <ngx-loading [show]=\"loading\" [config]=\"{ primaryColour: 'blue',secondaryColour:'red',fullScreenBackdrop:false}\" [template]=\"customLoadingTemplate\"></ngx-loading>\r\n</div>\r\n\r\n\r\n\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\n\r\nimport { DigitalmargetingComponent } from './digitalmargeting.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\nimport { DigitalmargetingRoutingModule } from './digitalmargeting-routing.module';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AutocompleteLibModule,\r\n    NgxPaginationModule,\r\n    DigitalmargetingRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBdigitalmargetingRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [DigitalmargetingComponent]\r\n})\r\nexport class DigitalmargetingModule { }\r\n"]}