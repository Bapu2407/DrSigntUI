{"version":3,"sources":["./src/app/layout/invoice/invoice-routing.module.ts","./src/app/layout/invoice/invoice.component.ts","./src/app/layout/invoice/invoice.component.html","./src/app/layout/invoice/invoice.module.ts"],"names":[],"mappings":"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","file":"invoice-invoice-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { InvoiceComponent } from './invoice.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: InvoiceComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InvoiceRoutingModule { }\r\n","import { Component, OnInit, NgZone, ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport *  as moment from 'moment';\r\n\r\nimport { Config } from '../../config';\r\n\r\n\r\n\r\nimport { FormBuilder, FormGroup, FormControl, Validators,FormArray } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { BaseComponent } from 'src/BaseComponent';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\n@Component({\r\n  selector: 'app-invoice',\r\n  templateUrl: './invoice.component.html',\r\n  styleUrls: ['./invoice.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class InvoiceComponent extends BaseComponent implements OnInit {\r\n\r\n  @ViewChild('fileInputDemoPhoto') fileInputDemoPhoto :ElementRef;;\r\n  public loading:boolean = true;\r\n  public closeResult: string;\r\n  patientList:any = []\r\n  states = Config.states\r\n  invoiceList:any = []\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  @ViewChild('acc') accordionComponent: NgbAccordion;\r\n  public userKind:string=\"invoice\"\r\n  normalFiltereduserListArr:any = [];\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('invoiceFormModal') invoiceFormModal: TemplateRef<any>;\r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  invoiceFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  customInvoicetime : {\r\n    hour: 10,\r\n    minute: 20,\r\n\r\n};\r\nkeywordDoctor = \"name\"\r\n  invoiceObject =  \r\n  {    \r\n    active : true,   \r\n    \"invoiceDate\" : null,\r\n    \"address\" : \"\",\r\n    \"mobileNumber\" : \"\",\r\n    \"billTo\" : \"\",\r\n    \"doctorId\" : \"\",\r\n    \"status\" : \"\",\r\n    \"paymentMode\" : \"\",\r\n    \"action\" : \"\",\r\n    \"appointmentId\" : \"\",\r\n    \"invoiceAmount\" : \"\"\r\n  }\r\n  doctorList:any  = []\r\n  attendantList:any = []\r\n  invoiceObjectBase =  \r\n  {    \r\n    active : true,   \r\n    \"invoiceDate\" : null,\r\n    \"address\" : \"\",\r\n    \"mobileNumber\" : \"\",\r\n    \"billTo\" : \"\",\r\n    \"doctorId\" : \"\",\r\n    \"status\" : \"\",\r\n    \"paymentMode\" : \"\",\r\n    \"action\" : \"\",\r\n    \"appointmentId\" : \"\",\r\n    \"invoiceAmount\" : \"\"\r\n  }\r\n  doctorName:any\r\n  dateTimeitems: FormArray;\r\n  openingMeridian : boolean = true;\r\n\r\n  constructor(\r\n    private datePipe : DatePipe,\r\n    public router: Router,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess,\r\n    \r\n    \r\n  ) {\r\n    super(router)\r\n  //  this.customInvoicetime.hour = 9\r\n   // this.customInvoicetime.minute = 10\r\n\r\n    if(!this.user.role.doctor.invoice.view){\r\n      return\r\n    }\r\n   \r\n\r\n    this.invoiceFormGroup = _fb.group({\r\n      invoiceDate: new FormControl(this.invoiceObject.invoiceDate, Validators.required),\r\n      doctorId: new FormControl(this.invoiceObject.doctorId, Validators.required),\r\n      mobileNumber: new FormControl(''),\r\n      billTo: new FormControl(this.invoiceObject.billTo, Validators.required),\r\n      address: new FormControl(this.invoiceObject.address, Validators.required),\r\n      status: new FormControl(this.invoiceObject.status, Validators.required),\r\n      paymentMode: new FormControl(this.invoiceObject.paymentMode),\r\n      action: new FormControl(this.invoiceObject.action),\r\n      appointmentId: new FormControl(this.invoiceObject.appointmentId, Validators.required),\r\n      invoiceAmount: new FormControl(this.invoiceObject.invoiceAmount, Validators.required)\r\n    });\r\n\r\n    //this.invoiceFormGroup.valueChanges.subscribe(data => console.log('form changes', data));\r\n    this.loading = false;    \r\n    this.fetchInvoices()   \r\n    \r\n  }\r\n  createdateTimeItem(): FormGroup {\r\n    return this._fb.group({\r\n      date: '',\r\n      time: ''\r\n    });\r\n  }\r\n  \r\n/*\r\n  ngAfterViewInit(){\r\n    this.dataService.fetchAllPatients().then((result:[]) => {\r\n      this.patientList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n\r\n   \r\n  }\r\n  */\r\n \r\n doctorSelectEvent(item) {\r\n  //console.log(\" inside doctorSelectEvent \"+JSON.stringify(item))\r\n  if(item){\r\n  this.invoiceFormGroup.get('doctorId').patchValue(item['_id']);\r\n  this.invoiceObject.doctorId = item['_id']\r\n \r\n\r\n  console.log(\" this.invoiceObject.doctorId \"+this.invoiceObject.doctorId)\r\n\r\n  }\r\n  // do something with selected item\r\n}\r\n\r\ndoctorLocationSearch(val: string) {\r\n  //console.log(\" inside onChangePatientSearch val \"+val)\r\n // if(val && val.length >2 ){\r\n  let data = {name:val}\r\n  this.dataService.fetchAllDoctors(data).then((result:[]) => {\r\n    this.doctorList = result.map(element => element)\r\n  }, (err) => {\r\n      //console.log(err);\r\n  });\r\n // }\r\n}\r\n  getInvoice(){\r\n\r\n  }\r\n  addItem(): void {\r\n    this.dateTimeitems = this.invoiceFormGroup.get('dateTimeitems') as FormArray;\r\n    this.dateTimeitems.push(this.createdateTimeItem());\r\n  }\r\n\r\n  removeItem(i){\r\n\r\n     this.dateTimeitems = this.invoiceFormGroup.get('dateTimeitems') as FormArray;\r\n    this.dateTimeitems.removeAt(i)  \r\n\r\n  }\r\n\r\n  openAddInvoiceDialog(){\r\n    this.mode = \"add\"\r\n    this.invoiceFormGroup = this._fb.group({\r\n      invoiceDate: new FormControl(this.invoiceObject.invoiceDate, Validators.required),\r\n      doctorId: new FormControl(this.invoiceObject.doctorId, Validators.required),\r\n      mobileNumber: new FormControl(''),\r\n      billTo: new FormControl(this.invoiceObject.billTo, Validators.required),\r\n      address: new FormControl(this.invoiceObject.address, Validators.required),\r\n      status: new FormControl(this.invoiceObject.status, Validators.required),\r\n      paymentMode: new FormControl(this.invoiceObject.paymentMode),\r\n      action: new FormControl(this.invoiceObject.action),\r\n      appointmentId: new FormControl(this.invoiceObject.appointmentId, Validators.required),\r\n      invoiceAmount: new FormControl(this.invoiceObject.invoiceAmount, Validators.required)\r\n    });\r\n    this.dateTimeitems = this.invoiceFormGroup.get('dateTimeitems') as FormArray;\r\n   // \r\n    //this.dateTimeitems.push({})\r\n    this.invoiceObject = Object.assign({}, this.invoiceObjectBase); \r\n    this.modalReference = this.modal.open(this.invoiceFormModal);\r\n  }\r\n  getPatient(){\r\n\r\n  }\r\n \r\n  ngOnInit(){\r\n\r\n\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n \r\n\r\n    //this.pageSize = Config.RECORDSIZE;\r\n    //this.pageNo = 1\r\n    this.fetchInvoicesCount()  \r\n    this.fetchInvoices()    \r\n    \r\n //   this.items = Array(150).fill(0).map((x, i) => ({ id: (i + 1), name: `Item ${i + 1}`})\r\n  };\r\n  save(){\r\n//alert(\"mode: \"+this.mode)\r\n   \r\n\r\n    if(!this.invoiceFormGroup.valid){\r\n        this.submitAttempt = true;        \r\n        this.validateFields(this.invoiceFormGroup.controls)                   \r\n        return; \r\n    } \r\n    if(this.invoiceObject.invoiceDate && this.invoiceObject.invoiceDate!=\"\"){\r\n        this.invoiceObject.invoiceDate  = this.fromJsDateToMongoDate(this.invoiceObject.invoiceDate )    \r\n    }\r\n    \r\n    if(this.mode == \"add\"){\r\n      //delete this.invoiceObject['doctor']\r\n      console.log(\"this.invoiceObject for add == \"+JSON.stringify(this.invoiceObject))\r\n      this.dataService.addInvoice(this.invoiceObject).then((result) => {                \r\n        //  console.log(\"result after adduser == \"+JSON.stringify(result))\r\n          this.fetchInvoices()\r\n          this.mode = \"add\"\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('New invoice is added successfully');\r\n          \r\n      }, (err) => {        \r\n        if(err && err.message)\r\n        alert(err.message)\r\n        //console.log(err);\r\n      });\r\n      \r\n    }if(this.mode == \"edit\"){\r\n      //delete this.invoiceObject['patient']\r\n      //delete this.invoiceObject['doctor']\r\n      this.invoiceObject['invoiceId'] = this.invoiceObject['_id']\r\n      console.log(\"this.invoiceObject for edit == \"+JSON.stringify(this.invoiceObject))\r\n      this.dataService.updateInvoice(this.invoiceObject).then((result) => {\r\n        //  console.log(\"****** updateinvoice result   ===== **\"+JSON.stringify(result))\r\n          //this.loading = false;\r\n          this.mode = \"add\"   \r\n          this.fetchInvoices()\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('invoice is updated successfully'); \r\n      }, (err) => {\r\n        this.mode = \"add\"\r\n        //this.loading = false;\r\n        console.log(err);\r\n      });\r\n      \r\n    }\r\n    \r\n}\r\nasync openForeditInvoice(user){\r\n\r\n  \r\n  this.invoiceObject = Object.assign({}, user); \r\n\r\n  //console.log(\"dateTimeArray LENGTH **\"+dateTimeArray.length)\r\n\r\n\r\n  this.invoiceFormGroup = this._fb.group({\r\n    invoiceDate: new FormControl(this.invoiceObject.invoiceDate, Validators.required),\r\n      mobileNumber: new FormControl(''),\r\n      billTo: new FormControl(this.invoiceObject.billTo, Validators.required),\r\n      address: new FormControl(this.invoiceObject.address, Validators.required),\r\n      status: new FormControl(this.invoiceObject.status, Validators.required),\r\n      paymentMode: new FormControl(this.invoiceObject.paymentMode),\r\n      action: new FormControl(this.invoiceObject.action),\r\n      appointmentId: new FormControl(this.invoiceObject.appointmentId, Validators.required),\r\n      invoiceAmount: new FormControl(this.invoiceObject.invoiceAmount, Validators.required)\r\n  });\r\n\r\n\r\n  console.log(\"this.invoiceObject ==\"+JSON.stringify(this.invoiceObject))\r\n  let dateTimeArray = []\r\n  this.dateTimeitems = this.invoiceFormGroup.get('dateTimeitems') as FormArray;\r\n    \r\n  this.invoiceObject.invoiceDate = this.datePipe.transform(this.invoiceObject.invoiceDate, 'yyyy-MM-dd')\r\n  console.log(\"dateTimeArray LENGTH **\"+dateTimeArray.length)\r\n  //let earlierAttendent = this.invoiceObject.attendantID\r\n  //this.doctorName = await this.fetchDoctrById(this.invoiceObject.doctorID)\r\n\r\n  //this.invoiceObject.attendantID = earlierAttendent\r\n\r\n  //this.invoiceFormGroup.get('dateTimeitems').patchValue(dateTimeArray)\r\n  //addItem\r\n\r\n  this.mode = \"edit\"\r\n  this.modalReference = this.modal.open(this.invoiceFormModal);\r\n\r\n  //this.userObject.userId = user._id\r\n  //this.role = user.role\r\n\r\n  \r\n  \r\n}\r\nfetchDoctrById(doctorId){\r\n  let data = {doctorId:doctorId}\r\n  try {      \r\n      return new Promise((resolve) => {    \r\n            this.dataService.fetchDoctrById(data).then((result) => {\r\n              \r\n            //console.log(\"****** invoice  ===== **\"+JSON.stringify(result))\r\n                resolve(result['name'])                 \r\n        \r\n            }, (err) => {\r\n              resolve('')                 \r\n            //this.loading = false;\r\n            \r\n            //console.log(err);\r\n            });\r\n        });\r\n  }\r\n  catch(error) {\r\n      //console.log('Error', error);\r\n  }\r\n}\r\n  pageChanged(event){\r\n    console.log(\"****** this.event   ===== **\"+event)\r\n    this.pageNo = event\r\n    this.applyFilter()\r\n  }\r\n  userKindChange(){\r\n    this.pageNo = 1\r\n    \r\n    this.applyFilter()\r\n  }\r\n  applyFilter() {\r\n      \r\n      this.fetchInvoices()\r\n    \r\n    \r\n  }\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n  \r\n\r\n  fetchInvoicesCount(){\r\n  //  this.pageNo = 1\r\n  //  this.pageSize = 10\r\n    this.dataService.fetchInvoicesCount().then((result) => {\r\n        \r\n        console.log(\"****** fetchinvoicesCount result   ===== **\"+JSON.stringify(result))\r\n      this.totalDocRecords = result;\r\n      console.log(\"****** this.totalIvoice Records ===== **\"+this.totalDocRecords)\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n \r\n\r\n  fetchInvoices(){\r\n  //  this.pageNo = 1\r\n    //this.pageSize = 10\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    this.dataService.fetchInvoices(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = [];  \r\n        this.normalFiltereduserListArr = result.map(element => element)\r\n      //  console.log(\"****** this.normalFiltereduserListArr   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n        this.normalFiltereduserListArr.forEach(function(invoice, index){\r\n          console.log(\"****** active   ===== **\"+ invoice.active)\r\n        })\r\n        \r\n        this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n  \r\n  updateStatus(value, userInfo) {\r\n   // userInfo.active = value\r\n  //  console.log(\"****** userInfo   ===== **\"+JSON.stringify(userInfo))\r\n  let data ={}\r\n  userInfo.active = !userInfo.active\r\n  console.log(\"******  userInfo.active   ===== **\"+userInfo.active )\r\n    \r\n      userInfo.invoiceId = userInfo._id\r\n      data['invoiceId'] = userInfo._id\r\n      data['active'] = userInfo.active\r\n      console.log(\"****** userInfo   ===== **\"+JSON.stringify(data))\r\n\r\n          this.dataService.updateInvoice(data).then((result) => {\r\n          //  console.log(\"****** updateinvoice result   ===== **\"+JSON.stringify(result))\r\n          this.fetchInvoices()\r\n            this.loading = false;\r\n      \r\n        }, (err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    \r\n    this.toastr.successToastr('Invoice record updated successfully');\r\n  }\r\n\r\n  \r\n}\r\n","<div>\r\n  <app-page-header [heading]=\"'Invoice'\" [icon]=\"'fa-user'\"></app-page-header>\r\n</div>\r\n\r\n  <div class=\"col-md-12\" >\r\n      \r\n          <!--div class=\"card-header\">\r\n              User type\r\n          </div-->\r\n          \r\n          \r\n                \r\n                <div class=\"col-md-12 text-right \" *ngIf=\"user.role.doctor.invoice.create\">                      \r\n                  <div class=\"content\">\r\n                    <button type=\"button\" class=\"btn btn-dark\" (click)=\"openAddInvoiceDialog()\">Add Invoice</button>\r\n                  </div>\r\n              </div>\r\n             \r\n          \r\n          \r\n\r\n      <div class=\"card-body table-responsive marginLeft\"> <span class=\"pb-3 \"><b> List of existing {{userKind}}s </b>  </span>\r\n        <table class=\"table table-striped table-bordered table-sm\">\r\n          <thead>\r\n          <tr>\r\n            \r\n              <th>Bill To</th>\r\n              <th>Paid/Unpaid</th>\r\n              <th>Payment Mode</th>            \r\n              <th>Address</th>      \r\n              <th>MobileNumber</th>      \r\n              \r\n              <th *ngIf=\"user.role.doctor.invoice.edit\">Enable/Disable</th>\r\n              \r\n              <th>Invoice Date</th>\r\n              <th *ngIf=\"user.role.doctor.invoice.edit\">Edit</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tbody *ngIf=\"normalFiltereduserListArr && normalFiltereduserListArr.length>0\">\r\n            \r\n              <tr *ngFor=\"let obj of normalFiltereduserListArr | paginate: { id:'forinvoice1', itemsPerPage: pageSize, currentPage: pageNo, totalItems: totalDocRecords }\">              \r\n                \r\n                  <td>{{obj?.billTo}}</td>                  \r\n              <td>{{obj?.status}}</td>              \r\n              <td>{{obj?.paymentMode}}</td>\r\n              <td>{{obj?.address}}</td>\r\n              <td>{{obj?.mobileNumber}}</td>\r\n              \r\n              <td *ngIf=\"user.role.doctor.invoice.edit\">               \r\n                <ui-switch [(ngModel)]=\"obj.active\" (change)=\"updateStatus($event, obj)\"></ui-switch>\r\n                    \r\n              </td>              \r\n<td >{{convertToHumanDate(obj.invoiceDate)}}</td>\r\n\r\n<td *ngIf=\"user.role.doctor.invoice.edit\" ><button class=\"btn btn-dark\" (click)=\"openForeditInvoice(obj)\"> Edit </button></td>    \r\n\r\n            </tr>\r\n          </tbody>\r\n          <div class=\"col-md-12 text-left clearfix \">\r\n          <pagination-controls class=\"my-pagination marginLeft\"  id=\"forinvoice1\" \r\n               (pageChange)=\"pageChanged($event)\"\r\n                      (pageBoundsCorrection)=\"pageChanged($event)\"                      \r\n                      directionLinks=\"true\"               maxSize=\"9\"\r\n                      directionLinks=\"true\"\r\n                      autoHide=\"true\"\r\n                      responsive=\"true\"\r\n                      previousLabel=\"Prev\"\r\n                      nextLabel=\"Next\"\r\n                      screenReaderPaginationLabel=\"Pagination\"\r\n                      screenReaderPageLabel=\"page\"\r\n                      screenReaderCurrentLabel=\"You're on page\"></pagination-controls >\r\n          </div>\r\n          <tbody *ngIf=\"(normalFiltereduserListArr && normalFiltereduserListArr.length==0)\">\r\n              <tr>\r\n                <td colspan=\"7\" align = \"center\">No record available</td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n\r\n\r\n\r\n      <ng-template #invoiceFormModal let-close=\"close\">\r\n        <form [formGroup]=\"invoiceFormGroup\" class=\"custom_timebox p-0\">\r\n            <div class=\"modal-header py-1\">\r\n                    <h4 class=\"modal-title headerTitle mb-0\">{{mode | titlecase}} Invoice</h4>\r\n                    <button type=\"button\" class=\"close\" (click)=\"closeModal();\">×</button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n                <div class=\"row\"  *ngIf=\"mode == 'add'\">\r\n                  <div class=\"col-md-12\">\r\n                      <div class=\"form-group\">\r\n                          <label class=\"labelTitles\">Select Doctor </label>                        \r\n                          <ng-autocomplete \r\n                          [data]=\"doctorList\"\r\n                          [(ngModel)] = \"doctorName\"\r\n                          formControlName=\"doctorName\"\r\n                          [searchKeyword]=\"keywordDoctor\"\r\n                          (selected)='doctorSelectEvent($event)'\r\n                          (inputChanged)='doctorLocationSearch($event)'\r\n                          \r\n                          [itemTemplate]=\"itemTemplate\"\r\n                          [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n                        </ng-autocomplete>\r\n                     \r\n                        \r\n                        <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n                          <a [innerHTML]=\"item.name\"></a>\r\n                          </ng-template>\r\n                          <ng-template #notFoundTemplate let-notFound>\r\n                          <div [innerHTML]=\"notFound\"></div>\r\n                          </ng-template>\r\n                          \r\n                         \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-md-12 form-group\">\r\n                      <label for=\"email\" class=\"labelTitles\"><b>Invoice Date</b></label>\r\n                  </div>\r\n                  <div class=\"col-md-12 marginTop\">\r\n                          <input type=\"date\" class=\"form-control\" [(ngModel)]=\"invoiceObject.invoiceDate\" formControlName=\"invoiceDate\"\r\n                          placeholder=\"Enter Invoicedate\">\r\n                          \r\n                   </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 form-group\">\r\n                  <label for=\"name\" class=\"labelTitles\"><b>Bill To</b></label>\r\n              </div>\r\n              <div class=\"col-md-12 marginTop\">\r\n                <input class=\"form-control\" [(ngModel)]=\"invoiceObject.billTo\"  formControlName=\"billTo\"  >\r\n              </div>\r\n          </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 form-group labelTitles\">\r\n                  <label for=\"name\" class=\"labelTitles\">Mobile Number</label>\r\n              </div>\r\n              <div class=\"col-md-12 marginTop\">\r\n                  <input class=\"form-control labelValue\" [(ngModel)]=\"invoiceObject.mobileNumber\"  formControlName=\"mobileNumber\" placeholder=\"Mobile Number\">\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                      <label class=\"labelTitles\">Paid/Unpaid </label>                    \r\n                      <select formControlName=\"status\"  [(ngModel)]=\"invoiceObject.status\"  class=\"form-control\" name=\"paidUnpaid\"\r\n                          >                         \r\n                          <option value=\"Paid\" class=\"labelValue\">Paid</option>\r\n                          <option value=\"Unpaid\" class=\"labelValue\">Unpaid</option>\r\n                          \r\n                      </select>\r\n                    \r\n                     \r\n                  </div>\r\n              </div>\r\n          </div>\r\n              \r\n        \r\n          \r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"labelTitles\">Payment Mode </label>                    \r\n                    <select formControlName=\"paymentMode\"  [(ngModel)]=\"invoiceObject.paymentMode\"  class=\"form-control\" name=\"paymentMode\"\r\n                        >                         \r\n                        <option value=\"Cash\" class=\"labelValue\">Cash</option>\r\n                        <option value=\"Card\" class=\"labelValue\">Card</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 form-group\">\r\n                  <label for=\"name\" class=\"labelTitles\"><b>Address</b></label>\r\n              </div>\r\n              <div class=\"col-md-12 marginTop\">\r\n                <textarea class=\"form-control\" [(ngModel)]=\"invoiceObject.address\"  formControlName=\"address\"  rows=\"3\"></textarea>\r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 form-group\">\r\n                <label for=\"name\" class=\"labelTitles\"><b>Appointment ID</b></label>\r\n            </div>\r\n            <div class=\"col-md-12 marginTop\">\r\n              <input class=\"form-control\" [(ngModel)]=\"invoiceObject.appointmentId\"  formControlName=\"appointmentId\"  >\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 form-group\">\r\n              <label for=\"name\" class=\"labelTitles\"><b>Invoice Amount</b></label>\r\n          </div>\r\n          <div class=\"col-md-12 marginTop\">\r\n            <input class=\"form-control\" [(ngModel)]=\"invoiceObject.invoiceAmount\"  formControlName=\"invoiceAmount\"  >\r\n          </div>\r\n      </div>\r\n\r\n              \r\n\r\n     \r\n\r\n         \r\n\r\n             </div>\r\n             <div class=\"modal-footer\">\r\n                <button [disabled]=\"!invoiceFormGroup.valid\" type=\"button\" class=\"btn btn-primary m-10\"\r\n                    (click)=\"save();\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"closeModal();\">Cancel</button>\r\n            </div>\r\n        </form>\r\n        <p *ngIf=\"submitAttempt\" class=\"cutomeerrortext\">\r\n                \r\n         <span class=\"redcolor ml-2\"><i class=\"fa fas fa-exclamation\"></i><b>&nbsp;Fix The Error : </b></span> {{form_fill_failure_msg}}\r\n          \r\n        </p>\r\n</ng-template>\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n<!--div class=\"my-container\">\r\n  <ngx-loading [show]=\"loading\"></ngx-loading>\r\n</div-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { InvoiceRoutingModule } from './invoice-routing.module';\r\nimport { InvoiceComponent } from './invoice.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AutocompleteLibModule,\r\n    NgxPaginationModule,\r\n    InvoiceRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBorderRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [InvoiceComponent]\r\n})\r\nexport class InvoiceModule { }\r\n"],"sourceRoot":"webpack:///"}