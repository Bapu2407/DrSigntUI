{"version":3,"sources":["webpack:///src/app/layout/coupon/coupon-routing.module.ts","webpack:///src/app/layout/coupon/coupon.component.ts","webpack:///src/app/layout/coupon/coupon.component.html","webpack:///src/app/layout/coupon/coupon.module.ts"],"names":["routes","path","component","CouponRoutingModule","forChild","imports","exports","CouponComponent","datePipe","router","route","modal","toastr","_fb","dataService","loadingCustomeMsg","loading","couponType","delivery_coupon","isPrescriptionUploaded","showOldPrescription","allDynaFilter","patientList","customerList","states","keywordCustomer","fetchCouponByCustomer","couponList","fromCustomerPage","userKind","normalFiltereduserListArr","customerOldPrescriptionListArr","items","pageSize","RECORDSIZE","pageNo","tempArray","subLogicType","keywordMedicine","couponObject","active","coupon_amount","coupon_code","expiryDate","paymentMode","couponUsageType","maximumUseTimes","alreadyTimes","medicineArray","medicineId","medicineName","quantity","mg","attendantList","couponObjectBase","openingMeridian","user","role","doctor","coupon","view","customerName","snapshot","paramMap","get","console","log","couponFormGroup","buildForm","group","required","customerId","mode","Object","assign","Math","random","toString","substr","modalReferenceCouponForm","open","couponFormModal","close","localStorage","getItem","navigate","fetchCouponsCount","fetchCoupons","fetchAllCustomersNotByName","then","result","map","element","err","valid","submitAttempt","validateFields","controls","fromJsDateToMongoDate","parseInt","alert","JSON","stringify","addCoupon","commonAfterSaveCode","form_fill_failure_msg","successToastr","updateCoupon","closeMainModal","setTimeout","obj","image","uploadPhotoCouponPrescriptionURL","enlargedPrescPic","modalReferencePrescriptionImage","enlargedPrescriptionModal","selectValue","i","oldPresc","_id","error","medicineListItems","length","transform","data","commonCodeDuringEdit","couponDate","couponId","couponStatus","totalDocRecords","reinitialise","event","applyFilter","undefined","pageOfItems","item","patchValue","fetchAllCouponPrescriptions","val","name","fetchAllCustomers","perPage","filter","value","userInfo","pageChanged","selector","templateUrl","styleUrls","providers","CouponModule","forRoot","animationType","wanderingCubes","backdropBackgroundColour","backdropBcouponRadius","primaryColour","secondaryColour","tertiaryColour","provide","useFactory","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKA,QAAMA,MAAM,GAAW,CACnB;AACIC,UAAI,EAAE,EADV;AACcC,eAAS,EAAE;AADzB,KADmB,CAAvB;;QAUaC,mB;;;;;YAAAA;;;;yBAAAA,mB;AAAmB,O;AAAA,gBAHrB,CAAC,6DAAaC,QAAb,CAAsBJ,MAAtB,CAAD,CAGqB,EAFpB,4DAEoB;;;;0HAAnBG,mB,EAAmB;AAAA;AAAA,kBAFpB,4DAEoB;AAAA,O;AAFR,K;;;;;sEAEXA,mB,EAAmB;cAJ/B,sDAI+B;eAJtB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERM,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAIsB,Q;;;;;;;;;;;;;;;;;;ACfhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACKE;;AACI;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAAmC;;AAAU;;AAE9F;;;;;;AAuBc;;AAAyC;;AAAc;;;;;;AAEvD;;AAAyC;;AAAI;;;;;;;;AAe7C;;AACE;;AAAW;AAAA;;AAAA;;AAAA;AAAA,WAAwB,QAAxB,EAAwB;AAAA;;AAAA;;AAAA;;AAAA;AAAA,SAAxB;;AAA8D;;AAE3E;;;;;;AAFa;;AAAA;;;;;;;;AAK3B;;AAA0C;;AAA6B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAkC;;AAAK;;AAAS;;;;;;AAfzG;;;;AAEI;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAuB;;AAC3B;;AAAK;;AAAsC;;AAC3C;;AAAI;;AAAyB;;AAC7B;;AAAI;;AAAyB;;AAC7B;;AAAI;;AAAsB;;AAE9B;;AAId;;AAAK;;AAAuC;;AAE5C;;AAEY;;;;;;;;AAjBM;;AAEI;;AAAA;;AACA;;AAAA;;AACC;;AAAA;;AACD;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAEJ;;AAAA;;AAIb;;AAAA;;AAED;;AAAA;;;;;;;;;;;;;;;AAjBU;;AAEA;;;;AAkBJ;;;;;;AAlB4C;;AAAA;;;;;;AAiC5C;;AACI;;AACE;;AAAiC;;AAAmB;;AACtD;;AACF;;;;;;;;AAiER;;AACE;;AACI;;AAAuC;;AAAI;;AAAe;;AAAI;;AAClE;;AACA;;AACQ;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAA5B;;AAGP;;AACH;;;;;;AAJsC;;AAAA;;;;;;AAyClC;;AAEC;;AAA4B;;AAAqC;;AAAG;;AAAsB;;AAAI;;AAAQ;;AAEvG;;;;;;AAFuG;;AAAA;;;;;;;;AAzGvG;;AACE;;AACQ;;AAAyC;;;;AAA2B;;AACpE;;AAAoC;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAC;;AACnE;;AACA;;AAKF;;AACE;;AACI;;AAA2B;;AAAG;;AAAkB;;AAAI;;AACxD;;AAEA;;AACQ;;AAA0C;AAAA;;AAAA;;AAAA;AAAA;;AAA1C;;AAGP;;AACP;;AAGA;;AACE;;AACI;;AACI;;AAA2B;;AAAgB;;AAC3C;;AAA2C;AAAA;;AAAA;;AAAA;AAAA;;AAEvC;;AAAgD;;AAAY;;AAC5D;;AAA8C;;AAAU;;AAE5D;;AAGJ;;AACJ;;AACJ;;AAEA;;AACE;;AACI;;AACI;;AAA2B;;AAAqB;;AAEhD;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AAEvC;;AAAwC;;AAAI;;AAC5C;;AAAwC;;AAAI;;AAC5C;;AAAuC;;AAAG;;AAC9C;;AAGA;;AACJ;;AACJ;;AAGE;;AAYI;;AACE;;AACE;;AAAuC;;AAAI;;AAAW;;AAAI;;AAC9D;;AACA;;AACQ;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAA5B;;AAGP;;AACH;;AAGA;;AACE;;AACE;;AAAuC;;AAAI;;AAAqB;;AAAI;;AACxE;;AACA;;AACQ;;AAA4B;AAAA;;AAAA;;AAAA;AAAA;;AAA5B;;AAGP;;AACH;;AAMS;;AACA;;AACG;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAkB;;AAAI;;AAC1B;;AAAmD;AAAA;;AAAA;;AAAA;AAAA;;AAA4B;;AAAM;;AACzF;;AACF;;AACF;;;;;;AAvGM;;AAE6C;;AAAA;;AAcG;;AAAA;;AAWH;;AAAA;;AAiBN;;AAAA;;AAahC;;AAAA;;AAiBuB;;AAAA;;AAYF;;AAAA;;AAYlB;;AAAA;;AAKb;;AAAA;;;;;;AAYC;;;;;;;;;;;;QDnLCC,e;;;;;;;AAuGX,+BACUC,QADV,EAESC,MAFT,EAGUC,KAHV,EAIUC,KAJV,EAKSC,MALT,EAMUC,GANV,EAOSC,WAPT,EAOgC;AAAA;;AAAA;;AAG9B,kCAAML,MAAN;AATQ,cAAAD,QAAA,GAAAA,QAAA;AACD,cAAAC,MAAA,GAAAA,MAAA;AACC,cAAAC,KAAA,GAAAA,KAAA;AACA,cAAAC,KAAA,GAAAA,KAAA;AACD,cAAAC,MAAA,GAAAA,MAAA;AACC,cAAAC,GAAA,GAAAA,GAAA;AACD,cAAAC,WAAA,GAAAA,WAAA;AA7GT,cAAAC,iBAAA,GAAwB,YAAxB;AAEO,cAAAC,OAAA,GAAkB,IAAlB;AACP,cAAAC,UAAA,GAAiB;AAACC,yBAAe,EAAC;AAAjB,SAAjB;AACO,cAAAC,sBAAA,GAAyB,KAAzB;AACP,cAAAC,mBAAA,GAA0B,EAA1B;AAOA,cAAAC,aAAA,GAAgB,IAAhB;AACA,cAAAC,WAAA,GAAkB,EAAlB;AACA,cAAAC,YAAA,GAAmB,EAAnB;AAIA,cAAAC,MAAA,GAAS,+CAAOA,MAAhB;AACA,cAAAC,eAAA,GAAyB,MAAzB;AACA,cAAAC,qBAAA,GAAgC,KAAhC;AACA,cAAAC,UAAA,GAAiB,EAAjB;AASA,cAAAC,gBAAA,GAA2B,KAA3B;AAEO,cAAAC,QAAA,GAAgB,QAAhB;AACP,cAAAC,yBAAA,GAAgC,EAAhC;AACA,cAAAC,8BAAA,GAAqC,EAArC;AAMC,cAAAC,KAAA,GAAQ,EAAR;AAQM,cAAAC,QAAA,GAAW,+CAAOC,UAAlB;AACA,cAAAC,MAAA,GAAS,CAAT;AACP,cAAAC,SAAA,GAAmB,EAAnB;AASF,cAAAC,YAAA,GAAuB,KAAvB;AAIA,cAAAC,eAAA,GAAkB,MAAlB;AACE,cAAAC,YAAA,GACA;AACEC,gBAAM,EAAG,IADX;AAEEC,uBAAa,EAAC,EAFhB;AAGEC,qBAAW,EAAC,EAHd;AAIEC,oBAAU,EAAG,IAJf;AAKEC,qBAAW,EAAC,MALd;AAMEC,yBAAe,EAAC,YANlB;AAOEC,yBAAe,EAAC,GAPlB;AAQEC,sBAAY,EAAC;AARf,SADA;AAYA,cAAAC,aAAA,GAAoB,CAAC,CAAC;AACpBC,oBAAU,EAAE,EADQ;AAEpBC,sBAAY,EAAG,EAFK;AAGpBC,kBAAQ,EAAG,EAHS;AAIpBC,YAAE,EAAE;AAJgB,SAAD,CAAD,CAApB;AAOA,cAAAC,aAAA,GAAoB,EAApB;AACA,cAAAC,gBAAA,GACA;AACEd,gBAAM,EAAG,IADX;AAEEC,uBAAa,EAAC,EAFhB;AAGEC,qBAAW,EAAC,EAHd;AAIEC,oBAAU,EAAG,IAJf;AAKEC,qBAAW,EAAC,MALd;AAMEC,yBAAe,EAAC,YANlB;AAOEC,yBAAe,EAAC,GAPlB;AAQEC,sBAAY,EAAC;AARf,SADA;AAgBA,cAAAQ,eAAA,GAA4B,IAA5B,CASgC,CAIhC;AACC;;AAEC,YAAG,CAAC,MAAKC,IAAL,CAAUC,IAAV,CAAeC,MAAf,CAAsBC,MAAtB,CAA6BC,IAAjC,EAAsC;AACpC;AACD;;AAID,cAAKC,YAAL,GAAqB,MAAKnD,KAAL,CAAWoD,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,MAAjC,CAArB;AAEA,cAAKpC,gBAAL,GAAwB,MAAKlB,KAAL,CAAWoD,QAAX,CAAoBC,QAApB,CAA6BC,GAA7B,CAAiC,kBAAjC,KAAuD,kBAA/E;AACAC,eAAO,CAACC,GAAR,CAAY,0BAAwB,MAAKL,YAAzC,EAhB8B,CAiB9B;;AAGA,cAAKM,eAAL,GAAuB,MAAKC,SAAL,EAAvB;AApB8B;AAsB/B;;;;oCAEQ;AAEP,iBAAO,KAAKvD,GAAL,CAASwD,KAAT,CAAe;AAEpBxB,2BAAe,EAAE,IAAI,0DAAJ,CAAgB,KAAKN,YAAL,CAAkBM,eAAlC,EAAmD,0DAAWyB,QAA9D,CAFG;AAGpBvB,wBAAY,EAAE,IAAI,0DAAJ,CAAgB,KAAKR,YAAL,CAAkBQ,YAAlC,CAHM;AAIpBD,2BAAe,EAAE,IAAI,0DAAJ,CAAgB,KAAKP,YAAL,CAAkBO,eAAlC,CAJG;AAKpBF,uBAAW,EAAE,IAAI,0DAAJ,CAAgB,KAAKL,YAAL,CAAkBK,WAAlC,CALO;AAMpBD,sBAAU,EAAE,IAAI,0DAAJ,CAAgB,KAAKJ,YAAL,CAAkBI,UAAlC,EAA8C,0DAAW2B,QAAzD,CANQ;AAOpB5B,uBAAW,EAAE,IAAI,0DAAJ,CAAgB,KAAKH,YAAL,CAAkBG,WAAlC,EAA+C,0DAAW4B,QAA1D,CAPO;AAQpB7B,yBAAa,EAAE,IAAI,0DAAJ,CAAgB,KAAKF,YAAL,CAAkBE,aAAlC,EAAiD,0DAAW6B,QAA5D;AARK,WAAf,CAAP;AAUD;;;8CACkB,CAElB;;;qDAE4BrD,U,EAAU;AAErC,cAAGA,UAAU,IAAI,iBAAjB,EAAmC;AACjC,mBAAO,4BAAP;AACD;;AAED,cAAGA,UAAU,IAAI,cAAjB,EAAgC;AAC9B,mBAAO,yBAAP;AACD;;AAED,cAAGA,UAAU,IAAI,QAAjB,EAA0B;AACxB,mBAAO,QAAP;AACD;AAEF;AAEH;;;;;;;;;;;;;;oCAWW,CAER;;;iDAEqB;AAEpB,eAAKc,8BAAL,GAAsC,EAAtC;AACA,eAAKwC,UAAL,GAAkB,EAAlB;AACA;;;;;;;AAMA,eAAKC,IAAL,GAAY,KAAZ;AACA,eAAKL,eAAL,GAAuB,KAAKC,SAAL,EAAvB,CAXoB,CAarB;AACC;;AACA,eAAK7B,YAAL,GAAoBkC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKpB,gBAAvB,CAApB;AAEA,eAAKf,YAAL,CAAkBG,WAAlB,GAAgC,UAAQiC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,CAAvB,EAA0BC,MAA1B,CAAiC,CAAjC,EAAoC,CAApC,CAAxC;AACA,eAAKC,wBAAL,GAAgC,KAAKpE,KAAL,CAAWqE,IAAX,CAAgB,KAAKC,eAArB,CAAhC;AACD;;;qCACS,CAET;;;qCAGY;AAEX,cAAG,KAAKF,wBAAR,EACE,KAAKA,wBAAL,CAA8BG,KAA9B;AAEH;;;mCACO;AAGN,cAAI,CAACC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAL,EAAyC;AACvC,iBAAK3E,MAAL,CAAY4E,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;AAED,eAAKC,iBAAL;AACA,eAAKC,YAAL,GARM,CAYT;AACE;;;yCAEa;AAAA;;AACZ;AACE;AAEA,eAAKzE,WAAL,CAAiB0E,0BAAjB,GAA8CC,IAA9C,CAAmD,UAACC,MAAD,EAAe;AAEhE;AAEE,kBAAI,CAACnE,YAAL,GAAoBmE,MAAM,CAACC,GAAP,CAAW,UAAAC,OAAO;AAAA,qBAAIA,OAAJ;AAAA,aAAlB,CAApB,CAJ8D,CAK/D;AACE;AACF;AAEF,WATD,EASG,UAACC,GAAD,EAAS;AACV,kBAAI,CAAC7E,OAAL,GAAe,KAAf;AACAiD,mBAAO,CAACC,GAAR,CAAY2B,GAAZ;AACD,WAZD;AAcD;;;+BAEC;AAAA;;AAEF,cAAG,CAAC,KAAK1B,eAAL,CAAqB2B,KAAzB,EAA+B;AAC3B,iBAAKC,aAAL,GAAqB,IAArB;AACA,iBAAKC,cAAL,CAAoB,KAAK7B,eAAL,CAAqB8B,QAAzC;AACA;AACH;;AACD,eAAK1D,YAAL,CAAkBI,UAAlB,GAA+B,KAAKuD,qBAAL,CAA2B,KAAK3D,YAAL,CAAkBI,UAA7C,CAA/B;;AAEA,cAAG,KAAKJ,YAAL,CAAkBM,eAAlB,IAAqC,YAAxC,EAAqD;AACnD,iBAAKN,YAAL,CAAkBO,eAAlB,GAAoC,GAApC;AAED,WAZC,CAcF;;;AACA,cAAG,KAAKP,YAAL,CAAkBM,eAAlB,IAAqC,cAArC,IAAuDsD,QAAQ,CAAC,KAAK5D,YAAL,CAAkBO,eAAnB,CAAR,GAA8C,CAAxG,EAA2G;AACzGsD,iBAAK,CAAC,yEAAD,CAAL;AACA;AACD;;AAGD,cAAG,KAAK5B,IAAL,IAAa,KAAhB,EAAsB;AACpB,mBAAO,KAAKjC,YAAL,CAAkB,UAAlB,CAAP;AACA0B,mBAAO,CAACC,GAAR,CAAY,kCAAgCmC,IAAI,CAACC,SAAL,CAAe,KAAK/D,YAApB,CAA5C;AACA,iBAAKzB,WAAL,CAAiByF,SAAjB,CAA2B,KAAKhE,YAAhC,EAA8CkD,IAA9C,CAAmD,UAACC,MAAD,EAAY;AAC7D;AACA,oBAAI,CAACc,mBAAL;;AAEE,oBAAI,CAACC,qBAAL,GAA6B,EAA7B;;AACA,oBAAI,CAAC7F,MAAL,CAAY8F,aAAZ,CAA0B,kCAA1B;AAGH,aARD,EAQG,UAACb,GAAD,EAAS;AACZ5B,qBAAO,CAACC,GAAR,CAAY2B,GAAZ;AACC,aAVD;AAYD;;AAAA,cAAG,KAAKrB,IAAL,IAAa,MAAhB,EAAuB;AACtB,iBAAKxD,OAAL,GAAe,IAAf,CADsB,CAEtB;;AACA,mBAAO,KAAKuB,YAAL,CAAkB,UAAlB,CAAP;AACA,iBAAKA,YAAL,CAAkB,UAAlB,IAAgC,KAAKA,YAAL,CAAkB,KAAlB,CAAhC,CAJsB,CAKxB;;AACE,iBAAKzB,WAAL,CAAiB6F,YAAjB,CAA8B,KAAKpE,YAAnC,EAAiDkD,IAAjD,CAAsD,UAACC,MAAD,EAAY;AAChE;AAEE,oBAAI,CAACc,mBAAL;;AACA,kBAAG,MAAI,CAACrF,sBAAR,EAA+B;AAE7B,sBAAI,CAACA,sBAAL,GAA8B,KAA9B;AACD;;AACD,oBAAI,CAACsF,qBAAL,GAA6B,EAA7B;;AACA,oBAAI,CAAC7F,MAAL,CAAY8F,aAAZ,CAA0B,gCAA1B;AACH,aAVD,EAUG,UAACb,GAAD,EAAS;AACV;AACA,oBAAI,CAAC7E,OAAL,GAAe,KAAf;AACAiD,qBAAO,CAACC,GAAR,CAAY2B,GAAZ;AACD,aAdD;AAgBD;AAEJ;;;8CACkB;AAAA;;AACjB,eAAKtB,UAAL,GAAkB,EAAlB;AACQ,eAAKvD,OAAL,GAAe,IAAf,CAFS,CAGV;;AACC,eAAK4F,cAAL;AACAC,oBAAU,CAAC,YAAM;AACf,kBAAI,CAAC7F,OAAL,GAAe,KAAf;AACA,kBAAI,CAACwD,IAAL,GAAY,KAAZ;;AACA,kBAAI,CAACe,YAAL;AAEH,WALW,EAKT,IALS,CAAV;AAOT;;;4CAEmBuB,G,EAAG;AACrB;AACA;AACA,cAAIC,KAAK,GAAID,GAAG,CAACE,gCAAjB;AACA,eAAKC,gBAAL,GAAwBF,KAAxB;AACA,eAAKG,+BAAL,GAAuC,KAAKvG,KAAL,CAAWqE,IAAX,CAAgB,KAAKmC,yBAArB,CAAvC;AACD;;;2CAEkBL,G,EAAG;AACrB;AACC;AACA;AACAA,aAAG,CAACM,WAAJ,GAAkB,IAAlB;;AAEA,eAAM,IAAIC,CAAV,IAAgB,KAAKtF,8BAArB,EAAoD;AAClD,gBAAIuF,QAAQ,GAAG,KAAKvF,8BAAL,CAAoCsF,CAApC,CAAf;;AACA,gBAAGC,QAAQ,CAACC,GAAT,IAAgBT,GAAG,CAACS,GAAvB,EAA2B;AACzB;AACD,aAFD,MAEK;AACH;AACAD,sBAAQ,CAACF,WAAT,GAAuB,KAAvB,CAFG,CAGH;AACD;AACF;;AAGDnD,iBAAO,CAACC,GAAR,CAAY,WAASmC,IAAI,CAACC,SAAL,CAAeQ,GAAf,CAArB,EAlBoB,CAmBpB;AACA;AACD;;;gDAEuBC,K,EAAO;AAC7B,cAAI;AAGF,mBAAO,SAASA,KAAT,GAAiB,GAAxB;AACD,WAJD,CAKA,OAAMS,KAAN,EAAa;AACZvD,mBAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBsD,KAArB;AACA;AACF;;;gDAGuBV,G,EAAK;AAC3B,cAAI;AACF,gBAAIC,KAAK,GAAID,GAAG,CAACE,gCAAjB;AAEED,iBAAK,GAAID,GAAG,CAACE,gCAAb;AACA;;;;AAIJ;;AAGE,mBAAO,SAASD,KAAT,GAAiB,GAAxB;AACD,WAZD,CAaA,OAAMS,KAAN,EAAa,CACZ;AACA;AACF;;;+CAEmB;AAGlB,eAAKrD,eAAL,GAAuB,KAAKC,SAAL,EAAvB;AACAH,iBAAO,CAACC,GAAR,CAAY,8BAA4B,KAAKuD,iBAAL,CAAuBC,MAA/D;AAED;;;0CACkBlE,I,EAAI;AACrB;AAEA;AACA,eAAKzC,iBAAL,IAA0B,2CAA1B;AACA,eAAKyD,IAAL,GAAY,MAAZ;AAEA,eAAKO,wBAAL,GAAgC,KAAKpE,KAAL,CAAWqE,IAAX,CAAgB,KAAKC,eAArB,CAAhC;AACA,eAAKV,UAAL,GAAkBf,IAAI,CAAC,YAAD,CAAtB;AACA,eAAKjB,YAAL,GAAoBkC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBlB,IAAlB,CAApB;AAEA,eAAKjB,YAAL,CAAkBI,UAAlB,GAA+B,KAAKnC,QAAL,CAAcmH,SAAd,CAAwB,KAAKpF,YAAL,CAAkBI,UAA1C,EAAsD,YAAtD,CAA/B;AACAsB,iBAAO,CAACC,GAAR,CAAY,wBAAsB,KAAKK,UAAvC,EAZqB,CAcrB;AACA;;AAEA,cAAIqD,IAAI,GAAE;AAACrD,sBAAU,EAAC,KAAKA;AAAjB,WAAV;AACAN,iBAAO,CAACC,GAAR,CAAY,iCAA+BmC,IAAI,CAACC,SAAL,CAAesB,IAAf,CAA3C;AACA,eAAKC,oBAAL;AAGD;;;uCAEa;AAEV,eAAKC,UAAL,GAAkB,EAAlB;AACA,eAAKvD,UAAL,GAAkB,EAAlB;AACA,eAAKwD,QAAL,GAAgB,EAAhB;AACA,eAAKC,YAAL,GAAoB,EAApB;AACA,eAAKnE,YAAL,GAAoB,EAApB;AACA,eAAKxC,aAAL,GAAqB,IAArB;AACA,eAAKiE,iBAAL;AACA,eAAK2C,eAAL,GAAuB,CAAvB;AACA,eAAK1C,YAAL;AACD;;;gCACI;AACH,eAAK2C,YAAL;AACA,eAAKtH,MAAL,CAAY8F,aAAZ,CAA0B,sCAA1B;AACD;;;oCACWyB,K,EAAK;AACflE,iBAAO,CAACC,GAAR,CAAY,iCAA+BiE,KAA3C;AACA,eAAKhG,MAAL,GAAcgG,KAAd;AACA,eAAKC,WAAL;AACD;;;yCACc;AAEf,cAAG,KAAKrD,wBAAR,EACE,KAAKA,wBAAL,CAA8BG,KAA9B;AAEH;;;yCACe;AACZ,eAAK/C,MAAL,GAAc,CAAd;AAEA,eAAKiG,WAAL;AACD;;;sCACa;AACZ,cAAG,KAAK7D,UAAL,IAAmB8D,SAAnB,IAAgC,KAAK9D,UAArC,IAAmD,KAAKA,UAAL,IAAmB,EAAzE,EAA4E;AAC1E,iBAAK7C,qBAAL,GAA6B,IAA7B;AACD,WAFD,MAEK;AACH,iBAAKA,qBAAL,GAA6B,KAA7B;AACD;;AAEDuC,iBAAO,CAACC,GAAR,CAAY,qBAAmB,KAAKK,UAApC;AAEA,eAAKe,iBAAL;AACA,eAAKC,YAAL;AAED;;;qCACY+C,W,EAAyB;AACpC;AACA,eAAKA,WAAL,GAAmBA,WAAnB;AACA,eAAKnG,MAAL,GAAc,CAAd;AAEH;;;4CAGmBoG,I,EAAM;AACxB,cAAGA,IAAH,EAAQ;AACR,iBAAKpE,eAAL,CAAqBH,GAArB,CAAyB,YAAzB,EAAuCwE,UAAvC,CAAkDD,IAAI,CAAC,KAAD,CAAtD;AACA,iBAAKhE,UAAL,GAAkBgE,IAAI,CAAC,KAAD,CAAtB;;AAEA,gBAAG,KAAKhE,UAAR,EAAmB;AACjB,mBAAKvD,OAAL,GAAe,IAAf;AACA,mBAAKD,iBAAL,IAA0B,2CAA1B;AACA,mBAAK0H,2BAAL;AACD,aARO,CASR;;AACC,WAXuB,CAYxB;;AACD;;;+CAEsBC,G,EAAa;AAAA;;AAClC;AACD;AACC,cAAId,IAAI,GAAG;AAACe,gBAAI,EAACD;AAAN,WAAX;AACA,eAAK5H,WAAL,CAAiB8H,iBAAjB,CAAmChB,IAAnC,EAAyCnC,IAAzC,CAA8C,UAACC,MAAD,EAAe;AAC3D,kBAAI,CAACnE,YAAL,GAAoBmE,MAAM,CAACC,GAAP,CAAW,UAAAC,OAAO;AAAA,qBAAIA,OAAJ;AAAA,aAAlB,CAApB;AACD,WAFD,EAEG,UAACC,GAAD,EAAS,CACR;AACH,WAJD,EAJkC,CASnC;AACA;;;4CAIkB;AAAA;;AACjB;AACA;;AACC;;;;;;;;;;;;;;;;;;AAsBA,cAAI+B,IAAI,GAAG;AAACzF,kBAAM,EAAC,KAAKA,MAAb;AAAoB0G,mBAAO,EAAC,KAAK5G,QAAjC;AAA0C6G,kBAAM,EAAG,KAAKzH;AAAxD,WAAX,CAzBgB,CA0BhB;AACC;;AACA4C,iBAAO,CAACC,GAAR,CAAY,kBAAgBmC,IAAI,CAACC,SAAL,CAAesB,IAAf,CAA5B;AAEA,eAAK9G,WAAL,CAAiBwE,iBAAjB,GAAqCG,IAArC,CAA0C,UAACC,MAAD,EAAY;AAEpDzB,mBAAO,CAACC,GAAR,CAAY,+CAA6CmC,IAAI,CAACC,SAAL,CAAeZ,MAAf,CAAzD;AACF,kBAAI,CAACuC,eAAL,GAAuBvC,MAAvB;AACA,kBAAI,CAAC1E,OAAL,GAAe,KAAf;AAEAiD,mBAAO,CAACC,GAAR,CAAY,yCAAuC,MAAI,CAAC+D,eAAxD;AAED,WARC,EAQC,UAACpC,GAAD,EAAS;AACV,kBAAI,CAAC7E,OAAL,GAAe,KAAf;AACAiD,mBAAO,CAACC,GAAR,CAAY2B,GAAZ;AACD,WAXC;AAYD;;;sDAE2B;AAE1B,cAAI+B,IAAI,GAAE;AAACrD,sBAAU,EAAC,KAAKA;AAAjB,WAAV;AAEAN,iBAAO,CAACC,GAAR,CAAY,iCAA+BmC,IAAI,CAACC,SAAL,CAAesB,IAAf,CAA3C;AAED;;;uCACW;AAAA;;AACZ;AACE;AACD;AACC;AAED;AACC,cAAIA,IAAI,GAAG;AAACzF,kBAAM,EAAC,KAAKA,MAAb;AAAoB0G,mBAAO,EAAC,KAAK5G,QAAjC;AAA0C6G,kBAAM,EAAG,KAAKzH;AAAxD,WAAX,CAPU,CAQb;AACC;AACA;;AACA,eAAKP,WAAL,CAAiByE,YAAjB,CAA8BqC,IAA9B,EAAoCnC,IAApC,CAAyC,UAACC,MAAD,EAAe;AACtD,kBAAI,CAAC5D,yBAAL,GAAiC,EAAjC;AACE,kBAAI,CAACA,yBAAL,GAAiC4D,MAAM,CAACC,GAAP,CAAW,UAAAC,OAAO,EAAI;AACrD,qBAASA,OAAT;AACD,aAFgC,CAAjC,CAFoD,CAKtD;;AACE,kBAAI,CAAC5E,OAAL,GAAe,KAAf;AAEH,WARD,EAQG,UAAC6E,GAAD,EAAS;AACV,kBAAI,CAAC/D,yBAAL,GAAiC,EAAjC;AACA,kBAAI,CAACd,OAAL,GAAe,KAAf;AACAiD,mBAAO,CAACC,GAAR,CAAY2B,GAAZ;AACD,WAZD;AAeF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BG;;;qCAEYkD,K,EAAOC,Q,EAAU;AAAA;;AAC7B;AACD;AACA,cAAIpB,IAAI,GAAE,EAAV;AACAoB,kBAAQ,CAACxG,MAAT,GAAkB,CAACwG,QAAQ,CAACxG,MAA5B;AACAyB,iBAAO,CAACC,GAAR,CAAY,uCAAqC8E,QAAQ,CAACxG,MAA1D;AAEIwG,kBAAQ,CAACjB,QAAT,GAAoBiB,QAAQ,CAACzB,GAA7B;AACAK,cAAI,CAAC,UAAD,CAAJ,GAAmBoB,QAAQ,CAACzB,GAA5B;AACAK,cAAI,CAAC,QAAD,CAAJ,GAAiBoB,QAAQ,CAACxG,MAA1B;AACAyB,iBAAO,CAACC,GAAR,CAAY,+BAA6BmC,IAAI,CAACC,SAAL,CAAesB,IAAf,CAAzC;AAEI,eAAK9G,WAAL,CAAiB6F,YAAjB,CAA8BiB,IAA9B,EAAoCnC,IAApC,CAAyC,UAACC,MAAD,EAAY;AACrD;AACA,kBAAI,CAACH,YAAL;;AACE,kBAAI,CAACvE,OAAL,GAAe,KAAf;AAEH,WALC,EAKC,UAAC6E,GAAD,EAAS;AACV,kBAAI,CAAC7E,OAAL,GAAe,KAAf;AACAiD,mBAAO,CAACC,GAAR,CAAY2B,GAAZ;AACD,WARC;AAUN,eAAKjF,MAAL,CAAY8F,aAAZ,CAA0B,oCAA1B;AACD;;;;MAvnBkC,+D;;;uBAAxBnG,e,EAAe,yH,EAAA,uH,EAAA,+H,EAAA,oI,EAAA,uI,EAAA,2H,EAAA,wI;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;kFAFd,CAAC,mEAAD,C,GAAU,wE;AAAA,e;AAAA,c;AAAA,4/E;AAAA;AAAA;AClBxB;;AACE;;AACF;;AAEA;;AACE;;AAUF;;AAGM;;AAAoD;;AAAoB;;AAAI;;AAA+B;;AAAM;;AAC/G;;AACE;;AACA;;AACE;;AAAI;;AAAY;;AACd;;AAAI;;AAAa;;AAGjB;;AAAI;;AAAW;;AACf;;AAAI;;AAAU;;AACd;;AAAI;;AAAc;;AAClB;;AAAI;;AAAY;;AAEhB;;AACA;;AAAI;;AAAY;;AAChB;;AACJ;;AACA;;AACA;;AACI;;AAqBJ;;AACA;;AACK;AAAA,mBAAc,IAAA0I,WAAA,QAAd;AAAiC,WAAjC,EAAkC,sBAAlC,EAAkC;AAAA,mBACH,IAAAA,WAAA,QADG;AACgB,WADlD;;AAUiD;;AACtD;;AACA;;AAKF;;AACF;;AAKA;;AAiHN;;AACE;;AAKA;;AACF;;;;;;AA1MmB;;AAAA,wFAAoB,MAApB,EAAoB,SAApB;;AAIM;;AAAA;;AAayD;;AAAA;;AAahE;;AAAA;;AAEA;;AAAA;;AAIG;;AAAA;;AAmCJ;;AAAA;;AAkIF;;AAAA,wFAAgB,QAAhB,EAAgB,sEAAhB,EAAgB,UAAhB,EAAgB,KAAhB;;;;;;;;;;sEDtLF1I,e,EAAe;cAN3B,uDAM2B;eANjB;AACT2I,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD,CAHF;AAITC,mBAAS,EAAG,CAAC,mEAAD;AAJH,S;AAMiB,Q;;;;;;;;;;;;;;;;;;gBAEzB,uD;iBAAU,oB;;;gBA8BV,uD;iBAAU,K;;;gBAQV,uD;iBAAU,S;;;gBAET,uD;iBAAU,iB;;;gBACV,uD;iBAAU,kB;;;gBACV,uD;iBAAU,oB;;;gBACV,uD;iBAAU,2B;;;;;;;;;;;;;;;;;;;;AEjEd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,uE,CAOA;AACA;AAYA;AACA;AACA;;;QA+BaC,Y;;;;;YAAAA;;;;yBAAAA,Y;AAAY,O;AAAA,gBA5Bd,CACP,4DADO,EAEP,kEAFO,EAGP,8EAHO,EAIP,kEAJO,EAKP,2EALO,EAMP,0DANO,EAOP,wDAPO,EAQP,8DAAiBC,OAAjB,CAAyB;AACvBC,qBAAa,EAAE,sEAAyBC,cADjB;AAEvBC,gCAAwB,EAAE,iBAFH;AAGvBC,6BAAqB,EAAE,KAHA;AAIvBC,qBAAa,EAAE,SAJQ;AAKvBC,uBAAe,EAAE,SALM;AAMvBC,sBAAc,EAAE;AANO,OAAzB,CARO,EAgBP,gEAhBO,EAiBP,qEAAUP,OAAV,EAjBO,EAkBT;AACA;AACE,yEAAgBA,OAAhB,EApBO,EAqBP,gEAAeA,OAAf,CAAuB;AACrBQ,eAAO,EAAE,4DADY;AAErBC,kBAAU,EAAE;AAFS,OAAvB,CArBO,CA4Bc;;;;0HAAZV,Y,EAAY;AAAA,uBAFR,kEAEQ;AAFO,kBAzB5B,4DAyB4B,EAxB5B,kEAwB4B,EAvB5B,8EAuB4B,EAtB5B,kEAsB4B,EArB5B,2EAqB4B,EApB5B,0DAoB4B,EAnB5B,wDAmB4B,EAnBZ,6DAmBY,EAV5B,gEAU4B,EAVd,oEAUc,EAVd,kEAUc,EAVd,+DAUc;AAEP,O;AAZP,K;;;;;sEAYLA,Y,EAAY;cA7BxB,sDA6BwB;eA7Bf;AACRjJ,iBAAO,EAAE,CACP,4DADO,EAEP,kEAFO,EAGP,8EAHO,EAIP,kEAJO,EAKP,2EALO,EAMP,0DANO,EAOP,wDAPO,EAQP,8DAAiBkJ,OAAjB,CAAyB;AACvBC,yBAAa,EAAE,sEAAyBC,cADjB;AAEvBC,oCAAwB,EAAE,iBAFH;AAGvBC,iCAAqB,EAAE,KAHA;AAIvBC,yBAAa,EAAE,SAJQ;AAKvBC,2BAAe,EAAE,SALM;AAMvBC,0BAAc,EAAE;AANO,WAAzB,CARO,EAgBP,gEAhBO,EAiBP,qEAAUP,OAAV,EAjBO,EAkBT;AACA;AACE,6EAAgBA,OAAhB,EApBO,EAqBP,gEAAeA,OAAf,CAAuB;AACrBQ,mBAAO,EAAE,4DADY;AAErBC,sBAAU,EAAE;AAFS,WAAvB,CArBO,CADD;AA2BRC,sBAAY,EAAE,CAAC,kEAAD;AA3BN,S;AA6Be,Q","file":"coupon-coupon-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CouponComponent } from './coupon.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: CouponComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CouponRoutingModule { }\r\n","import { Component, OnInit, NgZone, ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion,NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router , ActivatedRoute} from '@angular/router';\r\nimport *  as moment from 'moment';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\nimport { Config } from '../../config';\r\n\r\nimport { DatePipe } from '@angular/common';\r\nimport { BaseComponent } from 'src/BaseComponent';\r\nimport { FormBuilder, FormGroup, FormControl, Validators,FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-coupon',\r\n  templateUrl: './coupon.component.html',\r\n  styleUrls: ['./coupon.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class CouponComponent extends BaseComponent implements OnInit {\r\n  loadingCustomeMsg:any = \"Loading...\"\r\n  @ViewChild('fileInputDemoPhoto') fileInputDemoPhoto :ElementRef;;\r\n  public loading:boolean = true;\r\n  couponType:any = {delivery_coupon:[]}\r\n  public isPrescriptionUploaded = false\r\n  showOldPrescription:any = ''\r\n \r\n  \r\n\r\n  public closeResult: string;\r\n  enlargedPic:any\r\n  enlargedPrescPic:any\r\n  allDynaFilter = null\r\n  patientList:any = []\r\n  customerList:any = []\r\n  couponStatus:string\r\n  couponId:string\r\n  couponDate:string\r\n  states = Config.states\r\n  keywordCustomer:string = \"name\"\r\n  fetchCouponByCustomer:boolean = false\r\n  couponList:any = []\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  fromCustomerPage:boolean = false\r\n  @ViewChild('acc') accordionComponent: NgbAccordion;\r\n  public userKind:string=\"coupon\"\r\n  normalFiltereduserListArr:any = [];\r\n  customerOldPrescriptionListArr:any = [];\r\n  \r\n  modalSearchFilerReference: NgbModalRef;\r\n\r\n  modalReferenceCouponForm: NgbModalRef;\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('couponFormModal') couponFormModal: TemplateRef<any>;\r\n   @ViewChild('searFiltersModal') searFiltersModal: TemplateRef<any>;\r\n   @ViewChild('enlargedImageModal') enlargedImageModal: TemplateRef<any>;\r\n   @ViewChild('enlargedPrescriptionModal') enlargedPrescriptionModal: TemplateRef<any>;\r\n\r\n   \r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  couponFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  customCoupontime : {\r\n    hour: 10,\r\n    minute: 20,\r\n\r\n};\r\nsubLogicType:boolean = false\r\n\r\n\r\nmedicineName:any\r\nkeywordMedicine = \"name\"\r\n  couponObject =  \r\n  {    \r\n    active : true,             \r\n    coupon_amount:'',\r\n    coupon_code:'',\r\n    expiryDate : null,\r\n    paymentMode:'Cash',\r\n    couponUsageType:'single_use',\r\n    maximumUseTimes:'0',\r\n    alreadyTimes:'0'    \r\n    \r\n  }\r\n  medicineArray:any = [[{\r\n    medicineId: '',             \r\n    medicineName : \"\",\r\n    quantity : \"\",\r\n    mg: ''\r\n            \r\n  }]]\r\n  attendantList:any = []\r\n  couponObjectBase =  \r\n  {    \r\n    active : true,         \r\n    coupon_amount:'',\r\n    coupon_code:'',\r\n    expiryDate : null,\r\n    paymentMode:'Cash',\r\n    couponUsageType:'single_use',\r\n    maximumUseTimes:'0',\r\n    alreadyTimes:'0'    \r\n  }\r\n  customer:any\r\n  customerName:any\r\n  customerId:any\r\n  doctorName:any\r\n  medicineListItems: FormArray;\r\n  openingMeridian : boolean = true;\r\n\r\n  constructor(    \r\n    private datePipe : DatePipe,\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess   \r\n    \r\n  ) {\r\n    super(router)\r\n  //  this.customCoupontime.hour = 9\r\n   // this.customCoupontime.minute = 10\r\n\r\n    if(!this.user.role.doctor.coupon.view){\r\n      return\r\n    }\r\n\r\n    \r\n\r\n    this.customerName =  this.route.snapshot.paramMap.get('name');\r\n\r\n    this.fromCustomerPage = this.route.snapshot.paramMap.get('fromCustomerPage') =='fromCustomerPage';\r\n    console.log(\"this.customerName  **\"+this.customerName ) \r\n    //this.customerId =  \"5ee8ea1158ea514eec6f6e18\"//this.route.snapshot.paramMap.get('customerId');\r\n\r\n\r\n    this.couponFormGroup = this.buildForm()\r\n   \r\n  }\r\n\r\n  buildForm(){\r\n    \r\n    return this._fb.group({\r\n      \r\n      couponUsageType: new FormControl(this.couponObject.couponUsageType, Validators.required), \r\n      alreadyTimes: new FormControl(this.couponObject.alreadyTimes), \r\n      maximumUseTimes: new FormControl(this.couponObject.maximumUseTimes), \r\n      paymentMode: new FormControl(this.couponObject.paymentMode),       \r\n      expiryDate: new FormControl(this.couponObject.expiryDate, Validators.required) ,\r\n      coupon_code: new FormControl(this.couponObject.coupon_code, Validators.required), \r\n      coupon_amount: new FormControl(this.couponObject.coupon_amount, Validators.required), \r\n    });\r\n  }\r\n  changePercentAmount(){\r\n\r\n  }\r\n\r\n  convertToHumanCouponTypeDesc(couponType){\r\n    \r\n    if(couponType == \"delivery_coupon\"){\r\n      return 'Direct Coupons on Delivery'\r\n    }\r\n\r\n    if(couponType == \"order_volume\"){\r\n      return 'Coupons ON Order Volume'\r\n    }\r\n    \r\n    if(couponType == \"coupon\"){\r\n      return 'Coupon'\r\n    }\r\n\r\n  }\r\n\r\n/*\r\n  ngAfterViewInit(){\r\n    this.dataService.fetchAllPatients().then((result:[]) => {\r\n      this.patientList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n\r\n   \r\n  }\r\n  */\r\n  getCoupon(){\r\n\r\n  }\r\n  \r\n  openforAddCouponDialog(){\r\n\r\n    this.customerOldPrescriptionListArr = []; \r\n    this.customerId = ''\r\n    /*\r\n    if(this.customerId == undefined || !this.customerId || this.customerId == ''){\r\n     alert(\"Please select a customer first, from the dropdown\")\r\n     return\r\n    }\r\n    */\r\n    this.mode = \"add\"\r\n    this.couponFormGroup = this.buildForm()\r\n    \r\n   // \r\n    //this.medicineListItems.push({})\r\n    this.couponObject = Object.assign({}, this.couponObjectBase);\r\n\r\n    this.couponObject.coupon_code = \"COUPO\"+Math.random().toString(5).substr(2, 5)\r\n    this.modalReferenceCouponForm = this.modal.open(this.couponFormModal);\r\n  }\r\n  getPatient(){\r\n\r\n  }\r\n \r\n\r\n  closeModal() {\r\n     \r\n    if(this.modalReferenceCouponForm)\r\n      this.modalReferenceCouponForm.close();\r\n    \r\n  }\r\n  ngOnInit(){\r\n\r\n\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n    \r\n    this.fetchCouponsCount()  \r\n    this.fetchCoupons()   \r\n\r\n   \r\n    \r\n //   this.items = Array(150).fill(0).map((x, i) => ({ id: (i + 1), name: `Item ${i + 1}`})\r\n  };\r\n\r\n  fetchCustomers(){\r\n    //  this.pageNo = 1\r\n      //this.pageSize = 10\r\n      \r\n      this.dataService.fetchAllCustomersNotByName().then((result:[]) => {\r\n          \r\n        //this.customerList = [];      \r\n  \r\n          this.customerList = result.map(element => element)\r\n         // if(!this.fromCustomerPage){\r\n           // this.customerId = this.customerList[0]\r\n         // }\r\n  \r\n      }, (err) => {\r\n        this.loading = false;\r\n        console.log(err);\r\n      });\r\n  \r\n    }\r\n    \r\n  save(){\r\n\r\n    if(!this.couponFormGroup.valid){\r\n        this.submitAttempt = true;        \r\n        this.validateFields(this.couponFormGroup.controls)                   \r\n        return; \r\n    } \r\n    this.couponObject.expiryDate = this.fromJsDateToMongoDate(this.couponObject.expiryDate)\r\n    \r\n    if(this.couponObject.couponUsageType == 'single_use'){\r\n      this.couponObject.maximumUseTimes = '1'      \r\n    \r\n    }\r\n\r\n    //alert(parseInt(this.couponObject.maximumUseTimes))\r\n    if(this.couponObject.couponUsageType == 'multiple_use' && parseInt(this.couponObject.maximumUseTimes) < 2 ){\r\n      alert(\"For the multi use coupon, the maximum use number must be greater than 1\")  \r\n      return\r\n    }\r\n    \r\n\r\n    if(this.mode == \"add\"){\r\n      delete this.couponObject['customer']\r\n      console.log(\"this.couponObject for add == \"+JSON.stringify(this.couponObject))\r\n      this.dataService.addCoupon(this.couponObject).then((result) => {                \r\n        //  console.log(\"result after adduser == \"+JSON.stringify(result))\r\n        this.commonAfterSaveCode()\r\n          \r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('New coupon is added successfully');\r\n          \r\n\r\n      }, (err) => {        \r\n      console.log(err);\r\n      });\r\n      \r\n    }if(this.mode == \"edit\"){\r\n      this.loading = true;\r\n      //delete this.couponObject['patient']\r\n      delete this.couponObject['customer']\r\n      this.couponObject['couponId'] = this.couponObject['_id']\r\n    //  console.log(\"this.couponObject for edit == \"+JSON.stringify(this.couponObject))\r\n      this.dataService.updateCoupon(this.couponObject).then((result) => {\r\n        //  console.log(\"****** updatecoupon result   ===== **\"+JSON.stringify(result))\r\n          \r\n          this.commonAfterSaveCode()\r\n          if(this.isPrescriptionUploaded){\r\n            \r\n            this.isPrescriptionUploaded = false\r\n          }\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('coupon is updated successfully'); \r\n      }, (err) => {\r\n        //this.mode = \"add\"\r\n        this.loading = false;\r\n        console.log(err);\r\n      });\r\n      \r\n    }\r\n    \r\n}\r\ncommonAfterSaveCode(){\r\n  this.customerId = ''\r\n          this.loading = true;\r\n         // this.normalFiltereduserListArr = []; \r\n          this.closeMainModal()\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.mode = \"add\"   \r\n            this.fetchCoupons()\r\n            \r\n        }, 2000);\r\n      \r\n}\r\n\r\nenlargePrescription(obj){\r\n  //this.closeCustomModal()\r\n  //this.enlargedPic = ''\r\n  let image  = obj.uploadPhotoCouponPrescriptionURL    \r\n  this.enlargedPrescPic = image\r\n  this.modalReferencePrescriptionImage = this.modal.open(this.enlargedPrescriptionModal); \r\n}\r\n\r\nselectPrescription(obj){\r\n // let image  = obj.uploadPhotoCouponPrescriptionURL    \r\n  //  this.enlargedPrescPic = image\r\n  //this.modalReferenceImage = this.modal.open(this.enlargedPrescriptionModal); \r\n  obj.selectValue = true\r\n\r\n  for ( var i in  this.customerOldPrescriptionListArr){\r\n    let oldPresc = this.customerOldPrescriptionListArr[i]\r\n    if(oldPresc._id == obj._id){\r\n      continue\r\n    }else{\r\n      //this.customerOldPrescriptionListArr.splice(i, 1);\r\n      oldPresc.selectValue = false\r\n      //this.customerOldPrescriptionListArr.splice(i, 1,oldPresc);\r\n    }\r\n  }\r\n  \r\n\r\n  console.log(\"obj ==\"+JSON.stringify(obj))\r\n  //this.getPhotoOLDPrescription(obj.uploadPhotoCouponPrescriptionURL)\r\n  //this.showOldPrescription  = 'url(' + obj.uploadPhotoCouponPrescriptionURL + ')'\r\n}\r\n\r\ngetPhotoOLDPrescription(image) {\r\n  try {\r\n    \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   console.log('Error', error);\r\n  }\r\n}\r\n\r\n\r\ngetPhotoOldPrescription(obj) {\r\n  try {\r\n    let image  = obj.uploadPhotoCouponPrescriptionURL\r\n    \r\n      image  = obj.uploadPhotoCouponPrescriptionURL\r\n      /*if(obj && obj.uploadPhotoCouponPrescription){\r\n        image = obj.uploadPhotoCouponPrescription\r\n      }\r\n    */\r\n  //  this.enlargedPic = image\r\n   \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   // //console.log('Error', error);\r\n  }\r\n}\r\n\r\ncommonCodeDuringEdit(){\r\n\r\n  \r\n  this.couponFormGroup = this.buildForm()\r\n  console.log(\"this.medicineListItems **\"+this.medicineListItems.length)\r\n\r\n}\r\n openForeditCoupon(user){\r\n  //this.modalReferenceCouponForm = this.modal.open(this.couponFormModal);\r\n\r\n  //this.loading = true\r\n  this.loadingCustomeMsg == \"Fetching old prescriptions, please wait..\"\r\n  this.mode = \"edit\"\r\n  \r\n  this.modalReferenceCouponForm = this.modal.open(this.couponFormModal);\r\n  this.customerId = user['customerId']\r\n  this.couponObject = Object.assign({}, user); \r\n\r\n  this.couponObject.expiryDate = this.datePipe.transform(this.couponObject.expiryDate, 'yyyy-MM-dd')\r\n  console.log(\"this.customerId == \"+this.customerId)\r\n\r\n  //if(this.customerId)\r\n  //this.fetchAllCouponPrescriptions()  \r\n\r\n  let data ={customerId:this.customerId}\r\n  console.log(\" fetch old prescription for \"+JSON.stringify(data))\r\n  this.commonCodeDuringEdit()\r\n  \r\n  \r\n}\r\n\r\n  reinitialise(){\r\n  \r\n    this.couponDate = ''\r\n    this.customerId = ''\r\n    this.couponId = ''\r\n    this.couponStatus = ''\r\n    this.customerName = ''\r\n    this.allDynaFilter = null\r\n    this.fetchCouponsCount()\r\n    this.totalDocRecords = 0\r\n    this.fetchCoupons()\r\n  }\r\n  reset(){\r\n    this.reinitialise()\r\n    this.toastr.successToastr('Filters reset, coupon list refreshed');\r\n  }\r\n  pageChanged(event){\r\n    console.log(\"****** this.event   ===== **\"+event)\r\n    this.pageNo = event\r\n    this.applyFilter()\r\n  }\r\ncloseMainModal() {\r\n     \r\n  if(this.modalReferenceCouponForm)\r\n    this.modalReferenceCouponForm.close();\r\n  \r\n}\r\n  userKindChange(){\r\n    this.pageNo = 1\r\n    \r\n    this.applyFilter()\r\n  }\r\n  applyFilter() {  \r\n    if(this.customerId != undefined && this.customerId && this.customerId != ''){\r\n      this.fetchCouponByCustomer = true\r\n    }else{\r\n      this.fetchCouponByCustomer = false\r\n    }\r\n\r\n    console.log(\"this.customerId \"+this.customerId)    \r\n        \r\n    this.fetchCouponsCount()  \r\n    this.fetchCoupons()    \r\n    \r\n  }\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n \r\n  \r\ncustomerSelectEvent(item) {\r\n  if(item){\r\n  this.couponFormGroup.get('customerId').patchValue(item['_id']);\r\n  this.customerId = item['_id']\r\n\r\n  if(this.customerId){\r\n    this.loading = true\r\n    this.loadingCustomeMsg == \"Fetching old prescriptions, please wait..\"\r\n    this.fetchAllCouponPrescriptions()   \r\n  }\r\n  //console.log(\" inside customerSelectEvent \"+JSON.stringify(item))\r\n  }\r\n  // do something with selected item\r\n}\r\n\r\nonChangeCustomerSearch(val: string) {\r\n  //console.log(\" inside onChangePatientSearch val \"+val)\r\n // if(val && val.length >2 ){\r\n  let data = {name:val}\r\n  this.dataService.fetchAllCustomers(data).then((result:[]) => {\r\n    this.customerList = result.map(element => element)\r\n  }, (err) => {\r\n      //console.log(err);\r\n  });\r\n // }\r\n}\r\n\r\n\r\n\r\n  fetchCouponsCount(){\r\n  //  this.pageNo = 1\r\n  //  this.pageSize = 10\r\n   /* let data = {}\r\n    if(this.fetchCouponByCustomer){\r\n      data['fetchCouponByCustomer'] = true\r\n      data['customerId'] = this.customerId\r\n    }else{\r\n      data['fetchCouponByCustomer'] = false\r\n    }\r\n    this.dataService.fetchCouponsCount(data).then((result) => {\r\n        \r\n        console.log(\"****** fetchcouponsCount result   ===== **\"+JSON.stringify(result))\r\n      this.totalDocRecords = result;\r\n      console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n\r\n    */\r\n\r\n   let data = {pageNo:this.pageNo,perPage:this.pageSize,filter : this.allDynaFilter}\r\n   // this.fetchCouponsCount({filter : allDynaFilter})  \r\n    //this.fetchCouponsByFilters({filter : allDynaFilter})   \r\n    console.log(\" inside data \"+JSON.stringify(data))\r\n  \r\n    this.dataService.fetchCouponsCount().then((result) => {\r\n          \r\n      console.log(\"****** fetchcouponsCount result   ===== **\"+JSON.stringify(result))\r\n    this.totalDocRecords = result;\r\n    this.loading = false;\r\n\r\n    console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n  \r\n  }, (err) => {\r\n    this.loading = false;\r\n    console.log(err);\r\n  });\r\n  }\r\n \r\n   fetchAllCouponPrescriptions(){\r\n    \r\n    let data ={customerId:this.customerId}\r\n\r\n    console.log(\" fetch old prescription for \"+JSON.stringify(data))\r\n    \r\n  }\r\n  fetchCoupons(){\r\n  //  this.pageNo = 1\r\n    //this.pageSize = 10\r\n   // let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    //data['customerId'] = this.customerId\r\n\r\n   // console.log(\"this.customerId   ===== **\"+this.customerId)\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize,filter : this.allDynaFilter}\r\n // this.fetchCouponsCount({filter : allDynaFilter})  \r\n  //this.fetchCouponsByFilters({filter : allDynaFilter})   \r\n  //console.log(\" inside data \"+JSON.stringify(data))\r\n  this.dataService.fetchCoupons(data).then((result:[]) => {        \r\n    this.normalFiltereduserListArr = []; \r\n      this.normalFiltereduserListArr = result.map(element => {        \r\n        return   element\r\n      })\r\n    //  console.log(\"****** this.fetchCouponsByFilters   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))      \r\n      this.loading = false;\r\n\r\n  }, (err) => {\r\n    this.normalFiltereduserListArr = []; \r\n    this.loading = false;\r\n    console.log(err);\r\n  });\r\n        \r\n\r\n/*\r\n    if(this.fetchCouponByCustomer){\r\n      data['fetchCouponByCustomer'] = true\r\n      data['customerId'] = this.customerId\r\n    }else{\r\n      data['fetchCouponByCustomer'] = false\r\n    }\r\n    \r\n    this.dataService.fetchCoupons(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = []; \r\n     // this.customerList = []\r\n        this.normalFiltereduserListArr = result.map(element => {\r\n          \r\n          return   element\r\n        })\r\n        console.log(\"****** this.fetchCoupons   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n        \r\n\r\n       // this.normalFiltereduserListArr.forEach(function(coupon, index){\r\n         // console.log(\"****** active   ===== **\"+ coupon.active)\r\n       // })\r\n        \r\n        this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.normalFiltereduserListArr = []; \r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n*/\r\n  }\r\n  \r\n  updateStatus(value, userInfo) {\r\n   // userInfo.active = value\r\n  //  console.log(\"****** userInfo   ===== **\"+JSON.stringify(userInfo))\r\n  let data ={}\r\n  userInfo.active = !userInfo.active\r\n  console.log(\"******  userInfo.active   ===== **\"+userInfo.active )\r\n    \r\n      userInfo.couponId = userInfo._id\r\n      data['couponId'] = userInfo._id\r\n      data['active'] = userInfo.active\r\n      console.log(\"****** userInfo   ===== **\"+JSON.stringify(data))\r\n\r\n          this.dataService.updateCoupon(data).then((result) => {\r\n          //  console.log(\"****** updatecoupon result   ===== **\"+JSON.stringify(result))\r\n          this.fetchCoupons()\r\n            this.loading = false;\r\n      \r\n        }, (err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    \r\n    this.toastr.successToastr('Coupon record updated successfully');\r\n  }\r\n\r\n  \r\n}\r\n","<div>\r\n  <app-page-header [heading]=\"'Coupon'\" [icon]=\"'fa-user'\"></app-page-header>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\" *ngIf=\"user.role.doctor.coupon.create\">                          \r\n      <button type=\"button\" class=\"btn btn-dark\" (click)=\"openforAddCouponDialog()\">Add Coupon</button>\r\n     \r\n</div>\r\n\r\n\r\n<!--div class=\"col-md-12 text-right\" *ngIf=\"user.role.doctor.coupon.view\">    \r\n<button type=\"button\" class=\"btn btn-dark\" (click)=\"reset();\">Reset Filters</button>\r\n</div-->\r\n\r\n</div>\r\n\r\n\r\n      <div class=\"card-body table-responsive marginLeft\"> <span class=\"pb-3 \"><b> List of existing {{userKind}}s </b>  </span>\r\n        <table class=\"table table-bcouponed table-sm\">\r\n          <thead>\r\n          <tr>\r\n            <th>Coupon Code </th>\r\n              <th>Coupon Amount</th>\r\n              <!--th> Logic </th-->\r\n              \r\n              <th>Expiry date</th>            \r\n              <th>Usage Type</th>            \r\n              <th>Maximum  Times</th>            \r\n              <th>Already Used</th>            \r\n\r\n              <th *ngIf=\"user.role.doctor.coupon.edit\">Enable/Disable</th>              \r\n              <th>Created Date</th>\r\n              <th *ngIf=\"user.role.doctor.coupon.edit\">Edit</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tbody *ngIf=\"normalFiltereduserListArr && normalFiltereduserListArr.length>0\">\r\n            \r\n              <tr class=\"{{obj.status | lowercase}}\"  *ngFor=\"let obj of normalFiltereduserListArr | paginate: { id:'forcoupon1', itemsPerPage: pageSize, currentPage: pageNo, totalItems: totalDocRecords }\">              \r\n         \r\n                  <td>{{obj?.coupon_code}}</td>                  \r\n                  <td>{{obj?.coupon_amount}} </td>                  \r\n                  <td >{{convertToHumanDate(obj.expiryDate)}}</td>                      \r\n                  <td>{{obj?.couponUsageType}} </td>                  \r\n                  <td>{{obj?.maximumUseTimes}} </td>                  \r\n                  <td>{{obj?.alreadyTimes}} </td>                  \r\n              \r\n              <td *ngIf=\"user.role.doctor.coupon.edit\">               \r\n                <ui-switch [(ngModel)]=\"obj.active\" (change)=\"updateStatus($event, obj)\"></ui-switch>\r\n                    \r\n              </td>              \r\n<td >{{convertToHumanDate(obj.createdDate)}}</td>\r\n\r\n<td *ngIf=\"user.role.doctor.coupon.edit\" ><button class=\"btn btn-dark\" (click)=\"openForeditCoupon(obj)\"> Edit </button></td>    \r\n\r\n            </tr>\r\n          </tbody>\r\n          <div class=\"col-md-12 text-left clearfix \">\r\n          <pagination-controls class=\"my-pagination marginLeft\"  id=\"forcoupon1\" \r\n               (pageChange)=\"pageChanged($event)\"\r\n                      (pageBoundsCorrection)=\"pageChanged($event)\"                      \r\n                      directionLinks=\"true\"               maxSize=\"9\"\r\n                      directionLinks=\"true\"\r\n                      autoHide=\"true\"\r\n                      responsive=\"true\"\r\n                      previousLabel=\"Prev\"\r\n                      nextLabel=\"Next\"\r\n                      screenReaderPaginationLabel=\"Pagination\"\r\n                      screenReaderPageLabel=\"page\"\r\n                      screenReaderCurrentLabel=\"You're on page\"></pagination-controls >\r\n          </div>\r\n          <tbody *ngIf=\"(normalFiltereduserListArr && normalFiltereduserListArr.length==0)\">\r\n              <tr>\r\n                <td colspan=\"7\" align = \"center\">No record available</td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n\r\n\r\n\r\n      <ng-template #couponFormModal let-close=\"close\">\r\n        <form [formGroup]=\"couponFormGroup\" class=\"custom_timebox p-0\">\r\n          <div class=\"modal-header py-1\">\r\n                  <h4 class=\"modal-title headerTitle mb-0\">{{mode | titlecase}} Coupon</h4>\r\n                  <button type=\"button\" class=\"close\" (click)=\"closeModal();\">×</button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n\r\n\r\n\r\n\r\n          <div class=\"row \">\r\n            <div class=\"col-md-12 form-group\">\r\n                <label class=\"labelTitles\"><b>Coupon Expiry Date</b></label>\r\n            </div>\r\n            <!--pattern=\"\\d{1,2}/\\d{1,2}/\\d{4}\"-->\r\n            <div class=\"col-md-12 marginTop\">\r\n                    <input type=\"date\"   class=\"form-control\" [(ngModel)]=\"couponObject.expiryDate\" formControlName=\"expiryDate\"\r\n                    placeholder=\"Enter expiryDate\">\r\n                    \r\n             </div>\r\n      </div>\r\n\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"form-group\">\r\n                <label class=\"labelTitles\">Usage Frequency </label>                    \r\n                <select formControlName=\"couponUsageType\"  [(ngModel)]=\"couponObject.couponUsageType\"  class=\"form-control\" name=\"couponUsageType\"\r\n                    >                         \r\n                    <option value=\"multiple_use\" class=\"labelValue\">Multiple Use</option>\r\n                    <option value=\"single_use\" class=\"labelValue\">Single Use</option>\r\n                    \r\n                </select>\r\n              \r\n               \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n          <div class=\"form-group\">\r\n              <label class=\"labelTitles\">Allowed Payment Mode </label>                    \r\n            \r\n              <select formControlName=\"paymentMode\"  [(ngModel)]=\"couponObject.paymentMode\"  class=\"form-control\" name=\"paymentMode\"\r\n              >                         \r\n              <option value=\"Cash\" class=\"labelValue\">Cash</option>\r\n              <option value=\"Card\" class=\"labelValue\">Card</option>\r\n              <option value=\"All\" class=\"labelValue\">All</option>\r\n          </select>\r\n\r\n             \r\n          </div>\r\n      </div>\r\n  </div>\r\n\r\n\r\n    <div class=\"row\" *ngIf=\"couponObject.couponUsageType == 'multiple_use'\" >\r\n      <div class=\"col-md-12 form-group\">\r\n          <label for=\"email\" class=\"labelTitles\"><b> How Many Times?</b></label>\r\n      </div>\r\n      <div class=\"col-md-12 marginTop\">\r\n              <input class=\"form-control\" [(ngModel)]=\"couponObject.maximumUseTimes\" formControlName=\"maximumUseTimes\"\r\n              placeholder=\"Enter Maximum Use Times\">\r\n              \r\n       </div>\r\n    </div>\r\n        \r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 form-group\">\r\n            <label for=\"email\" class=\"labelTitles\"><b> Coupon Code</b></label>\r\n        </div>\r\n        <div class=\"col-md-12 marginTop\">\r\n                <input class=\"form-control\" [(ngModel)]=\"couponObject.coupon_code\" formControlName=\"coupon_code\"\r\n                placeholder=\"Enter Coupon Code\">\r\n                \r\n         </div>\r\n      </div>\r\n  \r\n\r\n      <div class=\"row mt-2\" >\r\n        <div class=\"col-md-12 form-group\">\r\n          <label for=\"email\" class=\"labelTitles\"><b> Coupon Amount(Rupees)</b></label>\r\n      </div>\r\n      <div class=\"col-md-12 marginTop\">\r\n              <input class=\"form-control\" [(ngModel)]=\"couponObject.coupon_amount\" formControlName=\"coupon_amount\"\r\n              placeholder=\"Enter Coupon Value\">\r\n              \r\n       </div>\r\n    </div>\r\n      \r\n\r\n\r\n              \r\n\r\n             </div>\r\n             <div class=\"modal-footer\">\r\n                <button [disabled]=\"!couponFormGroup.valid\" type=\"button\" class=\"btn btn-primary m-10\"\r\n                    (click)=\"save();\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"closeMainModal();\">Cancel</button>\r\n            </div>\r\n          </form>\r\n        <p *ngIf=\"submitAttempt\" class=\"cutomeerrortext\">\r\n                \r\n         <span class=\"redcolor ml-2\"><i class=\"fa fas fa-exclamation\"></i><b>&nbsp;Fix The Error : </b></span> {{form_fill_failure_msg}}\r\n          \r\n        </p>\r\n</ng-template>\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n<div class=\"my-container\">\r\n  <ng-template #customLoadingTemplate>\r\n    \r\n            Please wait..fetching data\r\n    \r\n</ng-template>\r\n  <ngx-loading [show]=\"loading\" [config]=\"{ primaryColour: 'blue',secondaryColour:'red',fullScreenBackdrop:false}\" [template]=\"customLoadingTemplate\"></ngx-loading>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\n\r\nimport { CouponComponent } from './coupon.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\nimport { CouponRoutingModule } from './coupon-routing.module';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AutocompleteLibModule,\r\n    NgxPaginationModule,\r\n    CouponRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBcouponRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [CouponComponent]\r\n})\r\nexport class CouponModule { }\r\n"]}