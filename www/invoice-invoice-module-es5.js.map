{"version":3,"sources":["webpack:///src/app/layout/invoice/invoice-routing.module.ts","webpack:///src/app/layout/invoice/invoice.component.html","webpack:///src/app/layout/invoice/invoice.component.ts","webpack:///src/app/layout/invoice/invoice.module.ts"],"names":["routes","path","component","InvoiceRoutingModule","forChild","imports","exports","InvoiceComponent","datePipe","router","modal","toastr","_fb","dataService","loading","patientList","states","invoiceList","userKind","normalFiltereduserListArr","items","pageSize","RECORDSIZE","pageNo","tempArray","keywordDoctor","invoiceObject","active","doctorList","attendantList","invoiceObjectBase","openingMeridian","user","role","doctor","invoice","view","invoiceFormGroup","group","invoiceDate","required","doctorId","mobileNumber","billTo","address","status","paymentMode","action","appointmentId","invoiceAmount","fetchInvoices","date","time","item","get","patchValue","console","log","val","data","name","fetchAllDoctors","then","result","map","element","err","dateTimeitems","push","createdateTimeItem","i","removeAt","mode","Object","assign","modalReference","open","invoiceFormModal","localStorage","getItem","navigate","fetchInvoicesCount","valid","submitAttempt","validateFields","controls","fromJsDateToMongoDate","JSON","stringify","addInvoice","closeModal","form_fill_failure_msg","successToastr","message","alert","updateInvoice","dateTimeArray","transform","length","Promise","resolve","fetchDoctrById","error","event","applyFilter","pageOfItems","totalDocRecords","perPage","forEach","index","value","userInfo","invoiceId","_id","pageChanged","selector","templateUrl","styleUrls","providers","InvoiceModule","forRoot","animationType","wanderingCubes","backdropBackgroundColour","backdropBorderRadius","primaryColour","secondaryColour","tertiaryColour","provide","useFactory","declarations"],"mappings":"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","file":"invoice-invoice-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { InvoiceComponent } from './invoice.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: InvoiceComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InvoiceRoutingModule { }\r\n","<div>\r\n  <app-page-header [heading]=\"'Invoice'\" [icon]=\"'fa-user'\"></app-page-header>\r\n</div>\r\n\r\n  <div class=\"col-md-12\" >\r\n      \r\n          <!--div class=\"card-header\">\r\n              User type\r\n          </div-->\r\n          \r\n          \r\n                \r\n                <div class=\"col-md-12 text-right \" *ngIf=\"user.role.doctor.invoice.create\">                      \r\n                  <div class=\"content\">\r\n                    <button type=\"button\" class=\"btn btn-dark\" (click)=\"openAddInvoiceDialog()\">Add Invoice</button>\r\n                  </div>\r\n              </div>\r\n             \r\n          \r\n          \r\n\r\n      <div class=\"card-body table-responsive marginLeft\"> <span class=\"pb-3 \"><b> List of existing {{userKind}}s </b>  </span>\r\n        <table class=\"table table-striped table-bordered table-sm\">\r\n          <thead>\r\n          <tr>\r\n            \r\n              <th>Bill To</th>\r\n              <th>Paid/Unpaid</th>\r\n              <th>Payment Mode</th>            \r\n              <th>Address</th>      \r\n              <th>MobileNumber</th>      \r\n              \r\n              <th *ngIf=\"user.role.doctor.invoice.edit\">Enable/Disable</th>\r\n              \r\n              <th>Invoice Date</th>\r\n              <th *ngIf=\"user.role.doctor.invoice.edit\">Edit</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tbody *ngIf=\"normalFiltereduserListArr && normalFiltereduserListArr.length>0\">\r\n            \r\n              <tr *ngFor=\"let obj of normalFiltereduserListArr | paginate: { id:'forinvoice1', itemsPerPage: pageSize, currentPage: pageNo, totalItems: totalDocRecords }\">              \r\n                \r\n                  <td>{{obj?.billTo}}</td>                  \r\n              <td>{{obj?.status}}</td>              \r\n              <td>{{obj?.paymentMode}}</td>\r\n              <td>{{obj?.address}}</td>\r\n              <td>{{obj?.mobileNumber}}</td>\r\n              \r\n              <td *ngIf=\"user.role.doctor.invoice.edit\">               \r\n                <ui-switch [(ngModel)]=\"obj.active\" (change)=\"updateStatus($event, obj)\"></ui-switch>\r\n                    \r\n              </td>              \r\n<td >{{convertToHumanDate(obj.invoiceDate)}}</td>\r\n\r\n<td *ngIf=\"user.role.doctor.invoice.edit\" ><button class=\"btn btn-dark\" (click)=\"openForeditInvoice(obj)\"> Edit </button></td>    \r\n\r\n            </tr>\r\n          </tbody>\r\n          <div class=\"col-md-12 text-left clearfix \">\r\n          <pagination-controls class=\"my-pagination marginLeft\"  id=\"forinvoice1\" \r\n               (pageChange)=\"pageChanged($event)\"\r\n                      (pageBoundsCorrection)=\"pageChanged($event)\"                      \r\n                      directionLinks=\"true\"               maxSize=\"9\"\r\n                      directionLinks=\"true\"\r\n                      autoHide=\"true\"\r\n                      responsive=\"true\"\r\n                      previousLabel=\"Prev\"\r\n                      nextLabel=\"Next\"\r\n                      screenReaderPaginationLabel=\"Pagination\"\r\n                      screenReaderPageLabel=\"page\"\r\n                      screenReaderCurrentLabel=\"You're on page\"></pagination-controls >\r\n          </div>\r\n          <tbody *ngIf=\"(normalFiltereduserListArr && normalFiltereduserListArr.length==0)\">\r\n              <tr>\r\n                <td colspan=\"7\" align = \"center\">No record available</td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n\r\n\r\n\r\n      <ng-template #invoiceFormModal let-close=\"close\">\r\n        <form [formGroup]=\"invoiceFormGroup\" class=\"custom_timebox p-0\">\r\n            <div class=\"modal-header py-1\">\r\n                    <h4 class=\"modal-title headerTitle mb-0\">{{mode | titlecase}} Invoice</h4>\r\n                    <button type=\"button\" class=\"close\" (click)=\"closeModal();\">×</button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n                <div class=\"row\"  *ngIf=\"mode == 'add'\">\r\n                  <div class=\"col-md-12\">\r\n                      <div class=\"form-group\">\r\n                          <label class=\"labelTitles\">Select Doctor </label>                        \r\n                          <ng-autocomplete \r\n                          [data]=\"doctorList\"\r\n                          [(ngModel)] = \"doctorName\"\r\n                          formControlName=\"doctorName\"\r\n                          [searchKeyword]=\"keywordDoctor\"\r\n                          (selected)='doctorSelectEvent($event)'\r\n                          (inputChanged)='doctorLocationSearch($event)'\r\n                          \r\n                          [itemTemplate]=\"itemTemplate\"\r\n                          [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n                        </ng-autocomplete>\r\n                     \r\n                        \r\n                        <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n                          <a [innerHTML]=\"item.name\"></a>\r\n                          </ng-template>\r\n                          <ng-template #notFoundTemplate let-notFound>\r\n                          <div [innerHTML]=\"notFound\"></div>\r\n                          </ng-template>\r\n                          \r\n                         \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-md-12 form-group\">\r\n                      <label for=\"email\" class=\"labelTitles\"><b>Invoice Date</b></label>\r\n                  </div>\r\n                  <div class=\"col-md-12 marginTop\">\r\n                          <input type=\"date\" class=\"form-control\" [(ngModel)]=\"invoiceObject.invoiceDate\" formControlName=\"invoiceDate\"\r\n                          placeholder=\"Enter Invoicedate\">\r\n                          \r\n                   </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 form-group\">\r\n                  <label for=\"name\" class=\"labelTitles\"><b>Bill To</b></label>\r\n              </div>\r\n              <div class=\"col-md-12 marginTop\">\r\n                <input class=\"form-control\" [(ngModel)]=\"invoiceObject.billTo\"  formControlName=\"billTo\"  >\r\n              </div>\r\n          </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 form-group labelTitles\">\r\n                  <label for=\"name\" class=\"labelTitles\">Mobile Number</label>\r\n              </div>\r\n              <div class=\"col-md-12 marginTop\">\r\n                  <input class=\"form-control labelValue\" [(ngModel)]=\"invoiceObject.mobileNumber\"  formControlName=\"mobileNumber\" placeholder=\"Mobile Number\">\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                      <label class=\"labelTitles\">Paid/Unpaid </label>                    \r\n                      <select formControlName=\"status\"  [(ngModel)]=\"invoiceObject.status\"  class=\"form-control\" name=\"paidUnpaid\"\r\n                          >                         \r\n                          <option value=\"Paid\" class=\"labelValue\">Paid</option>\r\n                          <option value=\"Unpaid\" class=\"labelValue\">Unpaid</option>\r\n                          \r\n                      </select>\r\n                    \r\n                     \r\n                  </div>\r\n              </div>\r\n          </div>\r\n              \r\n        \r\n          \r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"labelTitles\">Payment Mode </label>                    \r\n                    <select formControlName=\"paymentMode\"  [(ngModel)]=\"invoiceObject.paymentMode\"  class=\"form-control\" name=\"paymentMode\"\r\n                        >                         \r\n                        <option value=\"Cash\" class=\"labelValue\">Cash</option>\r\n                        <option value=\"Card\" class=\"labelValue\">Card</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 form-group\">\r\n                  <label for=\"name\" class=\"labelTitles\"><b>Address</b></label>\r\n              </div>\r\n              <div class=\"col-md-12 marginTop\">\r\n                <textarea class=\"form-control\" [(ngModel)]=\"invoiceObject.address\"  formControlName=\"address\"  rows=\"3\"></textarea>\r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 form-group\">\r\n                <label for=\"name\" class=\"labelTitles\"><b>Appointment ID</b></label>\r\n            </div>\r\n            <div class=\"col-md-12 marginTop\">\r\n              <input class=\"form-control\" [(ngModel)]=\"invoiceObject.appointmentId\"  formControlName=\"appointmentId\"  >\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 form-group\">\r\n              <label for=\"name\" class=\"labelTitles\"><b>Invoice Amount</b></label>\r\n          </div>\r\n          <div class=\"col-md-12 marginTop\">\r\n            <input class=\"form-control\" [(ngModel)]=\"invoiceObject.invoiceAmount\"  formControlName=\"invoiceAmount\"  >\r\n          </div>\r\n      </div>\r\n\r\n              \r\n\r\n     \r\n\r\n         \r\n\r\n             </div>\r\n             <div class=\"modal-footer\">\r\n                <button [disabled]=\"!invoiceFormGroup.valid\" type=\"button\" class=\"btn btn-primary m-10\"\r\n                    (click)=\"save();\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"closeModal();\">Cancel</button>\r\n            </div>\r\n        </form>\r\n        <p *ngIf=\"submitAttempt\" class=\"cutomeerrortext\">\r\n                \r\n         <span class=\"redcolor ml-2\"><i class=\"fa fas fa-exclamation\"></i><b>&nbsp;Fix The Error : </b></span> {{form_fill_failure_msg}}\r\n          \r\n        </p>\r\n</ng-template>\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n<!--div class=\"my-container\">\r\n  <ngx-loading [show]=\"loading\"></ngx-loading>\r\n</div-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, NgZone, ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport *  as moment from 'moment';\r\n\r\nimport { Config } from '../../config';\r\n\r\n\r\n\r\nimport { FormBuilder, FormGroup, FormControl, Validators,FormArray } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { BaseComponent } from 'src/BaseComponent';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\n@Component({\r\n  selector: 'app-invoice',\r\n  templateUrl: './invoice.component.html',\r\n  styleUrls: ['./invoice.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class InvoiceComponent extends BaseComponent implements OnInit {\r\n\r\n  @ViewChild('fileInputDemoPhoto') fileInputDemoPhoto :ElementRef;;\r\n  public loading:boolean = true;\r\n  public closeResult: string;\r\n  patientList:any = []\r\n  states = Config.states\r\n  invoiceList:any = []\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  @ViewChild('acc') accordionComponent: NgbAccordion;\r\n  public userKind:string=\"invoice\"\r\n  normalFiltereduserListArr:any = [];\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('invoiceFormModal') invoiceFormModal: TemplateRef<any>;\r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  invoiceFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  customInvoicetime : {\r\n    hour: 10,\r\n    minute: 20,\r\n\r\n};\r\nkeywordDoctor = \"name\"\r\n  invoiceObject =  \r\n  {    \r\n    active : true,   \r\n    \"invoiceDate\" : null,\r\n    \"address\" : \"\",\r\n    \"mobileNumber\" : \"\",\r\n    \"billTo\" : \"\",\r\n    \"doctorId\" : \"\",\r\n    \"status\" : \"\",\r\n    \"paymentMode\" : \"\",\r\n    \"action\" : \"\",\r\n    \"appointmentId\" : \"\",\r\n    \"invoiceAmount\" : \"\"\r\n  }\r\n  doctorList:any  = []\r\n  attendantList:any = []\r\n  invoiceObjectBase =  \r\n  {    \r\n    active : true,   \r\n    \"invoiceDate\" : null,\r\n    \"address\" : \"\",\r\n    \"mobileNumber\" : \"\",\r\n    \"billTo\" : \"\",\r\n    \"doctorId\" : \"\",\r\n    \"status\" : \"\",\r\n    \"paymentMode\" : \"\",\r\n    \"action\" : \"\",\r\n    \"appointmentId\" : \"\",\r\n    \"invoiceAmount\" : \"\"\r\n  }\r\n  doctorName:any\r\n  dateTimeitems: FormArray;\r\n  openingMeridian : boolean = true;\r\n\r\n  constructor(\r\n    private datePipe : DatePipe,\r\n    public router: Router,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess,\r\n    \r\n    \r\n  ) {\r\n    super(router)\r\n  //  this.customInvoicetime.hour = 9\r\n   // this.customInvoicetime.minute = 10\r\n\r\n    if(!this.user.role.doctor.invoice.view){\r\n      return\r\n    }\r\n   \r\n\r\n    this.invoiceFormGroup = _fb.group({\r\n      invoiceDate: new FormControl(this.invoiceObject.invoiceDate, Validators.required),\r\n      doctorId: new FormControl(this.invoiceObject.doctorId, Validators.required),\r\n      mobileNumber: new FormControl(''),\r\n      billTo: new FormControl(this.invoiceObject.billTo, Validators.required),\r\n      address: new FormControl(this.invoiceObject.address, Validators.required),\r\n      status: new FormControl(this.invoiceObject.status, Validators.required),\r\n      paymentMode: new FormControl(this.invoiceObject.paymentMode),\r\n      action: new FormControl(this.invoiceObject.action),\r\n      appointmentId: new FormControl(this.invoiceObject.appointmentId, Validators.required),\r\n      invoiceAmount: new FormControl(this.invoiceObject.invoiceAmount, Validators.required)\r\n    });\r\n\r\n    //this.invoiceFormGroup.valueChanges.subscribe(data => console.log('form changes', data));\r\n    this.loading = false;    \r\n    this.fetchInvoices()   \r\n    \r\n  }\r\n  createdateTimeItem(): FormGroup {\r\n    return this._fb.group({\r\n      date: '',\r\n      time: ''\r\n    });\r\n  }\r\n  \r\n/*\r\n  ngAfterViewInit(){\r\n    this.dataService.fetchAllPatients().then((result:[]) => {\r\n      this.patientList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n\r\n   \r\n  }\r\n  */\r\n \r\n doctorSelectEvent(item) {\r\n  //console.log(\" inside doctorSelectEvent \"+JSON.stringify(item))\r\n  if(item){\r\n  this.invoiceFormGroup.get('doctorId').patchValue(item['_id']);\r\n  this.invoiceObject.doctorId = item['_id']\r\n \r\n\r\n  console.log(\" this.invoiceObject.doctorId \"+this.invoiceObject.doctorId)\r\n\r\n  }\r\n  // do something with selected item\r\n}\r\n\r\ndoctorLocationSearch(val: string) {\r\n  //console.log(\" inside onChangePatientSearch val \"+val)\r\n // if(val && val.length >2 ){\r\n  let data = {name:val}\r\n  this.dataService.fetchAllDoctors(data).then((result:[]) => {\r\n    this.doctorList = result.map(element => element)\r\n  }, (err) => {\r\n      //console.log(err);\r\n  });\r\n // }\r\n}\r\n  getInvoice(){\r\n\r\n  }\r\n  addItem(): void {\r\n    this.dateTimeitems = this.invoiceFormGroup.get('dateTimeitems') as FormArray;\r\n    this.dateTimeitems.push(this.createdateTimeItem());\r\n  }\r\n\r\n  removeItem(i){\r\n\r\n     this.dateTimeitems = this.invoiceFormGroup.get('dateTimeitems') as FormArray;\r\n    this.dateTimeitems.removeAt(i)  \r\n\r\n  }\r\n\r\n  openAddInvoiceDialog(){\r\n    this.mode = \"add\"\r\n    this.invoiceFormGroup = this._fb.group({\r\n      invoiceDate: new FormControl(this.invoiceObject.invoiceDate, Validators.required),\r\n      doctorId: new FormControl(this.invoiceObject.doctorId, Validators.required),\r\n      mobileNumber: new FormControl(''),\r\n      billTo: new FormControl(this.invoiceObject.billTo, Validators.required),\r\n      address: new FormControl(this.invoiceObject.address, Validators.required),\r\n      status: new FormControl(this.invoiceObject.status, Validators.required),\r\n      paymentMode: new FormControl(this.invoiceObject.paymentMode),\r\n      action: new FormControl(this.invoiceObject.action),\r\n      appointmentId: new FormControl(this.invoiceObject.appointmentId, Validators.required),\r\n      invoiceAmount: new FormControl(this.invoiceObject.invoiceAmount, Validators.required)\r\n    });\r\n    this.dateTimeitems = this.invoiceFormGroup.get('dateTimeitems') as FormArray;\r\n   // \r\n    //this.dateTimeitems.push({})\r\n    this.invoiceObject = Object.assign({}, this.invoiceObjectBase); \r\n    this.modalReference = this.modal.open(this.invoiceFormModal);\r\n  }\r\n  getPatient(){\r\n\r\n  }\r\n \r\n  ngOnInit(){\r\n\r\n\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n \r\n\r\n    //this.pageSize = Config.RECORDSIZE;\r\n    //this.pageNo = 1\r\n    this.fetchInvoicesCount()  \r\n    this.fetchInvoices()    \r\n    \r\n //   this.items = Array(150).fill(0).map((x, i) => ({ id: (i + 1), name: `Item ${i + 1}`})\r\n  };\r\n  save(){\r\n//alert(\"mode: \"+this.mode)\r\n   \r\n\r\n    if(!this.invoiceFormGroup.valid){\r\n        this.submitAttempt = true;        \r\n        this.validateFields(this.invoiceFormGroup.controls)                   \r\n        return; \r\n    } \r\n    if(this.invoiceObject.invoiceDate && this.invoiceObject.invoiceDate!=\"\"){\r\n        this.invoiceObject.invoiceDate  = this.fromJsDateToMongoDate(this.invoiceObject.invoiceDate )    \r\n    }\r\n    \r\n    if(this.mode == \"add\"){\r\n      //delete this.invoiceObject['doctor']\r\n      console.log(\"this.invoiceObject for add == \"+JSON.stringify(this.invoiceObject))\r\n      this.dataService.addInvoice(this.invoiceObject).then((result) => {                \r\n        //  console.log(\"result after adduser == \"+JSON.stringify(result))\r\n          this.fetchInvoices()\r\n          this.mode = \"add\"\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('New invoice is added successfully');\r\n          \r\n      }, (err) => {        \r\n        if(err && err.message)\r\n        alert(err.message)\r\n        //console.log(err);\r\n      });\r\n      \r\n    }if(this.mode == \"edit\"){\r\n      //delete this.invoiceObject['patient']\r\n      //delete this.invoiceObject['doctor']\r\n      this.invoiceObject['invoiceId'] = this.invoiceObject['_id']\r\n      console.log(\"this.invoiceObject for edit == \"+JSON.stringify(this.invoiceObject))\r\n      this.dataService.updateInvoice(this.invoiceObject).then((result) => {\r\n        //  console.log(\"****** updateinvoice result   ===== **\"+JSON.stringify(result))\r\n          //this.loading = false;\r\n          this.mode = \"add\"   \r\n          this.fetchInvoices()\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('invoice is updated successfully'); \r\n      }, (err) => {\r\n        this.mode = \"add\"\r\n        //this.loading = false;\r\n        console.log(err);\r\n      });\r\n      \r\n    }\r\n    \r\n}\r\nasync openForeditInvoice(user){\r\n\r\n  \r\n  this.invoiceObject = Object.assign({}, user); \r\n\r\n  //console.log(\"dateTimeArray LENGTH **\"+dateTimeArray.length)\r\n\r\n\r\n  this.invoiceFormGroup = this._fb.group({\r\n    invoiceDate: new FormControl(this.invoiceObject.invoiceDate, Validators.required),\r\n      mobileNumber: new FormControl(''),\r\n      billTo: new FormControl(this.invoiceObject.billTo, Validators.required),\r\n      address: new FormControl(this.invoiceObject.address, Validators.required),\r\n      status: new FormControl(this.invoiceObject.status, Validators.required),\r\n      paymentMode: new FormControl(this.invoiceObject.paymentMode),\r\n      action: new FormControl(this.invoiceObject.action),\r\n      appointmentId: new FormControl(this.invoiceObject.appointmentId, Validators.required),\r\n      invoiceAmount: new FormControl(this.invoiceObject.invoiceAmount, Validators.required)\r\n  });\r\n\r\n\r\n  console.log(\"this.invoiceObject ==\"+JSON.stringify(this.invoiceObject))\r\n  let dateTimeArray = []\r\n  this.dateTimeitems = this.invoiceFormGroup.get('dateTimeitems') as FormArray;\r\n    \r\n  this.invoiceObject.invoiceDate = this.datePipe.transform(this.invoiceObject.invoiceDate, 'yyyy-MM-dd')\r\n  console.log(\"dateTimeArray LENGTH **\"+dateTimeArray.length)\r\n  //let earlierAttendent = this.invoiceObject.attendantID\r\n  //this.doctorName = await this.fetchDoctrById(this.invoiceObject.doctorID)\r\n\r\n  //this.invoiceObject.attendantID = earlierAttendent\r\n\r\n  //this.invoiceFormGroup.get('dateTimeitems').patchValue(dateTimeArray)\r\n  //addItem\r\n\r\n  this.mode = \"edit\"\r\n  this.modalReference = this.modal.open(this.invoiceFormModal);\r\n\r\n  //this.userObject.userId = user._id\r\n  //this.role = user.role\r\n\r\n  \r\n  \r\n}\r\nfetchDoctrById(doctorId){\r\n  let data = {doctorId:doctorId}\r\n  try {      \r\n      return new Promise((resolve) => {    \r\n            this.dataService.fetchDoctrById(data).then((result) => {\r\n              \r\n            //console.log(\"****** invoice  ===== **\"+JSON.stringify(result))\r\n                resolve(result['name'])                 \r\n        \r\n            }, (err) => {\r\n              resolve('')                 \r\n            //this.loading = false;\r\n            \r\n            //console.log(err);\r\n            });\r\n        });\r\n  }\r\n  catch(error) {\r\n      //console.log('Error', error);\r\n  }\r\n}\r\n  pageChanged(event){\r\n    console.log(\"****** this.event   ===== **\"+event)\r\n    this.pageNo = event\r\n    this.applyFilter()\r\n  }\r\n  userKindChange(){\r\n    this.pageNo = 1\r\n    \r\n    this.applyFilter()\r\n  }\r\n  applyFilter() {\r\n      \r\n      this.fetchInvoices()\r\n    \r\n    \r\n  }\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n  \r\n\r\n  fetchInvoicesCount(){\r\n  //  this.pageNo = 1\r\n  //  this.pageSize = 10\r\n    this.dataService.fetchInvoicesCount().then((result) => {\r\n        \r\n        console.log(\"****** fetchinvoicesCount result   ===== **\"+JSON.stringify(result))\r\n      this.totalDocRecords = result;\r\n      console.log(\"****** this.totalIvoice Records ===== **\"+this.totalDocRecords)\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n \r\n\r\n  fetchInvoices(){\r\n  //  this.pageNo = 1\r\n    //this.pageSize = 10\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    this.dataService.fetchInvoices(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = [];  \r\n        this.normalFiltereduserListArr = result.map(element => element)\r\n      //  console.log(\"****** this.normalFiltereduserListArr   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n        this.normalFiltereduserListArr.forEach(function(invoice, index){\r\n          console.log(\"****** active   ===== **\"+ invoice.active)\r\n        })\r\n        \r\n        this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n  \r\n  updateStatus(value, userInfo) {\r\n   // userInfo.active = value\r\n  //  console.log(\"****** userInfo   ===== **\"+JSON.stringify(userInfo))\r\n  let data ={}\r\n  userInfo.active = !userInfo.active\r\n  console.log(\"******  userInfo.active   ===== **\"+userInfo.active )\r\n    \r\n      userInfo.invoiceId = userInfo._id\r\n      data['invoiceId'] = userInfo._id\r\n      data['active'] = userInfo.active\r\n      console.log(\"****** userInfo   ===== **\"+JSON.stringify(data))\r\n\r\n          this.dataService.updateInvoice(data).then((result) => {\r\n          //  console.log(\"****** updateinvoice result   ===== **\"+JSON.stringify(result))\r\n          this.fetchInvoices()\r\n            this.loading = false;\r\n      \r\n        }, (err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    \r\n    this.toastr.successToastr('Invoice record updated successfully');\r\n  }\r\n\r\n  \r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { InvoiceRoutingModule } from './invoice-routing.module';\r\nimport { InvoiceComponent } from './invoice.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AutocompleteLibModule,\r\n    NgxPaginationModule,\r\n    InvoiceRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBorderRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [InvoiceComponent]\r\n})\r\nexport class InvoiceModule { }\r\n"]}