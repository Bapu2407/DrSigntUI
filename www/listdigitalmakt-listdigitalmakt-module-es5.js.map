{"version":3,"sources":["webpack:///src/app/layout/listdigitalmakt/listdigitalmakt-routing.module.ts","webpack:///src/app/layout/listdigitalmakt/listdigitalmakt.component.ts","webpack:///src/app/layout/listdigitalmakt/listdigitalmakt.component.html","webpack:///src/app/layout/listdigitalmakt/listdigitalmakt.module.ts"],"names":["routes","path","component","ListdigitalmaktRoutingModule","forChild","imports","exports","ListdigitalmaktComponent","router","route","modal","toastr","_fb","dataService","loadingCustomeMsg","otpVerified","sendOTPflag","verifyActionStart","otpEnteredByUser","fromOldImageList","loading","isPrescriptionUploaded","showOldPrescription","allDynaFilter","patientList","customerList","states","keywordCustomer","fetchListdigitalmaktByCustomer","listdigitalmaktList","fromCustomerPage","userKind","normalFiltereduserListArr","customerOldPrescriptionListArr","delModeList","items","pageSize","RECORDSIZE","pageNo","tempArray","searchByCustomer","searchByListdigitalmaktDate","searchByListdigitalmaktId","searchByStatus","keywordMedicine","listdigitalmaktObject","name","emailId","mobileNumber","active","medicineList","medicineId","medicineName","quantity","mg","mrp","uploadedFile","uploadedFileURL","deliveryMode","status","medicineArray","b2bPrice","gst","hsnCode","vat","otherTax","discounts","medicineType","category","attendantList","listdigitalmaktObjectBase","openingMeridian","fetchDigitalmargetingsCount","fetchDigitalmargetings","minm","maxm","randomOTP","Math","floor","random","listdigitalmaktFormGroup","get","controls","navigate","fromListdigitalmaktPage","group","medicine","medicineListItems","push","createMedicineItem","i","removeAt","modalSearchFilerReference","dismiss","Object","assign","customerId","mode","e","console","log","localStorage","getItem","modalReferenceImage","open","enlargedImageModal","obj","image","uploadPhotoListdigitalmaktPrescriptionURL","enlargedPrescPic","modalReferencePrescriptionImage","enlargedPrescriptionModal","selectValue","oldPresc","_id","uploadPhotoListdigitalmaktPrescription","patchValue","JSON","stringify","error","photoType","enlargedPic","modalReferenceListdigitalmaktForm","close","pageOfItems","val","data","fetchAllCustomers","then","result","map","element","err","event","applyFilter","perPage","filter","totalDocRecords","digitalmargetingObj","pageChanged","selector","templateUrl","styleUrls","providers","ListdigitalmaktModule","forRoot","animationType","wanderingCubes","backdropBackgroundColour","backdropBlistdigitalmaktRadius","primaryColour","secondaryColour","tertiaryColour","provide","useFactory","declarations"],"mappings":"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","file":"listdigitalmakt-listdigitalmakt-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ListdigitalmaktComponent } from './listdigitalmakt.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: ListdigitalmaktComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ListdigitalmaktRoutingModule { }\r\n","import { Component, OnInit, NgZone, ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion,NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router , ActivatedRoute} from '@angular/router';\r\nimport *  as moment from 'moment';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\nimport { Config } from '../../config';\r\n\r\n\r\nimport { BaseComponentDM } from 'src/BaseComponentDM';\r\nimport { FormBuilder, FormGroup, FormControl, Validators,FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-listdigitalmakt',\r\n  templateUrl: './listdigitalmakt.component.html',\r\n  styleUrls: ['./listdigitalmakt.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class ListdigitalmaktComponent extends BaseComponentDM implements OnInit {\r\n  loadingCustomeMsg:any = \"Loading...\"\r\n  otpVerified:boolean = false\r\n  randomOTP:any\r\n  sendOTPflag:boolean = false\r\n  verifyActionStart:boolean = false\r\n  \r\n  otpEnteredByUser:any = ''\r\n  @ViewChild('myname') input: ElementRef;\r\n  @ViewChild('fileInputDemoPhoto') fileInputDemoPhoto :ElementRef;;\r\n  fromOldImageList:boolean = false\r\n  public loading:boolean = true;\r\n  public isPrescriptionUploaded = false\r\n  showOldPrescription:any = ''\r\n  public closeResult: string;\r\n  enlargedPic:any\r\n  enlargedPrescPic:any\r\n  allDynaFilter = null\r\n  patientList:any = []\r\n  customerList:any = []\r\n  listdigitalmaktStatus:string\r\n  listdigitalmaktId:string\r\n  listdigitalmaktDate:string\r\n  states = Config.states\r\n  keywordCustomer:string = \"name\"\r\n  fetchListdigitalmaktByCustomer:boolean = false\r\n  listdigitalmaktList:any = []\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  prescriptionSource:any\r\n  fromCustomerPage:boolean = false\r\n  @ViewChild('acc') accordionComponent: NgbAccordion;\r\n  public userKind:string=\"listdigitalmakt\"\r\n  normalFiltereduserListArr:any = [];\r\n  customerOldPrescriptionListArr:any = [];\r\n  \r\n  modalSearchFilerReference: NgbModalRef;\r\n  delModeList:any = [\r\n    {\"value\":\"Express\",\"name\":\"Express\"},\r\n    {\"value\":\"General\",\"name\":\"General\"}  ]\r\n\r\n  modalReferenceListdigitalmaktForm: NgbModalRef;\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('listdigitalmaktFormModal') listdigitalmaktFormModal: TemplateRef<any>;\r\n   @ViewChild('searFiltersModal') searFiltersModal: TemplateRef<any>;\r\n   @ViewChild('enlargedImageModal') enlargedImageModal: TemplateRef<any>;\r\n   @ViewChild('enlargedPrescriptionModal') enlargedPrescriptionModal: TemplateRef<any>;\r\n\r\n   \r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  listdigitalmaktFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  customListdigitalmakttime : {\r\n    hour: 10,\r\n    minute: 20,\r\n\r\n};\r\nsearchByCustomer:boolean = false\r\nsearchByListdigitalmaktDate:boolean = false\r\nsearchByListdigitalmaktId:boolean = false\r\nsearchByStatus:boolean = false\r\n\r\n\r\nmedicineName:any\r\nkeywordMedicine = \"name\"\r\n  listdigitalmaktObject =  \r\n  {     \r\n     name:\"\",\r\n  emailId:\"\",  \r\n  mobileNumber : \"9134683936\",\r\n    active : true,       \r\n    medicineList : [ \r\n      {\r\n        medicineId: '',             \r\n        medicineName : \"\",\r\n        quantity : \"\",\r\n        mg: '',\r\n        mrp:0,      \r\n        active:true,      \r\n        \"b2bPrice\" : \"\",\r\n        \"gst\" : \"0\",\r\n\r\n        \"hsnCode\" : \"0\",\r\n        \"vat\" : \"0\",\r\n        \"otherTax\" : \"0\",\r\n        \"discounts\" : \"0\",\r\n        \"medicineType\" : \"\",      \r\n        \"category\" : \"\"\r\n                \r\n      }\r\n    ],    \r\n    \r\n    uploadedFile:\"\",\r\n    uploadedFileURL:\"\",\r\n    deliveryMode:\"General\",\r\n    status : \"ListdigitalmaktPlaced\"    \r\n  }\r\n\r\n  medicineArray:any = [[{\r\n    medicineId: '',             \r\n    medicineName : \"\",\r\n    quantity : \"\",\r\n    mg: '',\r\n    mrp:\"\",      \r\n    active:true,      \r\n    b2bPrice : \"\",\r\n    gst : \"0\",\r\n    hsnCode : \"0\",\r\n    vat : \"0\",\r\n    otherTax : \"0\",\r\n    discounts : \"0\",\r\n    medicineType : \"\",      \r\n    category : \"\"\r\n            \r\n  }]]\r\n  attendantList:any = []\r\n  listdigitalmaktObjectBase =  \r\n  {    \r\n    name:\"\",\r\n    emailId:\"\",  \r\n    mobileNumber : \"9134683936\",\r\n    active : true,       \r\n    medicineList : [ \r\n      {\r\n        medicineId: '',             \r\n        medicineName : \"\",\r\n        quantity : \"\",\r\n        mg: '',\r\n        mrp:0,      \r\n        active:true,      \r\n        \"b2bPrice\" : \"\",\r\n        \"gst\" : \"0\",\r\n        \"hsnCode\" : \"0\",\r\n        \"vat\" : \"0\",\r\n        \"otherTax\" : \"0\",\r\n        \"discounts\" : \"0\",\r\n        \"medicineType\" : \"\",      \r\n        \"category\" : \"\"\r\n                \r\n      }\r\n    ],    \r\n    \r\n    uploadedFile:\"\",\r\n    uploadedFileURL:\"\",\r\n    deliveryMode:\"General\",\r\n    status : \"ListdigitalmaktPlaced\"    \r\n  }\r\n  customer:any\r\n  customerName:any\r\n  customerId:any\r\n  doctorName:any\r\n  medicineListItems: FormArray;\r\n  openingMeridian : boolean = true;\r\n\r\n  constructor(    \r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess   \r\n    \r\n  ) {\r\n    super(router)\r\n  //  this.customListdigitalmakttime.hour = 9\r\n   // this.customListdigitalmakttime.minute = 10\r\n\r\n\r\n      \r\n    \r\n\r\n     //this.listdigitalmaktFormGroup = this.buildForm()\r\n\r\n    //this.openforAddListdigitalmaktDialog()\r\n\r\n    this.loading = false\r\n    //this.createMedicineItem()\r\n\r\n    //this.listdigitalmaktFormGroup.valueChanges.subscribe(data => console.log('form changes', data));\r\n   // this.loading = false;    \r\n    this.fetchDigitalmargetingsCount()   \r\n    this.fetchDigitalmargetings()\r\n    \r\n  }\r\n   gfg() { \r\n    var minm = 10000; \r\n    var maxm = 99999; \r\n    this.randomOTP = Math.floor(Math \r\n    .random() * (maxm - minm + 1)) + minm; \r\n} \r\n\r\n  getControls() {\r\n    return (this.listdigitalmaktFormGroup.get('medicineListItems') as FormArray).controls;\r\n  }\r\n  gotoCustomerPage(){\r\n    this.router.navigate([\"/customer\",{fromListdigitalmaktPage:'fromListdigitalmaktPage'}]);\r\n  }\r\n  openCustomerPage(){\r\n    this.router.navigate([\"/customer\"]);\r\n  }\r\n  createMedicineItem(): FormGroup {\r\n    return this._fb.group({\r\n      medicineId: new FormControl(),\r\n      medicineName: new FormControl(),\r\n      mg: new FormControl(),\r\n      quantity: new FormControl(),      \r\n      mrp:new FormControl(),            \r\n       b2bPrice : new FormControl() ,\r\n       hsnCode : new FormControl(),\r\n        gst : new FormControl(),\r\n        //vat : \"0\",\r\n        otherTax : new FormControl(),\r\n        discounts : new FormControl(),\r\n        medicineType : new FormControl(),      \r\n        category : new FormControl()\r\n    });\r\n  }\r\n\r\n  createMedicineItemDuringEdit(medicine): FormGroup {\r\n    return this._fb.group({\r\n      medicineId: new FormControl(),\r\n      medicineName: new FormControl(),\r\n      mg: new FormControl(),\r\n      quantity: new FormControl(),      \r\n      mrp:new FormControl(),            \r\n       b2bPrice : new FormControl() ,\r\n       hsnCode : new FormControl(),\r\n        gst : new FormControl(),\r\n        //vat : \"0\",\r\n        otherTax : new FormControl(),\r\n        discounts : new FormControl(),\r\n        medicineType : new FormControl(),      \r\n        category : new FormControl()\r\n    });\r\n  }\r\n\r\n/*\r\n  ngAfterViewInit(){\r\n    this.dataService.fetchAllPatients().then((result:[]) => {\r\n      this.patientList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n\r\n   \r\n  }\r\n  */\r\n  getListdigitalmakt(){\r\n\r\n  }\r\n  addItem(): void {\r\n    this.medicineListItems = this.listdigitalmaktFormGroup.get('medicineListItems') as FormArray;\r\n    this.medicineListItems.push(this.createMedicineItem());\r\n  }\r\n\r\n  removeItem(i){\r\n\r\n     this.medicineListItems = this.listdigitalmaktFormGroup.get('medicineListItems') as FormArray;\r\n    this.medicineListItems.removeAt(i)  \r\n\r\n  }\r\n\r\n \r\n  closeSearchModal(){\r\n    //if(this.modalSearchFilerReference)\r\n    //this.modalSearchFilerReference.close();\r\n    if(this.modalSearchFilerReference)\r\n    this.modalSearchFilerReference.dismiss()\r\n  }\r\n \r\n   openforAddListdigitalmaktDialog(){\r\n\r\ntry{\r\n     //this.medicineListItems.push({})\r\n     this.listdigitalmaktObject = Object.assign({}, this.listdigitalmaktObjectBase); \r\n\r\n    this.customerOldPrescriptionListArr = []; \r\n    this.customerId = ''\r\n    /*\r\n    if(this.customerId == undefined || !this.customerId || this.customerId == ''){\r\n     alert(\"Please select a customer first, from the dropdown\")\r\n     return\r\n    }\r\n    */\r\n    this.mode = \"add\"\r\n    //this.modalReferenceListdigitalmaktForm = this.modal.open(this.listdigitalmaktFormModal);\r\n    \r\n    \r\n    this.medicineListItems = this.listdigitalmaktFormGroup.get('medicineListItems') as FormArray;\r\n   // \r\n  }catch(e){\r\n    console.log(e)\r\n  }\r\n \r\n  }\r\n  getPatient(){\r\n\r\n  }\r\n \r\n  ngOnInit(){\r\n\r\n\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n\r\n  \r\n\r\n    //this.pageSize = Config.RECORDSIZE;\r\n    //this.pageNo = 1\r\n    this.fetchDigitalmargetings()     \r\n\r\n    \r\n\r\n  };\r\n\r\n  \r\n    \r\nenlargePic(){\r\n  //alert(\"trying to enlarge\")\r\n  //let image  = this.listdigitalmaktObject.uploadedFileURL   \r\n  //this.enlargedPic = image\r\n  //this.enlargedPrescPic = ''\r\n  //this.closeCustomModal2()\r\n  this.modalReferenceImage = this.modal.open(this.enlargedImageModal); \r\n}\r\nenlargePrescription(obj){\r\n  //this.closeCustomModal()\r\n  //this.enlargedPic = ''\r\n  let image  = obj.uploadPhotoListdigitalmaktPrescriptionURL    \r\n  this.enlargedPrescPic = image\r\n  this.modalReferencePrescriptionImage = this.modal.open(this.enlargedPrescriptionModal); \r\n}\r\n\r\nselectPrescription(obj){\r\n // let image  = obj.uploadPhotoListdigitalmaktPrescriptionURL    \r\n  //  this.enlargedPrescPic = image\r\n  //this.modalReferenceImage = this.modal.open(this.enlargedPrescriptionModal); \r\n  \r\n  obj.selectValue = true\r\n\r\n  for ( var i in  this.customerOldPrescriptionListArr){\r\n    let oldPresc = this.customerOldPrescriptionListArr[i]\r\n    if(oldPresc._id == obj._id){\r\n      continue\r\n    }else{\r\n      //this.customerOldPrescriptionListArr.splice(i, 1);\r\n      oldPresc.selectValue = false\r\n      //this.customerOldPrescriptionListArr.splice(i, 1,oldPresc);\r\n    }\r\n  }\r\n  this.listdigitalmaktObject.uploadedFile = obj.uploadPhotoListdigitalmaktPrescription\r\n  this.listdigitalmaktObject.uploadedFile = \"data:image/jpg;base64,\"+this.listdigitalmaktObject.uploadedFile\r\n  this.listdigitalmaktObject.uploadedFileURL = obj.uploadPhotoListdigitalmaktPrescriptionURL\r\n\r\n  this.listdigitalmaktFormGroup.get('uploadedFile').patchValue(this.listdigitalmaktObject.uploadedFile);\r\n\r\n  console.log(\"obj ==\"+JSON.stringify(obj))\r\n  //this.getPhotoOLDPrescription(obj.uploadPhotoListdigitalmaktPrescriptionURL)\r\n  //this.showOldPrescription  = 'url(' + obj.uploadPhotoListdigitalmaktPrescriptionURL + ')'\r\n}\r\n\r\ngetPhotoOLDPrescription(image) {\r\n  try {\r\n    \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   console.log('Error', error);\r\n  }\r\n}\r\n\r\ngetPhoto(photoType) {\r\n  try {\r\n    console.log(\"in getPhoto == this.listdigitalmaktObject.uploadedFileURL == \"+this.listdigitalmaktObject.uploadedFileURL)\r\n    let image  = this.listdigitalmaktObject.uploadedFileURL\r\n\r\n\r\n    image  = this.listdigitalmaktObject.uploadedFile\r\n    \r\n    \r\n\r\n\r\n    //alert(this.fromOldImageList)\r\n\r\n    this.enlargedPic = image\r\n   \r\n    //this.fromOldImageList = false\r\n\r\n\r\n   //let  image = \"data:image/jpg;base64,\"+this.listdigitalmaktObject.uploadedFile\r\n   /* if(photoType == 'prescription'){\r\n      image  = this.listdigitalmaktObject.uploadedFileURL\r\n      if(!image && this.listdigitalmaktObject.uploadedFile){\r\n        image = \"data:image/jpg;base64,\"+this.listdigitalmaktObject.uploadedFile\r\n\r\n        this.listdigitalmaktObject.uploadedFile = \"data:image/jpg;base64,\"+this.listdigitalmaktObject.uploadedFile\r\n\r\n      }\r\n    }*/\r\n    \r\n   \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   console.log('Error', error);\r\n  }\r\n}\r\n\r\ngetPhotoOldPrescription(obj) {\r\n  try {\r\n    let image  = obj.uploadPhotoListdigitalmaktPrescriptionURL\r\n    \r\n      image  = obj.uploadPhotoListdigitalmaktPrescriptionURL\r\n      /*if(obj && obj.uploadPhotoListdigitalmaktPrescription){\r\n        image = obj.uploadPhotoListdigitalmaktPrescription\r\n      }\r\n    */\r\n  //  this.enlargedPic = image\r\n   \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   // //console.log('Error', error);\r\n  }\r\n}\r\n\r\n\r\ncheckStatusChange(){\r\n  console.log(\"status **\"+this.listdigitalmaktObject['status'] )\r\n}\r\ncheckDeliveryMode(){\r\n  console.log(\"deliverymode **\"+this.listdigitalmaktObject.deliveryMode )\r\n}\r\n\r\n\r\ncloseMainModal() {\r\n     \r\n  if(this.modalReferenceListdigitalmaktForm)\r\n    this.modalReferenceListdigitalmaktForm.close();\r\n\r\n    this.fromOldImageList = false\r\n  \r\n}\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n \r\n  \r\n\r\nonChangeCustomerSearch(val: string) {\r\n  //console.log(\" inside onChangePatientSearch val \"+val)\r\n // if(val && val.length >2 ){\r\n  let data = {name:val}\r\n  this.dataService.fetchAllCustomers(data).then((result:[]) => {\r\n    this.customerList = result.map(element => element)\r\n  }, (err) => {\r\n      //console.log(err);\r\n  });\r\n // }\r\n}\r\n\r\n\r\nviewPrescription(obj){\r\n\r\n  this.enlargedPic = obj.uploadedFileURL\r\n  this.modalReferenceImage = this.modal.open(this.enlargedImageModal); \r\n\r\n}\r\n\r\npageChanged(event){\r\n  console.log(\"****** this.event   ===== **\"+event)\r\n  this.pageNo = event\r\n  this.applyFilter()\r\n}\r\n\r\napplyFilter() {\r\n      \r\n    \r\n               \r\n  \r\n    this.fetchDigitalmargetings()\r\n  \r\n\r\n \r\n  \r\n}\r\n\r\nfetchDigitalmargetingsCount(){\r\n  \r\n  let data = {pageNo:this.pageNo,perPage:this.pageSize,filter : this.allDynaFilter}\r\n  // this.fetchDigitalmargetingsCount({filter : allDynaFilter})  \r\n   //this.fetchDigitalmargetingsByFilters({filter : allDynaFilter})   \r\n   console.log(\" inside data \"+JSON.stringify(data))\r\n \r\n   this.dataService.fetchDigitalmargetingsCount(data).then((result) => {\r\n         \r\n     console.log(\"****** fetchdigitalmargetingsCount result   ===== **\"+JSON.stringify(result))\r\n   this.totalDocRecords = result;\r\n   this.loading = false;\r\n\r\n   console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n \r\n }, (err) => {\r\n   this.loading = false;\r\n   console.log(err);\r\n });\r\n }\r\n\r\n fetchDigitalmargetings(){\r\n  \r\n  let data = {pageNo:this.pageNo,perPage:this.pageSize,filter : this.allDynaFilter}\r\n\r\nthis.dataService.fetchDigitalmargetings(data).then((result:any) => {        \r\n  this.normalFiltereduserListArr = []; \r\n    //this.normalFiltereduserListArr = result.map(element => {        \r\n     // return   element\r\n   // })\r\n\r\n  for(var i in result){\r\n    let digitalmargetingObj = result[i]\r\n   // if(!digitalmargetingObj['deliveryMode'] || digitalmargetingObj['deliveryMode'] == undefined ){\r\n  //    digitalmargetingObj['deliveryMode'] = \"General\"\r\n  //  }\r\n\r\n    console.log(\"****** digitalmargetingObj   ===== **\"+JSON.stringify(digitalmargetingObj))    \r\n    this.normalFiltereduserListArr.push(digitalmargetingObj)\r\n  }\r\n\r\n\r\n  //  console.log(\"****** this.fetchDigitalmargetingsByFilters   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))      \r\n    this.loading = false;\r\n\r\n}, (err) => {\r\n  this.normalFiltereduserListArr = []; \r\n  this.loading = false;\r\n  console.log(err);\r\n});\r\n \r\n}\r\n  \r\n  \r\n}\r\n","<div>\r\n  <app-page-header [heading]=\"'Digital Marketing Orders'\" [icon]=\"'fa-user'\"></app-page-header>\r\n</div>\r\n\r\n<div class=\"col-md-12\" >\r\n      \r\n  <!--div class=\"card-header\">\r\n      User type\r\n  </div-->\r\n  <div class=\"card-body table-responsive marginLeft\"> <span class=\"pb-3 \"><b> List of existing {{userKind}}s </b>  </span>\r\n    <table class=\"table table-blistdigitalmakted table-sm\">\r\n      <thead>\r\n      <tr>\r\n        <th>Lead Id </th>\r\n          <th>Customer Name</th>\r\n          <th>Customer Email</th>\r\n          <th>Customer Mobile</th>\r\n          <th>Medicine Details</th>\r\n                    \r\n          \r\n          <th>Created Date</th>\r\n          <th >Prescription</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n          <tbody *ngIf=\"normalFiltereduserListArr && normalFiltereduserListArr.length>0\">\r\n        \r\n          <tr class=\"{{obj.status | lowercase}}\"  *ngFor=\"let obj of normalFiltereduserListArr | paginate: { id:'forlistdigitalmakt1', itemsPerPage: pageSize, currentPage: pageNo, totalItems: totalDocRecords }\">              \r\n     \r\n              <td>{{obj?._id}}</td>                  \r\n              <td>{{obj?.name}}</td>                  \r\n              <td>{{obj?.emailId}}</td>                  \r\n              <td>{{obj?.mobileNumber}}</td>                  \r\n          <td >\r\n            \r\n            <table  class='table blistdigitalmaktless'>\r\n              <tr class=\"{{obj.status | lowercase}}\" *ngFor=\"let med of obj.medicineList\"><td class=\"customdiv\"><b>Name:</b></td><td>{{med?.medicineName}}</td><td>/</td><td class=\"customdiv\"><b>Qty:</b></td><td>{{med?.quantity}}</td><!--td>/</td><td class=\"customdiv\"><b>Mg:</b></td><td>{{med?.mg}}</td--></tr>\r\n            \r\n            </table>      \r\n\r\n          </td>              \r\n          \r\n<td >{{convertToHumanDate(obj.createdDate)}}</td>\r\n<!-- [disabled]=\"obj.status=='Confirmed'\"-->\r\n<td >\r\n<button class=\"btn btn-dark\" (click)=\"viewPrescription(obj)\"> View Prescription</button></td>    \r\n\r\n        </tr>\r\n      </tbody>\r\n      <div class=\"col-md-12 text-left clearfix \">\r\n      <pagination-controls class=\"my-pagination marginLeft\"  id=\"forlistdigitalmakt1\" \r\n           (pageChange)=\"pageChanged($event)\"\r\n                  (pageBoundsCorrection)=\"pageChanged($event)\"                      \r\n                  directionLinks=\"true\"               maxSize=\"9\"\r\n                  directionLinks=\"true\"\r\n                  autoHide=\"true\"\r\n                  responsive=\"true\"\r\n                  previousLabel=\"Prev\"\r\n                  nextLabel=\"Next\"\r\n                  screenReaderPaginationLabel=\"Pagination\"\r\n                  screenReaderPageLabel=\"page\"\r\n                  screenReaderCurrentLabel=\"You're on page\"></pagination-controls >\r\n      </div>\r\n      <tbody *ngIf=\"(normalFiltereduserListArr && normalFiltereduserListArr.length==0)\">\r\n          <tr>\r\n            <td colspan=\"7\" align = \"center\">No record available</td>\r\n          </tr>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n  \r\n\r\n\r\n  <ng-template #enlargedImageModal let-close=\"close\">\r\n    <div class=\"modal-header py-1\">\r\n      <h4 class=\"modal-title headerTitle mb-0\">Enlarged Prescription View</h4>\r\n      \r\n      <button type=\"button\" class=\"close\" (click)=\"closeCustomModal();\">×</button>\r\n  </div>\r\n  \r\n  <div class=\"modal-body\">\r\n    <img src=\"{{enlargedPic}}\" class=\"para\"/>\r\n  </div>\r\n  </ng-template>\r\n  <ng-template #enlargedPrescriptionModal let-close=\"close\">\r\n    <div class=\"modal-header py-1\">\r\n      <h4 class=\"modal-title headerTitle mb-0\">Enlarged View</h4>\r\n      \r\n      <button type=\"button\" class=\"close\" (click)=\"closeCustomModal2();\">×</button>\r\n  </div>\r\n  \r\n  <div class=\"modal-body\">\r\n    <img src=\"{{enlargedPrescPic}}\" class=\"para\"/>\r\n  </div>\r\n  </ng-template>\r\n\r\n<div class=\"my-container\">\r\n  <ng-template #customLoadingTemplate>\r\n    \r\n            Please wait..\r\n    \r\n</ng-template>\r\n  <ngx-loading [show]=\"loading\" [config]=\"{ primaryColour: 'blue',secondaryColour:'red',fullScreenBackdrop:false}\" [template]=\"customLoadingTemplate\"></ngx-loading>\r\n</div>\r\n\r\n\r\n\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\n\r\nimport { ListdigitalmaktComponent } from './listdigitalmakt.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\nimport { ListdigitalmaktRoutingModule } from './listdigitalmakt-routing.module';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AutocompleteLibModule,\r\n    NgxPaginationModule,\r\n    ListdigitalmaktRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBlistdigitalmaktRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [ListdigitalmaktComponent]\r\n})\r\nexport class ListdigitalmaktModule { }\r\n"]}