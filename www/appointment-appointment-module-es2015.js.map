{"version":3,"sources":["./src/app/layout/appointment/appointment-routing.module.ts","./src/app/layout/appointment/appointment.component.ts","./src/app/layout/appointment/appointment.component.html","./src/app/layout/appointment/appointment.module.ts"],"names":[],"mappings":"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","file":"appointment-appointment-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AppointmentComponent } from './appointment.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: AppointmentComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppointmentRoutingModule { }\r\n","import { Component, OnInit, NgZone, ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router } from '@angular/router';\r\nimport *  as moment from 'moment';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\nimport { Config } from '../../config';\r\n\r\n\r\nimport { BaseComponent } from 'src/BaseComponent';\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\n@Component({\r\n  selector: 'app-appointment',\r\n  templateUrl: './appointment.component.html',\r\n  styleUrls: ['./appointment.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class AppointmentComponent extends BaseComponent implements OnInit {\r\n\r\n  @ViewChild('fileInputDemoPhoto') fileInputDemoPhoto :ElementRef;;\r\n  public loading:boolean = true;\r\n  public closeResult: string;\r\n  keyword = 'name';\r\n  disableSatusDropDown:boolean = false\r\n  data = [\r\n     {\r\n       id: 1,\r\n       name: 'Usa'\r\n     },\r\n     {\r\n       id: 2,\r\n       name: 'England'\r\n     }\r\n  ];\r\n  keywordLocation = \"name\"\r\n  keywordDoctor = \"name\"\r\n  patientList:any = []\r\n  locationList:any = []\r\n  doctorList:any  = []\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  paientName:any\r\n  locationName:any\r\n  doctorName:any\r\n  @ViewChild('itemTemplate') itemTemplateRef: ElementRef;\r\n  @ViewChild('acc') accordionComponent: NgbAccordion;\r\n  public userKind:string=\"appointment\"\r\n  normalFiltereduserListArr:any = [];\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('appointmentFormModal') appointmentFormModal: TemplateRef<any>;\r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  appointmentFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  customAppointmenttime : {\r\n    hour: 10,\r\n    minute: 20,\r\n\r\n};\r\n  appointmentObject =  \r\n  {    \r\n    locationId : \"\",\r\n    patientId : \"\",\r\n    doctorId : \"\",\r\n    appointmentDate : null,\r\n    appointmentTime : \"10:30 am\",\r\n    status : \"Requested\",\r\n    active : true    \r\n  }\r\n\r\n  appointmentObjectBase =  \r\n  {    \r\n    locationId : \"\",\r\n    patientId : \"\",\r\n    doctorId : \"\",\r\n    appointmentDate : null,\r\n    appointmentTime :  \"10:30 am\",\r\n    status : \"Requested\",\r\n    active : true    \r\n  }\r\n  \r\n  openingMeridian : boolean = true;\r\n\r\n  constructor(\r\n    private datePipe : DatePipe,\r\n    public router: Router,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess,\r\n    \r\n    \r\n  ) {\r\n    super(router)\r\n  //  this.customAppointmenttime.hour = 9\r\n   // this.customAppointmenttime.minute = 10\r\n\r\n    if(!this.user.role.doctor.appointment.view){\r\n      return\r\n    }\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n    \r\n    this.appointmentFormGroup = _fb.group({\r\n      locationId: new FormControl(this.appointmentObject.locationId, Validators.required),\r\n      locationName: new FormControl(''),\r\n      doctorId: new FormControl(this.appointmentObject.doctorId, Validators.required),\r\n      doctorName: new FormControl(''),\r\n      patientId: new FormControl(this.appointmentObject.patientId, Validators.required),\r\n      patientName: new FormControl(''),\r\n      appointmentDate: new FormControl(this.appointmentObject.appointmentDate, Validators.required),\r\n      appointmentTime: new FormControl(this.appointmentObject.appointmentTime, Validators.required),\r\n      status: new FormControl(this.appointmentObject.status)\r\n    });\r\n\r\n    //this.appointmentFormGroup.valueChanges.subscribe(data => //console.log('form changes', data));\r\n    this.loading = false;    \r\n    this.fetchAppointments()   \r\n    \r\n  }\r\n  getLocation(){\r\n\r\n  }\r\n  \r\n  patientSelectEvent(item) {\r\n    if(item){\r\n    this.appointmentFormGroup.get('patientId').patchValue(item['_id']);\r\n    this.appointmentObject.patientId = item['_id']\r\n    ////console.log(\" inside patientSelectEvent \"+JSON.stringify(item))\r\n    //console.log(\" inside patientSelectEvent \"+JSON.stringify(item))\r\n    }\r\n    // do something with selected item\r\n  }\r\n \r\n  onChangePatientSearch(val: string) {\r\n    //console.log(\" inside onChangePatientSearch val \"+val)\r\n    if(val && val.length >2 ){\r\n    let data = {name:val}\r\n    this.dataService.fetchAllPatients(data).then((result:[]) => {\r\n      this.patientList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n    }\r\n  }\r\n \r\n   \r\n  locationSelectEvent(item) {\r\n    if(item){\r\n    this.appointmentFormGroup.get('locationId').patchValue(item['_id']);\r\n    this.appointmentObject.locationId = item['_id']\r\n    //console.log(\" inside locationSelectEvent \"+JSON.stringify(item))\r\n    }\r\n    // do something with selected item\r\n  }\r\n \r\n  onChangeLocationSearch(val: string) {\r\n    //console.log(\" inside onChangePatientSearch val \"+val)\r\n   // if(val && val.length >2 ){\r\n    let data = {name:val}\r\n    this.dataService.fetchAllLocations(data).then((result:[]) => {\r\n      this.locationList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n   // }\r\n  }\r\n \r\n  \r\n  doctorSelectEvent(item) {\r\n    if(item){\r\n    this.appointmentFormGroup.get('doctorId').patchValue(item['_id']);\r\n    this.appointmentObject.doctorId = item['_id']\r\n    //console.log(\" inside locationSelectEvent \"+JSON.stringify(item))\r\n    }\r\n    // do something with selected item\r\n  }\r\n \r\n  doctorLocationSearch(val: string) {\r\n    //console.log(\" inside onChangePatientSearch val \"+val)\r\n   // if(val && val.length >2 ){\r\n    let data = {name:val}\r\n    this.dataService.fetchAllDoctors(data).then((result:[]) => {\r\n      this.doctorList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n   // }\r\n  }\r\n  \r\n  onFocusedLocation(e){\r\n\r\n    //console.log(\" inside onFocusedLocation e \"+e)\r\n    // do something w\r\n  }\r\n\r\n  onFocusedPAtient(e){\r\n\r\n    //console.log(\" inside onFocusedPAtient e \"+e)\r\n    // do something w\r\n  }\r\n\r\n  openAddAppointmentDialog(){\r\n    this.mode = \"add\"\r\n    this.disableSatusDropDown = true\r\n    this.appointmentObject =Object.assign({}, this.appointmentObjectBase); \r\n    this.modalReference = this.modal.open(this.appointmentFormModal);\r\n  }\r\n  getPatient(){\r\n\r\n  }\r\n  /*\r\n  ngAfterViewInit(){\r\n    this.dataService.fetchAllPatients().then((result:[]) => {\r\n      this.patientList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n\r\n    this.dataService.fetchAllLocations().then((result:[]) => {\r\n      this.locationList = result.map(element => element)\r\n    }, (err) => {\r\n    //console.log(err);\r\n    });\r\n  }\r\n  */\r\n \r\n  \r\n  openAddappointmentDialog(){\r\n    this.mode = \"add\"\r\n    this.paientName = ''\r\n    this.locationName = ''\r\n    this.doctorName = ''\r\n    this.modalReference = this.modal.open(this.appointmentFormModal);\r\n  }\r\n  ngOnInit(){\r\n\r\n\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n\r\n  \r\n\r\n    //this.pageSize = Config.RECORDSIZE;\r\n    //this.pageNo = 1\r\n    this.fetchAppointmentsCount()  \r\n    this.fetchAppointments()    \r\n    \r\n //   this.items = Array(150).fill(0).map((x, i) => ({ id: (i + 1), name: `Item ${i + 1}`})\r\n  };\r\n  save(){\r\n//alert(\"mode: \"+this.mode)\r\n   \r\n\r\n    if(!this.appointmentFormGroup.valid){\r\n        this.submitAttempt = true;        \r\n        this.validateFields(this.appointmentFormGroup.controls)                   \r\n        return; \r\n    } \r\n    if(this.appointmentObject.appointmentDate && this.appointmentObject.appointmentDate!=\"\"){\r\n//      this.appointmentObject.dateOfBirth = this.fromJsDateToMongoDate(this.appointmentFormGroup.controls.dateOfBirth.value)\r\n      this.appointmentObject.appointmentDate = this.fromJsDateToMongoDate(this.appointmentObject.appointmentDate)    \r\n    }\r\n   \r\n    this.appointmentObject.appointmentTime = this.convertTimeFormogo(this.appointmentObject.appointmentTime)\r\n\r\n    \r\n\r\n    \r\n    if(this.mode == \"add\"){\r\n      this.appointmentObject.status = \"Requested\"\r\n      //console.log(\"this.appointmentObject for add == \"+JSON.stringify(this.appointmentObject))\r\n      this.dataService.addAppointment(this.appointmentObject).then((result) => {                \r\n        //  //console.log(\"result after adduser == \"+JSON.stringify(result))\r\n          this.fetchAppointments()\r\n          this.mode = \"add\"\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('New appointment is added successfully');\r\n          \r\n      }, (err) => {        \r\n      //console.log(err);\r\n      });\r\n      \r\n    }if(this.mode == \"edit\"){\r\n      delete this.appointmentObject['patient']\r\n      delete this.appointmentObject['location']\r\n    //  this.appointmentObject['appointmentId'] = this.appointmentObject['_id']\r\n      //console.log(\"this.appointmentObject for edit == \"+JSON.stringify(this.appointmentObject))\r\n      this.dataService.updateAppointment(this.appointmentObject).then((result) => {\r\n        //  //console.log(\"****** updateappointment result   ===== **\"+JSON.stringify(result))\r\n          //this.loading = false;\r\n          this.mode = \"add\"   \r\n          this.fetchAppointments()\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('appointment is updated successfully'); \r\n      }, (err) => {\r\n        this.mode = \"add\"\r\n        //this.loading = false;\r\n        //console.log(err);\r\n      });\r\n    }\r\n    \r\n}\r\nfetchPatientById(patientId){\r\n  let data = {patientId:patientId}\r\n  try {\r\n      \r\n      return new Promise((resolve) => {\r\n    \r\n            this.dataService.fetchPatientById(data).then((result) => {\r\n              \r\n            //console.log(\"****** patient  ===== **\"+JSON.stringify(result))\r\n                resolve(result['name'])                 \r\n        \r\n            }, (err) => {\r\n              resolve('')                 \r\n            //this.loading = false;\r\n            \r\n            //console.log(err);\r\n            });\r\n        });\r\n  }\r\n  catch(error) {\r\n      //console.log('Error', error);\r\n  }\r\n}\r\nfetchLocationById(locationId){\r\n  let data = {practiceLocationId:locationId}\r\n  try {      \r\n      return new Promise((resolve) => {    \r\n            this.dataService.fetchLocationById(data).then((result) => {\r\n              \r\n            //console.log(\"****** location  ===== **\"+JSON.stringify(result))\r\n                resolve(result['name'])                 \r\n        \r\n            }, (err) => {\r\n              resolve('')                 \r\n            //this.loading = false;\r\n            \r\n            //console.log(err);\r\n            });\r\n        });\r\n  }\r\n  catch(error) {\r\n      //console.log('Error', error);\r\n  }\r\n}\r\nfetchDoctrById(doctorId){\r\n  let data = {doctorId:doctorId}\r\n  try {      \r\n      return new Promise((resolve) => {    \r\n            this.dataService.fetchDoctrById(data).then((result) => {\r\n              \r\n            //console.log(\"****** location  ===== **\"+JSON.stringify(result))\r\n                resolve(result['name'])                 \r\n        \r\n            }, (err) => {\r\n              resolve('')                 \r\n            //this.loading = false;\r\n            \r\n            //console.log(err);\r\n            });\r\n        });\r\n  }\r\n  catch(error) {\r\n      //console.log('Error', error);\r\n  }\r\n}\r\nasync openForeditappointment(user){\r\n  this.mode = \"edit\"\r\n  this.disableSatusDropDown = false\r\n  this.paientName = ''\r\n  this.locationName = ''\r\n  this.doctorName = ''\r\n  this.appointmentObject = Object.assign({}, user); \r\n\r\n  \r\n  //let itemTemplateRefDiv = document.getElementById('itemTemplate');\r\n  //itemTemplateRefDiv.innerHTML = 'madan kanto';\r\n  this.paientName = await this.fetchPatientById(this.appointmentObject.patientId)  \r\n  this.locationName = await this.fetchLocationById(this.appointmentObject.locationId)\r\n\r\n  //console.log(\"this.appointmentObject **\"+JSON.stringify(this.appointmentObject))\r\n\r\n  this.doctorName = await this.fetchDoctrById(this.appointmentObject.doctorId)\r\n\r\n  //this.patientList.push({name:'madan kanto'})\r\n\r\n  this.appointmentObject.appointmentTime = this.backTONgTImeFOrmat(this.appointmentObject.appointmentTime)\r\n\r\n  //console.log(\"this.appointmentObject.appointmentTime **\"+JSON.stringify(this.appointmentObject.appointmentTime))\r\n\r\n  //this.appointmentObject.dateOfBirth = new Date(this.appointmentObject.dateOfBirth)\r\n\r\n  //this.appointmentObject.dateOfBirth =  moment(this.appointmentObject.dateOfBirth).format('DD-MMM-YYYY');\r\n\r\n  this.appointmentObject.appointmentDate = this.datePipe.transform(this.appointmentObject.appointmentDate, 'yyyy-MM-dd')\r\n\r\n  //this.openAddappointmentDialog()\r\n  this.modalReference = this.modal.open(this.appointmentFormModal);\r\n  \r\n  \r\n\r\n  //console.log(\"this.appointmentObject.appointmentDate **\"+this.appointmentObject.appointmentDate)\r\n  //this.userObject.userId = user._id\r\n  //this.role = user.role\r\n\r\n  \r\n  \r\n}\r\n  pageChanged(event){\r\n    //console.log(\"****** this.event   ===== **\"+event)\r\n    this.pageNo = event\r\n    this.applyFilter()\r\n  }\r\n  userKindChange(){\r\n    this.pageNo = 1\r\n    \r\n    this.applyFilter()\r\n  }\r\n  applyFilter() {\r\n      \r\n      this.fetchAppointments()\r\n    \r\n    \r\n  }\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n  fetchPatients(){\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    this.dataService.fetchPatients(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = [];      \r\n      this.normalFiltereduserListArr = result.map(element => element)\r\n     // //console.log(\"****** this.normalFiltereduserListArr   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      //console.log(err);\r\n    });\r\n  }\r\n  \r\n\r\n\r\n  fetchAppointmentsCount(){\r\n  //  this.pageNo = 1\r\n  //  this.pageSize = 10\r\n    this.dataService.fetchAppointmentsCount().then((result) => {\r\n        \r\n        //console.log(\"****** fetchappointmentsCount result   ===== **\"+JSON.stringify(result))\r\n      this.totalDocRecords = result;\r\n      //console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      //console.log(err);\r\n    });\r\n  }\r\n \r\n\r\n  fetchAppointments(){\r\n  //  this.pageNo = 1\r\n    //this.pageSize = 10\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    this.dataService.fetchAppointments(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = [];  \r\n        this.normalFiltereduserListArr = result.map(element => element)\r\n        ////console.log(\"****** this.fetchAppointments   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n        this.normalFiltereduserListArr.forEach(function(appointment, index){\r\n          //console.log(\"****** active   ===== **\"+ appointment.active)\r\n        })\r\n        \r\n        this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      //console.log(err);\r\n    });\r\n\r\n  }\r\n  \r\n  updateStatus(value, userInfo) {\r\n   // userInfo.active = value\r\n  //  //console.log(\"****** userInfo   ===== **\"+JSON.stringify(userInfo))\r\n  let data ={}\r\n  userInfo.active = !userInfo.active\r\n  //console.log(\"******  userInfo.active   ===== **\"+userInfo.active )\r\n    \r\n      userInfo.appointmentId = userInfo._id\r\n      data['appointmentId'] = userInfo._id\r\n      data['active'] = userInfo.active\r\n      //console.log(\"****** userInfo   ===== **\"+JSON.stringify(data))\r\n\r\n          this.dataService.updateAppointment(data).then((result) => {\r\n          //  //console.log(\"****** updateappointment result   ===== **\"+JSON.stringify(result))\r\n          this.fetchAppointments()\r\n            this.loading = false;\r\n      \r\n        }, (err) => {\r\n          this.loading = false;\r\n          //console.log(err);\r\n        });\r\n    \r\n    this.toastr.successToastr('Appointment record updated successfully');\r\n  }\r\n\r\n  \r\n}\r\n","<div>\r\n  <app-page-header [heading]=\"'Appointments'\" [icon]=\"'fa-user'\"></app-page-header>\r\n</div>\r\n\r\n  <div class=\"col-md-12\" >\r\n      \r\n          <!--div class=\"card-header\">\r\n              User type\r\n          </div-->\r\n          \r\n          \r\n                \r\n                <div class=\"col-md-12 text-right \" *ngIf=\"user.role.doctor.appointment.create\">                      \r\n                  <div class=\"content\">\r\n                    <button type=\"button\" class=\"btn btn-dark\" (click)=\"openAddAppointmentDialog()\">Raise Appointment Request</button>\r\n                  </div>\r\n              </div>\r\n             \r\n          \r\n          \r\n\r\n      <div class=\"card-body table-responsive marginLeft\"> <span class=\"pb-3 \"><b> List of existing {{userKind}}s </b>  </span>\r\n        <table class=\"table table-striped table-bordered table-sm\">\r\n          <thead>\r\n          <tr>\r\n            <th>Location</th>\r\n              <th>Patient Name</th>\r\n              <th>Appointment Date</th>\r\n              <th>Appointment Time</th>\r\n\t            \r\n              <th>Status</th>\r\n              <th *ngIf=\"user.role.doctor.appointment.edit\">Enable/Disable</th>\r\n              \r\n              <th>Created Date</th>\r\n              <th *ngIf=\"user.role.doctor.appointment.edit\">Edit</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tbody *ngIf=\"normalFiltereduserListArr && normalFiltereduserListArr.length>0\">\r\n            \r\n              <tr *ngFor=\"let obj of normalFiltereduserListArr | paginate: { id:'forappintment', itemsPerPage: pageSize, currentPage: pageNo, totalItems: totalDocRecords }\">              \r\n                <td>\r\n                  <table class='table borderless'><tr><td class=\"customdiv\"><b>Address</b></td><td>{{obj?.location?.address}}</td></tr>\r\n\r\n                    <tr><td class=\"customdiv\"><b>Area</b></td><td>{{obj?.location?.area}}</td></tr>\r\n\r\n                    <tr><td class=\"City\"><b>City</b></td><td>{{obj?.location?.city}}</td></tr>\r\n                  \r\n                  </table>       \r\n                  <!--b><span class=\"customdiv\">Address:</span></b><br>\r\n                  <b><span class=\"customdiv\">Area:</span></b>{{obj?.location?.area}}<br>\r\n                  <b><span class=\"customdiv\">City:</span></b>{{obj?.location?.city}}-->\r\n                </td>\r\n                  <td>{{obj?.patient?.name}}</td>\r\n                  <td >{{convertToHumanDate(obj.appointmentDate)}}</td>\r\n              <td>{{obj.appointmentTime}}</td>\r\n              <td>{{obj.status}}</td>\r\n              <!--td *ngIf=\"user.role.doctor.appointment.edit\"> \r\n                <span  *ngIf=\"obj.active\">Enabled</span>\r\n                <span *ngIf=\"!obj.active\">Disabled</span>\r\n            </td-->\r\n              <td *ngIf=\"user.role.doctor.appointment.edit\">               \r\n                <ui-switch [(ngModel)]=\"obj.active\" (change)=\"updateStatus($event, obj)\"></ui-switch>\r\n                    \r\n              </td>              \r\n<td >{{convertToHumanDate(obj.createdDate)}}</td>\r\n\r\n<td *ngIf=\"user.role.doctor.appointment.edit\" ><button class=\"btn btn-dark\" (click)=\"openForeditappointment(obj)\"> Edit </button></td>    \r\n\r\n            </tr>\r\n          </tbody>\r\n          <div class=\"col-md-12 text-left clearfix \">\r\n          <pagination-controls class=\"my-pagination marginLeft\"  id=\"forappintment\" \r\n               (pageChange)=\"pageChanged($event)\"\r\n                      (pageBoundsCorrection)=\"pageChanged($event)\"                      \r\n                      directionLinks=\"true\"               maxSize=\"9\"\r\n                      directionLinks=\"true\"\r\n                      autoHide=\"true\"\r\n                      responsive=\"true\"\r\n                      previousLabel=\"Prev\"\r\n                      nextLabel=\"Next\"\r\n                      screenReaderPaginationLabel=\"Pagination\"\r\n                      screenReaderPageLabel=\"page\"\r\n                      screenReaderCurrentLabel=\"You're on page\"></pagination-controls >\r\n          </div>\r\n          <tbody *ngIf=\"(normalFiltereduserListArr && normalFiltereduserListArr.length==0)\">\r\n              <tr>\r\n                <td colspan=\"7\" align = \"center\">No record available</td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n\r\n\r\n\r\n      <ng-template #appointmentFormModal let-close=\"close\">\r\n        <form [formGroup]=\"appointmentFormGroup\" class=\"custom_timebox p-0\">\r\n            <div class=\"modal-header py-1\">\r\n                    <h4 class=\"modal-title headerTitle mb-0\">{{mode | titlecase}} Appointment</h4>\r\n                    <button type=\"button\" class=\"close\" (click)=\"closeModal();\">×</button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12\">\r\n                      <div class=\"form-group\">\r\n                          <label class=\"labelTitles\">Select Patient </label>\r\n                          <!--select formControlName=\"patientId\" [(ngModel)]=\"appointmentObject.patientId\" class=\"form-control\" name=\"patientId\"\r\n                              (change)=\"getPatient()\">\r\n                            \r\n                              <option *ngFor=\"let patient of patientList\" value=\"{{patient._id}}\" class=\"labelValue\">{{patient.name}}</option>\r\n                          </select-->\r\n                                          \r\n                        <ng-autocomplete \r\n                            [data]=\"patientList\"\r\n                            [(ngModel)] = \"paientName\"\r\n                            formControlName=\"patientName\"\r\n                            [searchKeyword]=\"keyword\"\r\n                            (selected)='patientSelectEvent($event)'\r\n                            (inputChanged)='onChangePatientSearch($event)'\r\n                            (inputFocused)='onFocusedPAtient($event)'\r\n                            [itemTemplate]=\"itemTemplate\"\r\n                            [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n                        </ng-autocomplete>\r\n                        \r\n                          <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n                            <a [innerHTML]=\"item.name\"></a>\r\n                            </ng-template>\r\n                            \r\n                           <ng-template #notFoundTemplate let-notFound>\r\n                              <div [innerHTML]=\"notFound\"></div>\r\n                           </ng-template>\r\n  \r\n\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"labelTitles\">Select Location </label>\r\n                        <!--select formControlName=\"locationId\"  [(ngModel)]=\"appointmentObject.locationId\"  class=\"form-control\" name=\"locationId\"\r\n                            (change)=\"getLocation()\">\r\n                           \r\n                            <option *ngFor=\"let location of locationList\" value=\"{{location._id}}\" class=\"labelValue\">{{location.longName}}</option>\r\n                        </select-->\r\n\r\n                        <ng-autocomplete \r\n                        [data]=\"locationList\"\r\n                        [(ngModel)] = \"locationName\"\r\n                        formControlName=\"locationName\"\r\n                        [searchKeyword]=\"keywordLocation\"\r\n                        (selected)='locationSelectEvent($event)'\r\n                        (inputChanged)='onChangeLocationSearch($event)'\r\n                        (inputFocused)='onFocusedLocation($event)'\r\n                        [itemTemplate]=\"itemTemplate\"\r\n                        [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n                      </ng-autocomplete>\r\n                   \r\n                      \r\n                      <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n                        <a [innerHTML]=\"item.name\"></a>\r\n                        </ng-template>\r\n\r\n                        <ng-template #notFoundTemplate let-notFound>\r\n                        <div [innerHTML]=\"notFound\"></div>\r\n                        </ng-template>\r\n                        \r\n                       \r\n                    </div>\r\n                </div>\r\n            </div>\r\n                \r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                      <label class=\"labelTitles\">Select Doctor </label>\r\n                      <!--select formControlName=\"locationId\"  [(ngModel)]=\"appointmentObject.locationId\"  class=\"form-control\" name=\"locationId\"\r\n                          (change)=\"getLocation()\">\r\n                         \r\n                          <option *ngFor=\"let location of locationList\" value=\"{{location._id}}\" class=\"labelValue\">{{location.longName}}</option>\r\n                      </select-->\r\n\r\n                      <ng-autocomplete \r\n                      [data]=\"doctorList\"\r\n                      [(ngModel)] = \"doctorName\"\r\n                      formControlName=\"doctorName\"\r\n                      [searchKeyword]=\"keywordDoctor\"\r\n                      (selected)='doctorSelectEvent($event)'\r\n                      (inputChanged)='doctorLocationSearch($event)'\r\n                      \r\n                      [itemTemplate]=\"itemTemplate\"\r\n                      [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n                    </ng-autocomplete>\r\n                 \r\n                    \r\n                    <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n                      <a [innerHTML]=\"item.name\"></a>\r\n                      </ng-template>\r\n                      <ng-template #notFoundTemplate let-notFound>\r\n                      <div [innerHTML]=\"notFound\"></div>\r\n                      </ng-template>\r\n                      \r\n                     \r\n                  </div>\r\n              </div>\r\n          </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                      <label class=\"labelTitles\">Status </label>\r\n                      <div *ngIf=\"mode=='edit'\">\r\n                      <select formControlName=\"status\"  [(ngModel)]=\"appointmentObject.status\"  class=\"form-control\" name=\"locationId\"\r\n                          >                         \r\n                          <option value=\"Confirm\" class=\"labelValue\">Confirm</option>\r\n                          <option value=\"Reschedule\" class=\"labelValue\">Reschedule</option>\r\n                          <option value=\"Reject\" class=\"labelValue\">Reject</option>                          \r\n                          <option value=\"Requested\" class=\"labelValue\">Requested</option>                          \r\n                      </select>\r\n                    </div>\r\n                    <div *ngIf=\"mode=='add'\">\r\n                      <input class=\"form-control labelValue\"   disabled [(ngModel)]=\"appointmentObject.status\"  placeholder=\"Requested\">\r\n                    </div>\r\n                     \r\n                  </div>\r\n              </div>\r\n          </div>\r\n              \r\n\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-md-12 form-group\">\r\n                      <label class=\"labelTitles\"><b>Date Of Appointment</b></label>\r\n                  </div>\r\n                  <!--pattern=\"\\d{1,2}/\\d{1,2}/\\d{4}\"-->\r\n                  <div class=\"col-md-12 marginTop\">\r\n                          <input type=\"date\"   class=\"form-control\" [(ngModel)]=\"appointmentObject.appointmentDate\" formControlName=\"appointmentDate\"\r\n                          placeholder=\"Enter AppointmentDate\">\r\n                          \r\n                   </div>\r\n            </div>\r\n\r\n            <div class=\"row \">\r\n              <div class=\"col-md-12 form-group\">\r\n              <label class=\"labelValue\">Appointment Time</label>\r\n              <ngb-timepicker formControlName=\"appointmentTime\" [(ngModel)]=\"appointmentObject.appointmentTime\" [meridian]=\"openingMeridian\">\r\n              </ngb-timepicker>\r\n              <div class=\"invalid-feedback d-block\"\r\n                  *ngIf=\"appointmentFormGroup.controls.appointmentTime.hasError('required')\">Invalid\r\n                  time</div>\r\n          </div>\r\n        </div>\r\n\r\n             </div>\r\n             <div class=\"modal-footer\">\r\n                <button [disabled]=\"!appointmentFormGroup.valid\" type=\"button\" class=\"btn btn-primary m-10\"\r\n                    (click)=\"save();\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"closeModal();\">Cancel</button>\r\n            </div>\r\n        </form>\r\n        <p *ngIf=\"submitAttempt\" class=\"cutomeerrortext\">\r\n                \r\n         <span class=\"redcolor ml-2\"><i class=\"fa fas fa-exclamation\"></i><b>&nbsp;Fix The Error : </b></span> {{form_fill_failure_msg}}\r\n          \r\n        </p>\r\n</ng-template>\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n<!--div class=\"my-container\">\r\n  <ngx-loading [show]=\"loading\"></ngx-loading>\r\n</div-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { AppointmentRoutingModule } from './appointment-routing.module';\r\nimport { AppointmentComponent } from './appointment.component';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AutocompleteLibModule,\r\n    NgxPaginationModule,\r\n    AppointmentRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBorderRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [AppointmentComponent]\r\n})\r\nexport class AppointmentModule { }\r\n"],"sourceRoot":"webpack:///"}