{"version":3,"sources":["./src/app/layout/order/order-routing.module.ts","./src/app/layout/order/order.component.ts","./src/app/layout/order/order.component.html","./src/app/layout/order/order.module.ts"],"names":[],"mappings":"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","file":"order-order-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { OrderComponent } from './order.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: OrderComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrderRoutingModule { }\r\n","import { Component, OnInit, NgZone, ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion,NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router , ActivatedRoute} from '@angular/router';\r\nimport *  as moment from 'moment';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\nimport { Config } from '../../config';\r\n\r\n\r\nimport { BaseComponent } from 'src/BaseComponent';\r\nimport { FormBuilder, FormGroup, FormControl, Validators,FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class OrderComponent extends BaseComponent implements OnInit {\r\n  loadingCustomeMsg:any = \"Loading...\"\r\n  @ViewChild('myname') input: ElementRef;\r\n  @ViewChild('fileInputDemoPhoto') fileInputDemoPhoto :ElementRef;;\r\n  fromOldImageList:boolean = false\r\n  public loading:boolean = true;\r\n  public isPrescriptionUploaded = false\r\n  showOldPrescription:any = ''\r\n  public closeResult: string;\r\n  enlargedPic:any\r\n  enlargedPrescPic:any\r\n  allDynaFilter = null\r\n  patientList:any = []\r\n  customerList:any = []\r\n  orderStatus:string\r\n  orderId:string\r\n  orderDate:string\r\n  states = Config.states\r\n  keywordCustomer:string = \"name\"\r\n  fetchOrderByCustomer:boolean = false\r\n  orderList:any = []\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  fromCustomerPage:boolean = false\r\n  @ViewChild('acc') accordionComponent: NgbAccordion;\r\n  public userKind:string=\"order\"\r\n  normalFiltereduserListArr:any = [];\r\n  customerOldPrescriptionListArr:any = [];\r\n  \r\n  modalSearchFilerReference: NgbModalRef;\r\n  delModeList:any = [\r\n    {\"value\":\"Express\",\"name\":\"Express\"},\r\n    {\"value\":\"General\",\"name\":\"General\"}  ]\r\n\r\n  modalReferenceOrderForm: NgbModalRef;\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('orderFormModal') orderFormModal: TemplateRef<any>;\r\n   @ViewChild('searFiltersModal') searFiltersModal: TemplateRef<any>;\r\n   @ViewChild('enlargedImageModal') enlargedImageModal: TemplateRef<any>;\r\n   @ViewChild('enlargedPrescriptionModal') enlargedPrescriptionModal: TemplateRef<any>;\r\n\r\n   \r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  orderFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  customOrdertime : {\r\n    hour: 10,\r\n    minute: 20,\r\n\r\n};\r\nsearchByCustomer:boolean = false\r\nsearchByOrderDate:boolean = false\r\nsearchByOrderId:boolean = false\r\nsearchByStatus:boolean = false\r\n\r\n\r\nmedicineName:any\r\nkeywordMedicine = \"name\"\r\n  orderObject =  \r\n  {    \r\n    active : true,       \r\n    medicineList : [ \r\n      {\r\n        medicineId: '',             \r\n        medicineName : \"\",\r\n        quantity : \"\",\r\n        mg: '',\r\n        mrp:0,      \r\n        active:true,      \r\n        \"b2bPrice\" : \"\",\r\n        \"gst\" : \"0\",\r\n\r\n        \"hsnCode\" : \"0\",\r\n        \"vat\" : \"0\",\r\n        \"otherTax\" : \"0\",\r\n        \"discounts\" : \"0\",\r\n        \"medicineType\" : \"\",      \r\n        \"category\" : \"\"\r\n                \r\n      }\r\n    ],    \r\n    customerId : \"\",\r\n    uploadedFile:\"\",\r\n    uploadedFileURL:\"\",\r\n    deliveryMode:\"General\",\r\n    status : \"OrderPlaced\"    \r\n  }\r\n\r\n  medicineArray:any = [[{\r\n    medicineId: '',             \r\n    medicineName : \"\",\r\n    quantity : \"\",\r\n    mg: '',\r\n    mrp:\"\",      \r\n    active:true,      \r\n    b2bPrice : \"\",\r\n    gst : \"0\",\r\n    hsnCode : \"0\",\r\n    vat : \"0\",\r\n    otherTax : \"0\",\r\n    discounts : \"0\",\r\n    medicineType : \"\",      \r\n    category : \"\"\r\n            \r\n  }]]\r\n  attendantList:any = []\r\n  orderObjectBase =  \r\n  {    \r\n    active : true,       \r\n    medicineList : [ \r\n      {\r\n        medicineId: '',             \r\n        medicineName : \"\",\r\n        quantity : \"\",\r\n        mg: '',\r\n        mrp:0,      \r\n        active:true,      \r\n        \"b2bPrice\" : \"\",\r\n        \"gst\" : \"0\",\r\n        \"hsnCode\" : \"0\",\r\n        \"vat\" : \"0\",\r\n        \"otherTax\" : \"0\",\r\n        \"discounts\" : \"0\",\r\n        \"medicineType\" : \"\",      \r\n        \"category\" : \"\"\r\n                \r\n      }\r\n    ],    \r\n    customerId : \"\",\r\n    uploadedFile:\"\",\r\n    uploadedFileURL:\"\",\r\n    deliveryMode:\"General\",\r\n    status : \"OrderPlaced\"    \r\n  }\r\n  customer:any\r\n  customerName:any\r\n  customerId:any\r\n  doctorName:any\r\n  medicineListItems: FormArray;\r\n  openingMeridian : boolean = true;\r\n\r\n  constructor(    \r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess   \r\n    \r\n  ) {\r\n    super(router)\r\n  //  this.customOrdertime.hour = 9\r\n   // this.customOrdertime.minute = 10\r\n\r\n    if(!this.user.role.doctor.order.view){\r\n      return\r\n    }\r\n\r\n    this.customerName =  this.route.snapshot.paramMap.get('name');\r\n\r\n    this.fromCustomerPage = this.route.snapshot.paramMap.get('fromCustomerPage') =='fromCustomerPage';\r\n    console.log(\"this.customerName  **\"+this.customerName ) \r\n    //this.customerId =  \"5ee8ea1158ea514eec6f6e18\"//this.route.snapshot.paramMap.get('customerId');\r\n\r\n    let dynaFilterArry = []\r\n    this.customerId = this.route.snapshot.paramMap.get('customerId');\r\n    console.log(\"this.customerId  **\"+this.customerId ) \r\n    if(this.customerId != undefined && this.customerId && this.customerId != ''){\r\n      this.fetchOrderByCustomer = true\r\n      this.allDynaFilter = {$and:dynaFilterArry} \r\n      dynaFilterArry.push({customerId:this.customerId }) \r\n    }else{\r\n      this.fetchOrderByCustomer = false\r\n    }\r\n\r\n    this.orderFormGroup = _fb.group({\r\n      customerId: new FormControl(this.customerId, Validators.required),      \r\n      uploadedFile: new FormControl(this.orderObject.uploadedFile, Validators.required),\r\n      //medicineName: new FormControl(this.orderObject.attendantID, Validators.required),\r\n      //quantity: new FormControl(this.orderObject.name, Validators.required),\r\n      status: new FormControl(this.orderObject.status, Validators.required),      \r\n      deliveryMode: new FormControl(this.orderObject.deliveryMode, Validators.required),      \r\n      medicineListItems: this._fb.array([this.createMedicineItem()])\r\n    });\r\n    //this.createMedicineItem()\r\n\r\n    //this.orderFormGroup.valueChanges.subscribe(data => console.log('form changes', data));\r\n   // this.loading = false;    \r\n    //this.fetchOrders()   \r\n    \r\n  }\r\n\r\n  getControls() {\r\n    return (this.orderFormGroup.get('medicineListItems') as FormArray).controls;\r\n  }\r\n  gotoCustomerPage(){\r\n    this.router.navigate([\"/customer\",{fromOrderPage:'fromOrderPage'}]);\r\n  }\r\n  openCustomerPage(){\r\n    this.router.navigate([\"/customer\"]);\r\n  }\r\n  createMedicineItem(): FormGroup {\r\n    return this._fb.group({\r\n      medicineId: new FormControl(),\r\n      medicineName: new FormControl(),\r\n      mg: new FormControl(),\r\n      quantity: new FormControl(),      \r\n      mrp:new FormControl(),            \r\n       b2bPrice : new FormControl() ,\r\n       hsnCode : new FormControl(),\r\n        gst : new FormControl(),\r\n        //vat : \"0\",\r\n        otherTax : new FormControl(),\r\n        discounts : new FormControl(),\r\n        medicineType : new FormControl(),      \r\n        category : new FormControl()\r\n    });\r\n  }\r\n\r\n  createMedicineItemDuringEdit(medicine): FormGroup {\r\n    return this._fb.group({\r\n      medicineId: new FormControl(),\r\n      medicineName: new FormControl(),\r\n      mg: new FormControl(),\r\n      quantity: new FormControl(),      \r\n      mrp:new FormControl(),            \r\n       b2bPrice : new FormControl() ,\r\n       hsnCode : new FormControl(),\r\n        gst : new FormControl(),\r\n        //vat : \"0\",\r\n        otherTax : new FormControl(),\r\n        discounts : new FormControl(),\r\n        medicineType : new FormControl(),      \r\n        category : new FormControl()\r\n    });\r\n  }\r\n\r\n/*\r\n  ngAfterViewInit(){\r\n    this.dataService.fetchAllPatients().then((result:[]) => {\r\n      this.patientList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n\r\n   \r\n  }\r\n  */\r\n  getOrder(){\r\n\r\n  }\r\n  addItem(): void {\r\n    this.medicineListItems = this.orderFormGroup.get('medicineListItems') as FormArray;\r\n    this.medicineListItems.push(this.createMedicineItem());\r\n  }\r\n\r\n  removeItem(i){\r\n\r\n     this.medicineListItems = this.orderFormGroup.get('medicineListItems') as FormArray;\r\n    this.medicineListItems.removeAt(i)  \r\n\r\n  }\r\n\r\n  medicineSelectEvent(item,i) {\r\n    if(item){\r\n    //this.orderFormGroup.get('medicineID').patchValue(item['_id']);\r\n   // this.orderObject.medicineList[i].medicineId = item['_id']\r\n   try{\r\n     //if(item['_id'] != null && item['_id'])\r\n    this.medicineListItems.at(i).get('medicineId').patchValue(item['_id']);\r\n\r\n    //if(item['name'] != null && item['name'] )\r\n    this.medicineListItems.at(i).get('medicineName').patchValue(item['name']);\r\n\r\n    console.log(\"his.medicineListItems.at(i).get('medicineName') \"+this.medicineListItems.at(i).get('medicineName').value)\r\n \r\n    //if(item['mrp'] != null && item['mrp'] )\r\n    this.medicineListItems.at(i).get('mrp').patchValue(item['mrp']);\r\n\r\n \r\n    \r\n //   if(item['active'] != null && item['active'])\r\n   // this.medicineListItems.at(i).get('active').patchValue(item['active']);\r\n    \r\n    //if(item['b2bPrice'] != null && item['b2bPrice'] )\r\n    this.medicineListItems.at(i).get('b2bPrice').patchValue(item['b2bPrice']);\r\n    \r\n    //if(item['gst'] != null && item['gst'] )\r\n    this.medicineListItems.at(i).get('gst').patchValue(item['gst']);\r\n    \r\n\r\n    console.log(\"his.medicineListItems.at(i).get('gst') \"+this.medicineListItems.at(i).get('gst').value)\r\n\r\n    //if(item['hsnCode'] != null && item['hsnCode'])\r\n    this.medicineListItems.at(i).get('hsnCode').patchValue(item['hsnCode']);\r\n\r\n    //if(item['vat'] != null && item['vat'] && this.medicineListItems.at(i).get('vat'))\r\n    //this.medicineListItems.at(i).get('vat').patchValue(item['vat']);\r\n    \r\n    if(item['otherTax'] != null && item['otherTax'])\r\n    this.medicineListItems.at(i).get('otherTax').patchValue(item['otherTax']);\r\n    \r\n    if(item['discounts'] != null && item['discounts'] )\r\n    this.medicineListItems.at(i).get('discounts').patchValue(item['discounts']);\r\n    \r\n    if(item['medicineType'] != null && item['medicineType'] )\r\n    this.medicineListItems.at(i).get('medicineType').patchValue(item['medicineType']);\r\n    \r\n    if(item['category'] != null && item['category'] )\r\n     this.medicineListItems.at(i).get('category').patchValue(item['category']);\r\n\r\n    \r\n   // this.orderObject.medicineList[i].medicineName = item['medicineName']\r\n\r\n    \r\n   //console.log(\" this.medicineListItems \"+JSON.stringify(this.medicineListItems))\r\n\r\n   console.log(\" this.medicineListItems \"+this.medicineListItems)\r\n    } catch(e){\r\n     console.log(e)\r\n   }\r\n    }\r\n    // do something with selected item\r\n  }\r\n \r\n  doctorMedcineSearch(val: string,i) {\r\n    console.log(\" inside onChangePatientSearch val \"+val)\r\n\r\n    console.log(\" component count \"+ i)\r\n\r\n   // if(val && val.length >2 ){\r\n    let data = {name:val}\r\n\r\n    //let medicineArray = []\r\n    this.dataService.fetchAllMedicines(data).then((result:[]) => {\r\n      this.medicineArray = result.map(element => element)\r\n      //this.medicineArray[i] = medicineArray\r\n      //this.medicineArray = medicineArray.map(element => element)\r\n      console.log(\"this.medicineArray==\"+JSON.stringify(this.medicineArray[i]))\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n   // }\r\n  }\r\n  enableSearchByCutomer(){\r\n    this.searchByCustomer = !this.searchByCustomer\r\n  }\r\n  enableSearchByOrderDate(){\r\n    this.searchByOrderDate = !this.searchByOrderDate\r\n  }\r\n  enableSearchByOrderId(){\r\n    this.searchByOrderId = !this.searchByOrderId\r\n  }\r\n  enableSearchByStatus(){\r\n    this.searchByStatus = !this.searchByStatus\r\n  }\r\n  openSearchFilter(){\r\n    //this.reset()\r\n    this.reinitialise()\r\n    this.modalSearchFilerReference = this.modal.open(this.searFiltersModal); \r\n  }\r\n  closeSearchModal(){\r\n    //if(this.modalSearchFilerReference)\r\n    //this.modalSearchFilerReference.close();\r\n    if(this.modalSearchFilerReference)\r\n    this.modalSearchFilerReference.dismiss()\r\n  }\r\n \r\n   openforAddOrderDialog(){\r\n\r\ntry{\r\n     //this.medicineListItems.push({})\r\n     this.orderObject = Object.assign({}, this.orderObjectBase); \r\n\r\n    this.fromOldImageList = true\r\n\r\n    this.customerOldPrescriptionListArr = []; \r\n    this.customerId = ''\r\n    /*\r\n    if(this.customerId == undefined || !this.customerId || this.customerId == ''){\r\n     alert(\"Please select a customer first, from the dropdown\")\r\n     return\r\n    }\r\n    */\r\n    this.mode = \"add\"\r\n    this.modalReferenceOrderForm = this.modal.open(this.orderFormModal);\r\n    \r\n    this.orderFormGroup = this._fb.group({\r\n      customerId: new FormControl(this.customerId, Validators.required),      \r\n      uploadedFile: new FormControl(this.orderObject.uploadedFile, Validators.required),\r\n      deliveryMode: new FormControl(this.orderObject.deliveryMode, Validators.required),  \r\n      //medicineName: new FormControl(this.orderObject.attendantID, Validators.required),\r\n      //quantity: new FormControl(this.orderObject.name, Validators.required),\r\n      status: new FormControl(this.orderObject.status, Validators.required),      \r\n      medicineListItems: this._fb.array([ this.createMedicineItem() ])\r\n    });\r\n    this.medicineListItems = this.orderFormGroup.get('medicineListItems') as FormArray;\r\n   // \r\n  }catch(e){\r\n    console.log(e)\r\n  }\r\n \r\n  }\r\n  getPatient(){\r\n\r\n  }\r\n \r\n  ngOnInit(){\r\n\r\n\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n    \r\n    this.fetchOrdersCount()  \r\n    this.fetchOrders()   \r\n\r\n    if(this.customerId)\r\n    this.fetchAllOrderPrescriptions()   \r\n    \r\n    if(this.customerId == undefined || !this.customerId || this.customerId == ''){\r\n      this.fetchCustomers() \r\n    }\r\n    \r\n //   this.items = Array(150).fill(0).map((x, i) => ({ id: (i + 1), name: `Item ${i + 1}`})\r\n  };\r\n\r\n  fetchCustomers(){\r\n    //  this.pageNo = 1\r\n      //this.pageSize = 10\r\n      \r\n      this.dataService.fetchAllCustomersNotByName().then((result:[]) => {\r\n          \r\n        //this.customerList = [];      \r\n  \r\n          //this.customerList = result.map(element => element)\r\n         // if(!this.fromCustomerPage){\r\n           // this.customerId = this.customerList[0]\r\n         // }\r\n  \r\n      }, (err) => {\r\n        this.loading = false;\r\n        console.log(err);\r\n      });\r\n  \r\n    }\r\n    \r\n  save(){\r\n\r\n    if(!this.orderFormGroup.valid){\r\n        this.submitAttempt = true;        \r\n        this.validateFields(this.orderFormGroup.controls)                   \r\n        return; \r\n    } \r\n   let medicineListItems = []\r\n    for(var i = 0 ; i< this.medicineListItems.length ; i++){      \r\n        let formObject = this.medicineListItems.at(i)              \r\n        //let medicineObj = formObject.get('medicineName').value\r\n         medicineListItems.push({\r\n          medicineId: formObject.get('medicineId')?.value,\r\n          medicineName: formObject.get('medicineName')?.value,\r\n          mg: formObject.get('mg')?.value,\r\n          quantity: formObject.get('quantity')?.value,\r\n          mrp: formObject.get('mrp')?.value,\r\n          active: formObject.get('active')?.value,\r\n          b2bPrice: formObject.get('b2bPrice')?.value,\r\n          gst: formObject.get('gst')?.value,\r\n          vat: formObject.get('vat')?.value,\r\n          otherTax: formObject.get('otherTax')?.value,\r\n          discounts: formObject.get('discounts')?.value,\r\n          medicineType: formObject.get('medicineType')?.value,\r\n          category: formObject.get('category')?.value\r\n          \r\n         })        \r\n        \r\n\r\n    }\r\n    this.orderObject.medicineList = []\r\n    this.orderObject.medicineList = medicineListItems\r\n    this.orderObject.customerId = this.customerId\r\n  \r\n\r\n//    console.log(\"order this.orderObject **\"+JSON.stringify(this.orderObject))\r\n//this.fromOldImageList = false\r\n\r\n    if(this.mode == \"add\"){\r\n      delete this.orderObject['customer']\r\n      console.log(\"this.orderObject for add == \"+JSON.stringify(this.orderObject))\r\n      this.dataService.addOrder(this.orderObject).then((result) => {                \r\n        //  console.log(\"result after adduser == \"+JSON.stringify(result))\r\n        this.commonAfterSaveCode()\r\n          this.reinitialise()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('New order is added successfully');\r\n          this.saveUploadedPrescription()\r\n\r\n        //  this.fromOldImageList = false\r\n\r\n      }, (err) => {        \r\n      console.log(err);\r\n      });\r\n      \r\n    }if(this.mode == \"edit\"){\r\n      this.loading = true;\r\n      //delete this.orderObject['patient']\r\n      delete this.orderObject['customer']\r\n      this.orderObject['orderId'] = this.orderObject['_id']\r\n      console.log(\"this.orderObject for EDIT  == \"+JSON.stringify(this.orderObject))\r\n      this.dataService.updateOrder(this.orderObject).then((result) => {\r\n          //console.log(\"****** updateorder result   ===== **\"+JSON.stringify(result))\r\n          \r\n          this.commonAfterSaveCode()\r\n          if(this.isPrescriptionUploaded){\r\n            this.saveUploadedPrescription()\r\n            this.isPrescriptionUploaded = false\r\n          }\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('order is updated successfully'); \r\n         // this.fromOldImageList = false\r\n      }, (err) => {\r\n        //this.mode = \"add\"\r\n        this.loading = false;\r\n        if(err && err.message)\r\n          this.toastr.errorToastr(err.message); \r\n        console.log(err);\r\n      });\r\n      \r\n    }\r\n    \r\n}\r\nsaveUploadedPrescription(){\r\n  let orderPrescriptiondata = {customerId:this.orderObject.customerId,uploadPhotoOrderPrescription:this.orderObject.uploadedFile}\r\n          this.dataService.addOrderPrescription(orderPrescriptiondata).then((result) => {                \r\n              \r\n          }, (err) => {        \r\n          console.log(err);\r\n          });\r\n          \r\n}\r\ncommonAfterSaveCode(){\r\n  this.customerId = ''\r\n          this.loading = true;\r\n         // this.normalFiltereduserListArr = []; \r\n          this.closeMainModal()\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.mode = \"add\"   \r\n            this.fetchOrders()\r\n            \r\n        }, 2000);\r\n      \r\n}\r\nenlargePic(){\r\n  let image  = this.orderObject.uploadedFileURL   \r\n  this.enlargedPic = image\r\n  //this.enlargedPrescPic = ''\r\n  //this.closeCustomModal2()\r\n  this.modalReferenceImage = this.modal.open(this.enlargedImageModal); \r\n}\r\nenlargePrescription(obj){\r\n  //this.closeCustomModal()\r\n  //this.enlargedPic = ''\r\n  let image  = obj.uploadPhotoOrderPrescriptionURL    \r\n  this.enlargedPrescPic = image\r\n  this.modalReferencePrescriptionImage = this.modal.open(this.enlargedPrescriptionModal); \r\n}\r\n\r\nselectPrescription(obj){\r\n // let image  = obj.uploadPhotoOrderPrescriptionURL    \r\n  //  this.enlargedPrescPic = image\r\n  //this.modalReferenceImage = this.modal.open(this.enlargedPrescriptionModal); \r\n  \r\n  obj.selectValue = true\r\n\r\n  for ( var i in  this.customerOldPrescriptionListArr){\r\n    let oldPresc = this.customerOldPrescriptionListArr[i]\r\n    if(oldPresc._id == obj._id){\r\n      continue\r\n    }else{\r\n      //this.customerOldPrescriptionListArr.splice(i, 1);\r\n      oldPresc.selectValue = false\r\n      //this.customerOldPrescriptionListArr.splice(i, 1,oldPresc);\r\n    }\r\n  }\r\n  this.orderObject.uploadedFile = obj.uploadPhotoOrderPrescription\r\n  this.orderObject.uploadedFile = \"data:image/jpg;base64,\"+this.orderObject.uploadedFile\r\n  this.orderObject.uploadedFileURL = obj.uploadPhotoOrderPrescriptionURL\r\n\r\n  this.orderFormGroup.get('uploadedFile').patchValue(this.orderObject.uploadedFile);\r\n\r\n  console.log(\"obj ==\"+JSON.stringify(obj))\r\n  //this.getPhotoOLDPrescription(obj.uploadPhotoOrderPrescriptionURL)\r\n  //this.showOldPrescription  = 'url(' + obj.uploadPhotoOrderPrescriptionURL + ')'\r\n}\r\n\r\ngetPhotoOLDPrescription(image) {\r\n  try {\r\n    \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   console.log('Error', error);\r\n  }\r\n}\r\n\r\ngetPhoto(photoType) {\r\n  try {\r\n    console.log(\"this.orderObject.uploadedFileURL == \"+this.orderObject.uploadedFileURL)\r\n    //let image  = this.orderObject.uploadedFileURL\r\n\r\n    //let image  = this.orderObject.uploadedFile\r\n    \r\n    let image  = this.orderObject.uploadedFileURL\r\n\r\n\r\n    //alert(this.fromOldImageList)\r\n\r\n    this.enlargedPic = image\r\n    if(this.fromOldImageList){\r\n      //image  = \"data:image/jpg;base64,\"+this.orderObject.uploadedFile\r\n      image  = this.orderObject.uploadedFile      \r\n      this.enlargedPic = this.orderObject.uploadedFile\r\n    }    \r\n    //this.fromOldImageList = false\r\n\r\n\r\n   //let  image = \"data:image/jpg;base64,\"+this.orderObject.uploadedFile\r\n   /* if(photoType == 'prescription'){\r\n      image  = this.orderObject.uploadedFileURL\r\n      if(!image && this.orderObject.uploadedFile){\r\n        image = \"data:image/jpg;base64,\"+this.orderObject.uploadedFile\r\n\r\n        this.orderObject.uploadedFile = \"data:image/jpg;base64,\"+this.orderObject.uploadedFile\r\n\r\n      }\r\n    }*/\r\n    \r\n   \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   console.log('Error', error);\r\n  }\r\n}\r\ncapturePhoto(event,photoType){\r\n  //  alert(\"I am clicked\")\r\n    let reader = new FileReader();\r\n\r\n    this.fromOldImageList = true\r\n\r\n    \r\n    try {\r\n      reader.onload = (readerEvent) => {\r\n\r\n        let imageData = (readerEvent.target as any).result;\r\n        if(photoType == 'prescription')\r\n          this.orderObject.uploadedFile =  imageData;\r\n\r\n          //var dataURL = reader.result;\r\n          //this.orderObject.uploadedFileURL  =  imageData;\r\n\r\n          this.orderFormGroup.get('uploadedFile').patchValue(this.orderObject.uploadedFile);\r\n          this.isPrescriptionUploaded = true\r\n\r\n      };\r\n\r\n      \r\n//      this.orderObject.uploadedFileURL = event.target.files[0]\r\n\r\n      console.log(\"capturePhoto this.orderObject.uploadedFileURL == \"+this.orderObject.uploadedFileURL)\r\n\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n\r\n      \r\n    }\r\n    catch(error) {\r\n     console.log('Error', error);\r\n    }\r\n  }\r\n\r\ngetPhotoOldPrescription(obj) {\r\n  try {\r\n    let image  = obj.uploadPhotoOrderPrescriptionURL\r\n    \r\n      image  = obj.uploadPhotoOrderPrescriptionURL\r\n      /*if(obj && obj.uploadPhotoOrderPrescription){\r\n        image = obj.uploadPhotoOrderPrescription\r\n      }\r\n    */\r\n  //  this.enlargedPic = image\r\n   \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   // //console.log('Error', error);\r\n  }\r\n}\r\n\r\ncommonCodeDuringEdit(){\r\n\r\n  \r\n  this.orderFormGroup = this._fb.group({\r\n    customerId: new FormControl(this.customerId, Validators.required),      \r\n    uploadedFile: new FormControl(this.orderObject.uploadedFile, Validators.required),\r\n    deliveryMode: new FormControl(this.orderObject.deliveryMode, Validators.required),      \r\n    //medicineName: new FormControl(this.orderObject.attendantID, Validators.required),\r\n    //quantity: new FormControl(this.orderObject.name, Validators.required),\r\n    status: new FormControl(this.orderObject.status, Validators.required),      \r\n    medicineListItems: this._fb.array([ this.createMedicineItem() ])\r\n  });\r\n  \r\n\r\n  this.orderFormGroup.get('uploadedFile').patchValue(this.orderObject.uploadedFile);\r\n\r\n  //console.log(\"this.orderObject ==\"+JSON.stringify(this.orderObject))\r\n  let dateTimeArray = []\r\n  this.medicineListItems = this.orderFormGroup.get('medicineListItems') as FormArray;\r\n  this.medicineListItems.removeAt(0)  \r\n\r\n\r\n    \r\n  for(var i in this.orderObject.medicineList){\r\n      let medicine = this.orderObject.medicineList[i]      \r\n     // dateTimeArray.push({date:date,time:time})\r\n    //this.medicineListItems.push({date:date,time:time})\r\n    \r\n    this.medicineListItems.push(this._fb.group({      \r\n          medicineId: medicine.medicineId,             \r\n          medicineName : medicine.medicineName,\r\n          quantity : medicine.quantity,\r\n          mg: medicine.mg  ,\r\n          mrp: medicine.mrp,\r\n          active: medicine.active,\r\n          b2bPrice: medicine.b2bPrice,\r\n          gst: medicine.gst,          \r\n          hsnCode: medicine.hsnCode,\r\n          otherTax: medicine.otherTax,\r\n          discounts: medicine.discounts,\r\n          medicineType: medicine.medicineType,\r\n          category: medicine.category                          \r\n      \r\n    }))\r\n  }\r\n\r\n  console.log(\"this.medicineListItems **\"+this.medicineListItems.length)\r\n  \r\n  \r\n  //this.orderObject.attendantID = earlierAttendent\r\n\r\n  //this.orderFormGroup.get('medicineListItems').patchValue(dateTimeArray)\r\n  //addItem\r\n //setTimeout(() => {\r\n  //try{\r\n  //  this.modalReferenceOrderForm = this.modal.open(this.orderFormModal);\r\n  //}catch(error){\r\n//    console.log(error)\r\n  //}\r\n//}, 2000);\r\n  //setTimeout(() => {\r\n   \r\n}\r\ncheckStatusChange(){\r\n  console.log(\"status **\"+this.orderObject['status'] )\r\n}\r\ncheckDeliveryMode(){\r\n  console.log(\"deliverymode **\"+this.orderObject.deliveryMode )\r\n}\r\n openForeditOrder(user){\r\n\r\n  //this.input.nativeElement.focus();\r\n  //this.fromOldImageList = false\r\n\r\n//  console.log(\"order object **\"+JSON.stringify(user))\r\n  //this.modalReferenceOrderForm = this.modal.open(this.orderFormModal);\r\n\r\n  this.loading = true\r\n  this.loadingCustomeMsg == \"Fetching old prescriptions, please wait..\"\r\n  this.mode = \"edit\"\r\n  \r\n  //this.orderObject = Object.assign({}, this.orderObjectBase); \r\n  this.customerId = user['customerId']\r\n  this.orderObject = Object.assign({}, user); \r\n\r\n\r\n  console.log(\"deliverymode **\"+this.orderObject['deliveryMode'] )\r\n\r\n  this.modalReferenceOrderForm = this.modal.open(this.orderFormModal);\r\n\r\n  //console.log(\"order in EDIT this.orderObject **\"+JSON.stringify(this.orderObject))\r\n\r\n  console.log(\"this.customerId == \"+this.customerId)\r\n\r\n  //if(this.customerId)\r\n  //this.fetchAllOrderPrescriptions()  \r\n\r\n  let data ={customerId:this.customerId}\r\n  this.commonCodeDuringEdit()\r\n  console.log(\" fetch old prescription for \"+JSON.stringify(data))\r\n  this.dataService.fetchAllOrderPrescriptions(data).then((result:[]) => {        \r\n    this.customerOldPrescriptionListArr = []; \r\n\r\n    setTimeout(() => {\r\n      if(result){\r\n        for(var i in result){\r\n          let obj:any = result[i]\r\n          obj['selectValue'] = false\r\n          this.customerOldPrescriptionListArr.push(obj)\r\n\r\n        }\r\n      }  \r\n      this.loading = false\r\n   //   this.commonCodeDuringEdit()\r\n  },1000)\r\n  }, (err) => {\r\n\r\n    //this.commonCodeDuringEdit()\r\n    this.customerOldPrescriptionListArr = []; \r\n    this.loading = false;\r\n    console.log(err);\r\n  });\r\n \r\n  \r\n  \r\n}\r\n\r\n  reinitialise(){\r\n    this.searchByOrderDate = false\r\n    this.searchByOrderId = false\r\n    this.searchByCustomer = false\r\n    this.searchByStatus = false\r\n    this.orderDate = ''\r\n    this.customerId = ''\r\n    this.orderId = ''\r\n    this.orderStatus = ''\r\n    this.customerName = ''\r\n    this.allDynaFilter = null\r\n    this.fetchOrdersCount()\r\n    this.totalDocRecords = 0\r\n    this.fetchOrders()\r\n  }\r\n  reset(){\r\n    this.reinitialise()\r\n    this.toastr.successToastr('Filters reset, order list refreshed');\r\n  }\r\n  pageChanged(event){\r\n    console.log(\"****** this.event   ===== **\"+event)\r\n    this.pageNo = event\r\n    this.applyFilter()\r\n  }\r\nsearchByFilters(){\r\n  let dynaFilterArry = []\r\n  let dynaFilter = {}\r\n // let allDynaFilter = {}\r\n  if(this.searchByOrderDate && this.orderDate){\r\n    let converteddate = this.fromJsDateToLocationdateTimeFormat(this.orderDate)\r\n    dynaFilter['createdDate'] = converteddate\r\n    dynaFilterArry.push({createdDate:converteddate}) \r\n    console.log(\"converteddate **\"+converteddate) \r\n    //moment(new Date()).format('YYYY-MM-DD[T00:00:00.000Z]'\r\n\r\n    //var dateTime = new Date(this.orderDate);\r\n    /*\r\n    var dateTime1dayAgo = moment(this.orderDate,\"YYYY-MM-DD HH:mm:ss\").subtract(1,'d').format('YYYY-MM-DD[T00:00:00.000Z]');\r\n    var dateTime1dayLater = moment(this.orderDate,\"YYYY-MM-DD HH:mm:ss\").add(1,'days').format('YYYY-MM-DD[T00:00:00.000Z]');\r\n    dynaFilter['createdDate'] = {\"$gt\": dateTime1dayAgo}     \r\n    //console.log(\"this.orderDate **\"+converteddate)    \r\n    console.log(\"this.orderDate **\"+this.orderDate) \r\n    dynaFilterArry.push({createdDate:{\"$gt\": dateTime1dayAgo} })     \r\n    dynaFilterArry.push({createdDate:{\"$lt\": dateTime1dayLater} }) \r\n    */\r\n\r\n  }\r\n  if(this.searchByCustomer && this.customerId){\r\n    //dynaFilter['customerId'] = this.customerId   \r\n    dynaFilterArry.push({customerId:this.customerId }) \r\n  }\r\n  if(this.searchByOrderId && this.orderId){\r\n    //dynaFilter['orderId'] = this.orderId   \r\n    dynaFilterArry.push({orderId:this.orderId }) \r\n  }\r\n  if(this.searchByStatus && this.orderStatus){\r\n    //dynaFilter['status'] = this.orderStatus   \r\n    dynaFilterArry.push({status:this.orderStatus})    \r\n  }\r\n  this.allDynaFilter = {$and:dynaFilterArry} \r\n  \r\n  \r\n  this.fetchOrdersCount()  \r\n  this.fetchOrders()     \r\n  \r\n\r\n  this.closeSearchModal()\r\n  this.toastr.successToastr('Searching Done');\r\n          \r\n\r\n  \r\n}\r\ncloseMainModal() {\r\n     \r\n  if(this.modalReferenceOrderForm)\r\n    this.modalReferenceOrderForm.close();\r\n\r\n    this.fromOldImageList = false\r\n  \r\n}\r\n  userKindChange(){\r\n    this.pageNo = 1\r\n    \r\n    this.applyFilter()\r\n  }\r\n  applyFilter() {  \r\n    if(this.customerId != undefined && this.customerId && this.customerId != ''){\r\n      this.fetchOrderByCustomer = true\r\n    }else{\r\n      this.fetchOrderByCustomer = false\r\n    }\r\n\r\n    console.log(\"this.customerId \"+this.customerId)    \r\n        \r\n    this.fetchOrdersCount()  \r\n    this.fetchOrders()    \r\n    \r\n  }\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n \r\n  \r\ncustomerSelectEvent(item) {\r\n  if(item){\r\n  this.orderFormGroup.get('customerId').patchValue(item['_id']);\r\n  this.customerId = item['_id']\r\n\r\n  if(this.customerId){\r\n    this.loading = true\r\n    this.loadingCustomeMsg == \"Fetching old prescriptions, please wait..\"\r\n    this.fetchAllOrderPrescriptions()   \r\n  }\r\n  //console.log(\" inside customerSelectEvent \"+JSON.stringify(item))\r\n  }\r\n  // do something with selected item\r\n}\r\n\r\nonChangeCustomerSearch(val: string) {\r\n  //console.log(\" inside onChangePatientSearch val \"+val)\r\n // if(val && val.length >2 ){\r\n  let data = {name:val}\r\n  this.dataService.fetchAllCustomers(data).then((result:[]) => {\r\n    this.customerList = result.map(element => element)\r\n  }, (err) => {\r\n      //console.log(err);\r\n  });\r\n // }\r\n}\r\n\r\n\r\n\r\n  fetchOrdersCount(){\r\n  //  this.pageNo = 1\r\n  //  this.pageSize = 10\r\n   /* let data = {}\r\n    if(this.fetchOrderByCustomer){\r\n      data['fetchOrderByCustomer'] = true\r\n      data['customerId'] = this.customerId\r\n    }else{\r\n      data['fetchOrderByCustomer'] = false\r\n    }\r\n    this.dataService.fetchOrdersCount(data).then((result) => {\r\n        \r\n        console.log(\"****** fetchordersCount result   ===== **\"+JSON.stringify(result))\r\n      this.totalDocRecords = result;\r\n      console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n\r\n    */\r\n\r\n   let data = {pageNo:this.pageNo,perPage:this.pageSize,filter : this.allDynaFilter}\r\n   // this.fetchOrdersCount({filter : allDynaFilter})  \r\n    //this.fetchOrdersByFilters({filter : allDynaFilter})   \r\n    console.log(\" inside data \"+JSON.stringify(data))\r\n  \r\n    this.dataService.fetchOrdersByFilterCount(data).then((result) => {\r\n          \r\n      console.log(\"****** fetchordersCount result   ===== **\"+JSON.stringify(result))\r\n    this.totalDocRecords = result;\r\n    this.loading = false;\r\n\r\n    console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n  \r\n  }, (err) => {\r\n    this.loading = false;\r\n    console.log(err);\r\n  });\r\n  }\r\n \r\n   fetchAllOrderPrescriptions(){\r\n    \r\n    let data ={customerId:this.customerId}\r\n\r\n    console.log(\" fetch old prescription for \"+JSON.stringify(data))\r\n    this.dataService.fetchAllOrderPrescriptions(data).then((result:[]) => {        \r\n     \r\n     /* this.customerOldPrescriptionListArr = []; \r\n      if(this.customerOldPrescriptionListArr.length >0 ){\r\n        this.customerOldPrescriptionListArr = result.map(element => {        \r\n          //let obj = element \r\n         // element['selectValue'] = false\r\n\r\n          //return   element\r\n          return Object.assign({}, element, {\r\n            selectValue: false\r\n          })\r\n        \r\n        }\r\n        )\r\n      }\r\n      */\r\n\r\n     this.customerOldPrescriptionListArr = []; \r\n     if(result){\r\n       for(var i in result){\r\n         let obj:any = result[i]\r\n         obj['selectValue'] = false\r\n         this.customerOldPrescriptionListArr.push(obj)\r\n \r\n       }\r\n     }\r\n     //   console.log(\"****** this.customerOldPrescriptionListArr   ===== **\"+JSON.stringify(this.customerOldPrescriptionListArr))      \r\n        this.loading = false;\r\n  \r\n    }, (err) => {\r\n      this.customerOldPrescriptionListArr = []; \r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n  fetchOrders(){\r\n  //  this.pageNo = 1\r\n    //this.pageSize = 10\r\n   // let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    //data['customerId'] = this.customerId\r\n\r\n   // console.log(\"this.customerId   ===== **\"+this.customerId)\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize,filter : this.allDynaFilter}\r\n // this.fetchOrdersCount({filter : allDynaFilter})  \r\n  //this.fetchOrdersByFilters({filter : allDynaFilter})   \r\n  //console.log(\" inside data \"+JSON.stringify(data))\r\n  this.dataService.fetchOrdersByFilters(data).then((result:any) => {        \r\n    this.normalFiltereduserListArr = []; \r\n      //this.normalFiltereduserListArr = result.map(element => {        \r\n       // return   element\r\n     // })\r\n\r\n    for(var i in result){\r\n      let orderObj = result[i]\r\n     // if(!orderObj['deliveryMode'] || orderObj['deliveryMode'] == undefined ){\r\n    //    orderObj['deliveryMode'] = \"General\"\r\n    //  }\r\n\r\n     // console.log(\"****** orderObj   ===== **\"+JSON.stringify(orderObj))    \r\n      this.normalFiltereduserListArr.push(orderObj)\r\n    }\r\n\r\n\r\n    //  console.log(\"****** this.fetchOrdersByFilters   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))      \r\n      this.loading = false;\r\n\r\n  }, (err) => {\r\n    this.normalFiltereduserListArr = []; \r\n    this.loading = false;\r\n    console.log(err);\r\n  });\r\n        \r\n\r\n/*\r\n    if(this.fetchOrderByCustomer){\r\n      data['fetchOrderByCustomer'] = true\r\n      data['customerId'] = this.customerId\r\n    }else{\r\n      data['fetchOrderByCustomer'] = false\r\n    }\r\n    \r\n    this.dataService.fetchOrders(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = []; \r\n     // this.customerList = []\r\n        this.normalFiltereduserListArr = result.map(element => {\r\n          \r\n          return   element\r\n        })\r\n        console.log(\"****** this.fetchOrders   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n        \r\n\r\n       // this.normalFiltereduserListArr.forEach(function(order, index){\r\n         // console.log(\"****** active   ===== **\"+ order.active)\r\n       // })\r\n        \r\n        this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.normalFiltereduserListArr = []; \r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n*/\r\n  }\r\n  \r\n  updateStatus(value, userInfo) {\r\n   // userInfo.active = value\r\n  //  console.log(\"****** userInfo   ===== **\"+JSON.stringify(userInfo))\r\n  let data ={}\r\n  userInfo.active = !userInfo.active\r\n  console.log(\"******  userInfo.active   ===== **\"+userInfo.active )\r\n    \r\n      userInfo.orderId = userInfo._id\r\n      data['orderId'] = userInfo._id\r\n      data['active'] = userInfo.active\r\n      console.log(\"****** userInfo   ===== **\"+JSON.stringify(data))\r\n\r\n          this.dataService.updateOrder(data).then((result) => {\r\n          //  console.log(\"****** updateorder result   ===== **\"+JSON.stringify(result))\r\n          this.fetchOrders()\r\n            this.loading = false;\r\n      \r\n        }, (err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    \r\n    this.toastr.successToastr('Order record updated successfully');\r\n  }\r\n\r\n  \r\n}\r\n","<div>\r\n  <app-page-header [heading]=\"'Order'\" [icon]=\"'fa-user'\"></app-page-header>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\" *ngIf=\"user.role.doctor.order.create\">                          \r\n      <button type=\"button\" class=\"btn btn-dark\" (click)=\"openforAddOrderDialog()\">Add Order</button>\r\n      <button type=\"button\" class=\"ml-4 btn btn-dark\" (click)=\"gotoCustomerPage()\">Add Customer</button>\r\n      <button type=\"button\" *ngIf=\"fromCustomerPage\" class=\"ml-4 btn btn-dark\" (click)=\"openCustomerPage()\">Go Back</button>\r\n</div>\r\n\r\n\r\n<!--div class=\"col-md-12 text-right\" *ngIf=\"user.role.doctor.order.view\">    \r\n<button type=\"button\" class=\"btn btn-dark\" (click)=\"reset();\">Reset Filters</button>\r\n</div-->\r\n<div class=\"col-md-12 text-right\" *ngIf=\"user.role.doctor.order.view\">     \r\n  <i class=\"fa fa-filter customfiltericon m-10\" aria-hidden=\"true\" (click)=\"openSearchFilter()\"></i>                     \r\n  <i class=\"fa fa-refresh customfiltericon m-10\" (click)=\"reset();\" aria-hidden=\"true\"></i>\r\n  <!--button type=\"button\" class=\"btn btn-dark\" (click)=\"openSearchFilter()\">Search Filters</button-->\r\n\r\n</div>\r\n</div>\r\n\r\n<ng-template #enlargedImageModal let-close=\"close\">\r\n  <div class=\"modal-header py-1\">\r\n    <h4 class=\"modal-title headerTitle mb-0\">Enlarged Prescription View</h4>\r\n    \r\n    <button type=\"button\" class=\"close\" (click)=\"closeCustomModal();\">×</button>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n  <img src=\"{{enlargedPic}}\" class=\"para\"/>\r\n</div>\r\n</ng-template>\r\n<ng-template #enlargedPrescriptionModal let-close=\"close\">\r\n  <div class=\"modal-header py-1\">\r\n    <h4 class=\"modal-title headerTitle mb-0\">Enlarged View</h4>\r\n    \r\n    <button type=\"button\" class=\"close\" (click)=\"closeCustomModal2();\">×</button>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n  <img src=\"{{enlargedPrescPic}}\" class=\"para\"/>\r\n</div>\r\n</ng-template>\r\n\r\n          \r\n<ng-template #searFiltersModal let-close=\"close\">\r\n\r\n  <div class=\"modal-header py-1\">\r\n          <h4 class=\"modal-title headerTitle mb-0\">Search Filters</h4>\r\n          \r\n          <button type=\"button\" class=\"close\" (click)=\"closeSearchModal();\">×</button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n\r\n\r\n\r\n<!--div class=\"col-md-12 \"><label class=\"labelTitles\">Select Customer </label></div-->\r\n\r\n<!--select  [(ngModel)]=\"customerId\"  class=\"form-control\" (change)=       \"applyFilter()\">\r\n\r\n<option *ngFor=\"let custObj of customerList\" value=\"{{custObj._id}}\" class=\"labelValue\">{{custObj.name}}</option>\r\n</select-->\r\n\r\n\r\n<div (click)=\"enableSearchByOrderId()\" class=\"custombuttondiv\">\r\n  <label class=\"customwid labelTitles\">Order Id Filter</label>\r\n <span class=\"margincustom customwid\">\r\n <i class=\" fa fa-arrow-down text-right\" aria-hidden=\"true\" *ngIf=\"searchByOrderId\" ></i>\r\n <i class=\" fa fa-arrow-up text-right\" aria-hidden=\"true\" *ngIf=\"!searchByOrderId\" ></i>\r\n </span>\r\n\r\n</div>\r\n<div class=\"col-md-12\" *ngIf=\"searchByOrderId\"> \r\n  <input   class=\"form-control\" [(ngModel)]=\"orderId\"\r\n  placeholder=\"Enter Order Id\">\r\n  </div>\r\n  \r\n\r\n<div (click)=\"enableSearchByCutomer()\" class=\"custombuttondiv\">\r\n  <label class=\"customwid labelTitles\">Customer Filter </label>\r\n  <span class=\"margincustom customwid\">\r\n  <i class=\" fa fa-arrow-down text-right\" aria-hidden=\"true\" *ngIf=\"searchByCustomer\" ></i>\r\n  <i class=\" fa fa-arrow-up text-right\" aria-hidden=\"true\" *ngIf=\"!searchByCustomer\" ></i>\r\n</span>\r\n</div>\r\n      <div class=\"col-md-12\" *ngIf=\"searchByCustomer\">\r\n      <ng-autocomplete \r\n      [data]=\"customerList\"\r\n      placeHolder=\"Type In Customer Name Here\"\r\n      [(ngModel)] = \"customerName\"      \r\n      [searchKeyword]=\"keywordCustomer\"\r\n      (selected)='customerSelectEvent($event)'\r\n      (inputChanged)='onChangeCustomerSearch($event)'      \r\n      [itemTemplate]=\"itemTemplate\"\r\n      [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n      </ng-autocomplete>\r\n\r\n\r\n      <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n      <a [innerHTML]=\"item.name\"></a>\r\n      </ng-template>\r\n\r\n      <ng-template #notFoundTemplate let-notFound>\r\n      <div [innerHTML]=\"notFound\"></div>\r\n      </ng-template>\r\n\r\n      </div>\r\n\r\n\r\n      <div (click)=\"enableSearchByOrderDate()\" class=\"custombuttondiv\">\r\n         <label class=\"customwid labelTitles\">Order date Filter</label>\r\n        <span class=\"margincustom customwid\">\r\n        <i class=\" fa fa-arrow-down text-right\" aria-hidden=\"true\" *ngIf=\"searchByOrderDate\" ></i>\r\n        <i class=\" fa fa-arrow-up text-right\" aria-hidden=\"true\" *ngIf=\"!searchByOrderDate\" ></i>\r\n        </span>\r\n\r\n      </div>\r\n\r\n<div class=\"col-md-12\" *ngIf=\"searchByOrderDate\"> \r\n<input type=\"date\"   class=\"form-control\" [(ngModel)]=\"orderDate\"\r\nplaceholder=\"Enter Order date\">\r\n</div>\r\n\r\n<div (click)=\"enableSearchByStatus()\" class=\"custombuttondiv\">\r\n  \r\n\r\n  <label class=\" customwid labelTitles\">Status Filter</label>\r\n  <span class=\"margincustom customwid\">\r\n  <i class=\" fa fa-arrow-down text-right\" aria-hidden=\"true\" *ngIf=\"searchByStatus\" ></i>\r\n  <i class=\" fa fa-arrow-up text-right\" aria-hidden=\"true\" *ngIf=\"!searchByStatus\" ></i>\r\n\r\n</span>\r\n</div>\r\n<div class=\"col-md-12 \" *ngIf=\"searchByStatus\">         \r\n<select   [(ngModel)]=\"orderStatus\"  class=\"form-control\" name=\"status\"\r\n                    >                         \r\n                    <option value=\"OrderPlaced\" class=\"labelValue\">OrderPlaced</option>\r\n                    <option value=\"Confirmed\" class=\"labelValue\">Confirmed</option>\r\n                    <option value=\"Packaged\" class=\"labelValue\">Packaged</option>\r\n                    <option value=\"Shipped\" class=\"labelValue\">Shipped</option>                          \r\n                    <option value=\"Rejected\" class=\"labelValue\">Rejected</option>                          \r\n                </select>\r\n              </div>\r\n\r\n<!--div class=\"col-md-12 mt-4 text-center\"> \r\n<button type=\"button\" class=\"btn btn-dark\" (click)=\"applyFilter()\">Search Order</button>    \r\n</div-->\r\n\r\n    \r\n\r\n\r\n\r\n      \r\n\r\n\r\n   </div>\r\n   <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-primary text-left\" (click)=\"reset();\">Reset</button>\r\n      <button  type=\"button\" class=\"btn btn-primary \"\r\n          (click)=\"searchByFilters();\">Search</button>\r\n      <button type=\"button\" class=\"btn btn-primary text-right\" (click)=\"closeSearchModal();\">Cancel</button>\r\n  </div>\r\n\r\n\r\n</ng-template>\r\n\r\n      <div class=\"card-body table-responsive marginLeft\"> <span class=\"pb-3 \"><b> List of existing {{userKind}}s </b>  </span>\r\n        <table class=\"table table-bordered table-sm\">\r\n          <thead>\r\n          <tr>\r\n            <th>Order Id </th>\r\n              <th>Customer Name</th>\r\n              <th>Medicine Details</th>\r\n              \r\n              <th>Status</th>            \r\n              <th *ngIf=\"user.role.doctor.order.edit\">Enable/Disable</th>              \r\n              <th>Created Date</th>\r\n              <th *ngIf=\"user.role.doctor.order.edit\">Edit</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tbody *ngIf=\"normalFiltereduserListArr && normalFiltereduserListArr.length>0\">\r\n            \r\n              <tr class=\"{{obj.status | lowercase}}\"  *ngFor=\"let obj of normalFiltereduserListArr | paginate: { id:'fororder1', itemsPerPage: pageSize, currentPage: pageNo, totalItems: totalDocRecords }\">              \r\n         \r\n                  <td>{{obj?._id}}</td>                  \r\n                  <td>{{obj?.customer?.name}}</td>                  \r\n              <td >\r\n                \r\n                <table  class='table borderless'>\r\n                  <tr class=\"{{obj.status | lowercase}}\" *ngFor=\"let med of obj.medicineList\"><td class=\"customdiv\"><b>Name:</b></td><td>{{med?.medicineName}}</td><td>/</td><td class=\"customdiv\"><b>Qty:</b></td><td>{{med?.quantity}}</td><!--td>/</td><td class=\"customdiv\"><b>Mg:</b></td><td>{{med?.mg}}</td--></tr>\r\n                \r\n                </table>      \r\n\r\n              </td>              \r\n              \r\n              <td>{{obj?.status}}</td>\r\n              <!--td *ngIf=\"user.role.doctor.order.edit\"> \r\n                <span  *ngIf=\"obj.active\">Enabled</span>\r\n                <span *ngIf=\"!obj.active\">Disabled</span>\r\n            </td-->\r\n              <td *ngIf=\"user.role.doctor.order.edit\">               \r\n                <ui-switch [(ngModel)]=\"obj.active\" (change)=\"updateStatus($event, obj)\"></ui-switch>\r\n                    \r\n              </td>              \r\n<td >{{convertToHumanDate(obj.createdDate)}}</td>\r\n<!-- [disabled]=\"obj.status=='Confirmed'\"-->\r\n<td *ngIf=\"user.role.doctor.order && user.role.doctor.order.edit\" ><button class=\"btn btn-dark\" (click)=\"openForeditOrder(obj)\" [disabled]=\"obj.status=='Confirmed'\"> Edit </button></td>    \r\n\r\n            </tr>\r\n          </tbody>\r\n          <div class=\"col-md-12 text-left clearfix \">\r\n          <pagination-controls class=\"my-pagination marginLeft\"  id=\"fororder1\" \r\n               (pageChange)=\"pageChanged($event)\"\r\n                      (pageBoundsCorrection)=\"pageChanged($event)\"                      \r\n                      directionLinks=\"true\"               maxSize=\"9\"\r\n                      directionLinks=\"true\"\r\n                      autoHide=\"true\"\r\n                      responsive=\"true\"\r\n                      previousLabel=\"Prev\"\r\n                      nextLabel=\"Next\"\r\n                      screenReaderPaginationLabel=\"Pagination\"\r\n                      screenReaderPageLabel=\"page\"\r\n                      screenReaderCurrentLabel=\"You're on page\"></pagination-controls >\r\n          </div>\r\n          <tbody *ngIf=\"(normalFiltereduserListArr && normalFiltereduserListArr.length==0)\">\r\n              <tr>\r\n                <td colspan=\"7\" align = \"center\">No record available</td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n\r\n\r\n\r\n      <ng-template #orderFormModal let-close=\"close\">\r\n        \r\n        <form [formGroup]=\"orderFormGroup\" class=\"custom_timebox p-0\">\r\n            <div class=\"modal-header py-1\">\r\n                    <h4 class=\"modal-title headerTitle mb-0\">{{mode | titlecase}} Order</h4>\r\n                    <button type=\"button\" class=\"close\" (click)=\"closeMainModal();\">×</button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n                <div class=\"row m-4\" *ngIf = \"mode=='add'\">\r\n                  <div class=\"col-md-12\">\r\n                      <div class=\"form-group\">\r\n                          <label class=\"labelTitles\">Select Customer </label>\r\n                    \r\n                          <ng-autocomplete \r\n                          [data]=\"customerList\"\r\n                          [(ngModel)] = \"customerName\"      \r\n                          [searchKeyword]=\"keywordCustomer\"\r\n                          (selected)='customerSelectEvent($event)'\r\n                          (inputChanged)='onChangeCustomerSearch($event)'      \r\n                          [itemTemplate]=\"itemTemplate\"\r\n                          [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n                          </ng-autocomplete>\r\n                    \r\n                    \r\n                          <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n                          <a [innerHTML]=\"item.name\"></a>\r\n                          </ng-template>\r\n                    \r\n                          <ng-template #notFoundTemplate let-notFound>\r\n                          <div [innerHTML]=\"notFound\"></div>\r\n                          </ng-template>\r\n                    \r\n                          \r\n                         \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              \r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12\">\r\n                      <div class=\"form-group\">\r\n                          <label class=\"labelTitles\">Status </label>\r\n                          <div *ngIf=\"mode=='edit'\">\r\n                          <select (change)=\"checkStatusChange()\" #myname formControlName=\"status\"  [(ngModel)]=\"orderObject.status\"  class=\"form-control\" name=\"status\"\r\n                              >                         \r\n                              <option value=\"OrderPlaced\" class=\"labelValue\">OrderPlaced</option>\r\n                              <option value=\"Confirmed\" class=\"labelValue\">Confirmed</option>\r\n                              <option value=\"Packaged\" class=\"labelValue\">Packaged</option>\r\n                              <option value=\"Shipped\" class=\"labelValue\">Shipped</option>                          \r\n                              <option value=\"Rejected\" class=\"labelValue\">Rejected</option>                          \r\n                          </select>\r\n                        </div>\r\n                        <div *ngIf=\"mode=='add'\">\r\n                          <input class=\"form-control labelValue\"   disabled [(ngModel)]=\"orderObject.status\"   formControlName=\"status\" placeholder=\"OrderPlaced\">\r\n                        </div>\r\n                         \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n        \r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"labelTitles\">Delivery Mode </label>    \r\n                        \r\n                        <select formControlName=\"deliveryMode\"   class=\"form-control\" name=\"deliveryMode\" [(ngModel)]=\"orderObject.deliveryMode\"  (change)=\"checkDeliveryMode()\">                <!--\r\n                            <option value=\"Express\" class=\"labelValue\">Express</option>\r\n                            <option value=\"Express11\" class=\"labelValue\">Express11</option>\r\n                            <option value=\"Express12\" class=\"labelValue\">Express12</option>\r\n                            <option value=\"General\" class=\"labelValue\">General</option>\r\n                        -->\r\n                        <option  *ngFor=\"let delmode of delModeList\"   value=\"{{delmode.value}}\" class=\"labelValue\">{{delmode.name}}</option>\r\n                        </select>\r\n                        \r\n                    </div>\r\n                </div>\r\n              </div>\r\n              \r\n\r\n              <div style=\"border: 0; padding: 10;\" class=\"row marginTop\">\r\n                <div class=\"col-md-12 form-group\">\r\n                  <label for=\"email\" class=\"labelTitles\"><b>Upload prescription from storage device <span *ngIf=\"customerOldPrescriptionListArr && customerOldPrescriptionListArr.length > 0\" > <br>OR<br> just click a row on an old prescription from the list below </span> </b></label>\r\n              </div>\r\n                <div class=\"col-md-12 form-group marginTop\" (click)=\"enlargePic()\" >\r\n                \r\n                <div class=\"profile-image-wrapper\"  >\r\n                  <div class=\"profile-image\" [style.backgroundImage]=\"getPhoto('prescription') \" >\r\n                    <span class=\"edit-icon\" (click)=\"capturePhoto(null,'prescription')\">\r\n                      <!-- (click)=\"enlargePic()\"\r\n                      <i class=\"fa fa-plus\" aria-hidden=\"true\" *ngIf=\"mode=='add'\" ></i>\r\n                      <i class=\"fa fa-pencil-square-o\" *ngIf=\"mode=='edit'\" aria-hidden=\"true\" ></i>\r\n                     -->\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <input type=\"file\" name=\"files[]\" id=\"file-selector\" accept=\".jpg, .jpeg, .png\" (change)=\"capturePhoto($event,'prescription')\" />\r\n              </div>\r\n              </div>\r\n\r\n              <div class=\"card-body prescriptionlistclass table-responsive \"> <span class=\"pb-3 \"><b> Click on any row of old prescription from the list below </b>  </span>\r\n                <table class=\"table table-striped table-bordered table-sm\">\r\n                  <thead>\r\n                  <tr>\r\n        <th> </th>\r\n                    <!--th>ID</th-->\r\n                      <th>Image</th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                      <tbody *ngIf=\"customerOldPrescriptionListArr && customerOldPrescriptionListArr.length>0\">\r\n                    \r\n                      <tr *ngFor=\"let photo of customerOldPrescriptionListArr\" (click) =\"selectPrescription(photo)\">              \r\n                        <td> \r\n\r\n                          <div class=\"custom-control custom-radio customradio\">\r\n                            <input class=\"customradio\" type=\"radio\" name=\"mode\" [value]=\"photo.selectValue\" [(ngModel)]=\"photo.selectValue\" (click)=\"selectPrescription(photo)\" [checked]=\"photo.selectValue==true\">\r\n                          </div>\r\n            \r\n         </td>\r\n                      <!--td> {{obj?._id}} </td-->\r\n                      <td>\r\n                        <div class=\"oldprescription-image-wrapper\"  >\r\n                          <div class=\"oldprescription-image\" [style.backgroundImage]=\"getPhotoOldPrescription(photo)\" (click)=\"enlargePrescription(photo)\">\r\n                            \r\n                            \r\n                          </div>\r\n                        </div></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n              \r\n        <div formArrayName=\"medicineListItems\"\r\n            *ngFor=\"let medicine of getControls(); let i = index;\">\r\n\r\n                    <div [formGroupName]=\"i\">\r\n                      \r\n              <table class=\"table table-bordered table-sm mt-2\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Id </th>\r\n                    <th>Medicine Name</th>\r\n                    <th>Quantity</th>                    \r\n                </tr>\r\n                </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                        <td style=\"width: 10%\">{{i+1}}</td>\r\n                      <td style=\"width: 60%\">\r\n                        \r\n                       <tr class=\"customwidth\">\r\n                        <!--pattern=\"\\d{1,2}/\\d{1,2}/\\d{4}\"-->\r\n                        <div class=\"customwidth marginTop\">   \r\n                        \r\n                                \r\n                        <ng-autocomplete \r\n                        [data]=\"medicineArray\"\r\n                        placeHolder=\"Type In Medicine Name Here\"\r\n                        [searchKeyword]=\"keywordMedicine\"\r\n                        (selected)='medicineSelectEvent($event,i)'\r\n                        (inputChanged)='doctorMedcineSearch($event,i)'\r\n                        \r\n                        [itemTemplate]=\"itemTemplate\"\r\n                        [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n                      </ng-autocomplete>\r\n                   \r\n                      \r\n                      <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n                        <a [innerHTML]=\"item.name\"></a>\r\n                        </ng-template>\r\n                        <ng-template #notFoundTemplate let-notFound>\r\n                        <div [innerHTML]=\"notFound\"></div>\r\n                        </ng-template>\r\n                                                        \r\n                      </div>\r\n                      </tr>\r\n                      <tr >\r\n                          \r\n                          <input  disabled class=\" customwidth form-control\" formControlName=\"medicineName\"\r\n                          >\r\n                        </tr>\r\n                        \r\n                  </td>\r\n                      \r\n                  <td style=\"width: 30%\">\r\n                    <input   class=\"form-control\" formControlName=\"quantity\"\r\n                    placeholder=\"Quantity\">\r\n                    \r\n                  </td>\r\n                  \r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n                </div>\r\n\r\n          <div class=\"row text-right ml-2\">\r\n            <i class=\"fa fa-minus-circle customfiltericon m-10\" aria-hidden=\"true\" (click)=\"removeItem(i)\"><span class=\"reducetextforicon\">Remove</span></i>                     \r\n<!--\r\n          <button class=\"btn btn-dark\" (click)=\"removeItem(i)\"> Remove Medicine </button>-->\r\n          </div>\r\n  </div>\r\n\r\n  <!--Chosen name: {{ orderForm.controls.items.controls[i].controls.name.value }} -->\r\n\r\n\r\n\r\n<div class=\"col-md-12 text-right mt-4\">\r\n  <i class=\"fa fa-plus-circle customfiltericon m-10\" aria-hidden=\"true\" (click)=\"addItem()\"><span class=\"reducetextforicon\">Add</span></i>    \r\n  <!--\r\n  <button class=\"btn btn-dark\" (click)=\"addItem()\"> Add More Medicines </button>\r\n  -->\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n             </div>\r\n             <div class=\"modal-footer\">\r\n                <button [disabled]=\"!orderFormGroup.valid\" type=\"button\" class=\"btn btn-primary m-10\"\r\n                    (click)=\"save();\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"closeMainModal();\">Cancel</button>\r\n            </div>\r\n        \r\n        <p *ngIf=\"submitAttempt\" class=\"cutomeerrortext\">\r\n                \r\n         <span class=\"redcolor ml-2\"><i class=\"fa fas fa-exclamation\"></i><b>&nbsp;Fix The Error : </b></span> {{form_fill_failure_msg}}\r\n          \r\n        </p>\r\n        \r\n</form>\r\n</ng-template>\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n<div class=\"my-container\">\r\n  <ng-template #customLoadingTemplate>\r\n    \r\n            Please wait..fetching data\r\n    \r\n</ng-template>\r\n  <ngx-loading [show]=\"loading\" [config]=\"{ primaryColour: 'blue',secondaryColour:'red',fullScreenBackdrop:false}\" [template]=\"customLoadingTemplate\"></ngx-loading>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\n\r\nimport { OrderComponent } from './order.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\nimport { OrderRoutingModule } from './order-routing.module';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AutocompleteLibModule,\r\n    NgxPaginationModule,\r\n    OrderRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBorderRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [OrderComponent]\r\n})\r\nexport class OrderModule { }\r\n"],"sourceRoot":"webpack:///"}