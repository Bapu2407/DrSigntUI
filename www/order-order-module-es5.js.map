{"version":3,"sources":["webpack:///src/app/layout/order/order-routing.module.ts","webpack:///src/app/layout/order/order.component.ts","webpack:///src/app/layout/order/order.component.html","webpack:///src/app/layout/order/order.module.ts"],"names":["routes","path","component","OrderRoutingModule","forChild","imports","exports","value","OrderComponent","router","route","modal","toastr","_fb","dataService","loadingCustomeMsg","fromOldImageList","loading","isPrescriptionUploaded","showOldPrescription","allDynaFilter","patientList","customerList","states","keywordCustomer","fetchOrderByCustomer","orderList","fromCustomerPage","userKind","normalFiltereduserListArr","customerOldPrescriptionListArr","delModeList","items","pageSize","RECORDSIZE","pageNo","tempArray","searchByCustomer","searchByOrderDate","searchByOrderId","searchByStatus","keywordMedicine","orderObject","active","medicineList","medicineId","medicineName","quantity","mg","mrp","customerId","uploadedFile","uploadedFileURL","deliveryMode","status","medicineArray","b2bPrice","gst","hsnCode","vat","otherTax","discounts","medicineType","category","attendantList","orderObjectBase","openingMeridian","user","role","doctor","order","view","customerName","snapshot","paramMap","get","console","log","dynaFilterArry","undefined","$and","push","orderFormGroup","group","required","medicineListItems","array","createMedicineItem","controls","navigate","fromOrderPage","medicine","i","removeAt","item","at","patchValue","e","val","data","name","fetchAllMedicines","then","result","map","element","JSON","stringify","err","reinitialise","modalSearchFilerReference","open","searFiltersModal","dismiss","Object","assign","mode","modalReferenceOrderForm","orderFormModal","localStorage","getItem","fetchOrdersCount","fetchOrders","fetchAllOrderPrescriptions","fetchCustomers","fetchAllCustomersNotByName","valid","submitAttempt","validateFields","length","formObject","addOrder","commonAfterSaveCode","form_fill_failure_msg","successToastr","saveUploadedPrescription","updateOrder","message","errorToastr","orderPrescriptiondata","uploadPhotoOrderPrescription","addOrderPrescription","closeMainModal","setTimeout","image","enlargedPic","modalReferenceImage","enlargedImageModal","obj","uploadPhotoOrderPrescriptionURL","enlargedPrescPic","modalReferencePrescriptionImage","enlargedPrescriptionModal","selectValue","oldPresc","_id","error","photoType","event","reader","FileReader","onload","readerEvent","imageData","target","readAsDataURL","files","dateTimeArray","commonCodeDuringEdit","orderDate","orderId","orderStatus","totalDocRecords","applyFilter","dynaFilter","converteddate","fromJsDateToLocationdateTimeFormat","createdDate","closeSearchModal","close","pageOfItems","fetchAllCustomers","perPage","filter","fetchOrdersByFilterCount","fetchOrdersByFilters","orderObj","userInfo","pageChanged","selector","templateUrl","styleUrls","providers","OrderModule","forRoot","animationType","wanderingCubes","backdropBackgroundColour","backdropBorderRadius","primaryColour","secondaryColour","tertiaryColour","provide","useFactory","declarations"],"mappings":"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","file":"order-order-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { OrderComponent } from './order.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: OrderComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OrderRoutingModule { }\r\n","import { Component, OnInit, NgZone, ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion,NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router , ActivatedRoute} from '@angular/router';\r\nimport *  as moment from 'moment';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\nimport { Config } from '../../config';\r\n\r\n\r\nimport { BaseComponent } from 'src/BaseComponent';\r\nimport { FormBuilder, FormGroup, FormControl, Validators,FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-order',\r\n  templateUrl: './order.component.html',\r\n  styleUrls: ['./order.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class OrderComponent extends BaseComponent implements OnInit {\r\n  loadingCustomeMsg:any = \"Loading...\"\r\n  @ViewChild('myname') input: ElementRef;\r\n  @ViewChild('fileInputDemoPhoto') fileInputDemoPhoto :ElementRef;;\r\n  fromOldImageList:boolean = false\r\n  public loading:boolean = true;\r\n  public isPrescriptionUploaded = false\r\n  showOldPrescription:any = ''\r\n  public closeResult: string;\r\n  enlargedPic:any\r\n  enlargedPrescPic:any\r\n  allDynaFilter = null\r\n  patientList:any = []\r\n  customerList:any = []\r\n  orderStatus:string\r\n  orderId:string\r\n  orderDate:string\r\n  states = Config.states\r\n  keywordCustomer:string = \"name\"\r\n  fetchOrderByCustomer:boolean = false\r\n  orderList:any = []\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  fromCustomerPage:boolean = false\r\n  @ViewChild('acc') accordionComponent: NgbAccordion;\r\n  public userKind:string=\"order\"\r\n  normalFiltereduserListArr:any = [];\r\n  customerOldPrescriptionListArr:any = [];\r\n  \r\n  modalSearchFilerReference: NgbModalRef;\r\n  delModeList:any = [\r\n    {\"value\":\"Express\",\"name\":\"Express\"},\r\n    {\"value\":\"General\",\"name\":\"General\"}  ]\r\n\r\n  modalReferenceOrderForm: NgbModalRef;\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('orderFormModal') orderFormModal: TemplateRef<any>;\r\n   @ViewChild('searFiltersModal') searFiltersModal: TemplateRef<any>;\r\n   @ViewChild('enlargedImageModal') enlargedImageModal: TemplateRef<any>;\r\n   @ViewChild('enlargedPrescriptionModal') enlargedPrescriptionModal: TemplateRef<any>;\r\n\r\n   \r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  orderFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  customOrdertime : {\r\n    hour: 10,\r\n    minute: 20,\r\n\r\n};\r\nsearchByCustomer:boolean = false\r\nsearchByOrderDate:boolean = false\r\nsearchByOrderId:boolean = false\r\nsearchByStatus:boolean = false\r\n\r\n\r\nmedicineName:any\r\nkeywordMedicine = \"name\"\r\n  orderObject =  \r\n  {    \r\n    active : true,       \r\n    medicineList : [ \r\n      {\r\n        medicineId: '',             \r\n        medicineName : \"\",\r\n        quantity : \"\",\r\n        mg: '',\r\n        mrp:0,      \r\n        active:true,      \r\n        \"b2bPrice\" : \"\",\r\n        \"gst\" : \"0\",\r\n\r\n        \"hsnCode\" : \"0\",\r\n        \"vat\" : \"0\",\r\n        \"otherTax\" : \"0\",\r\n        \"discounts\" : \"0\",\r\n        \"medicineType\" : \"\",      \r\n        \"category\" : \"\"\r\n                \r\n      }\r\n    ],    \r\n    customerId : \"\",\r\n    uploadedFile:\"\",\r\n    uploadedFileURL:\"\",\r\n    deliveryMode:\"General\",\r\n    status : \"OrderPlaced\"    \r\n  }\r\n\r\n  medicineArray:any = [[{\r\n    medicineId: '',             \r\n    medicineName : \"\",\r\n    quantity : \"\",\r\n    mg: '',\r\n    mrp:\"\",      \r\n    active:true,      \r\n    b2bPrice : \"\",\r\n    gst : \"0\",\r\n    hsnCode : \"0\",\r\n    vat : \"0\",\r\n    otherTax : \"0\",\r\n    discounts : \"0\",\r\n    medicineType : \"\",      \r\n    category : \"\"\r\n            \r\n  }]]\r\n  attendantList:any = []\r\n  orderObjectBase =  \r\n  {    \r\n    active : true,       \r\n    medicineList : [ \r\n      {\r\n        medicineId: '',             \r\n        medicineName : \"\",\r\n        quantity : \"\",\r\n        mg: '',\r\n        mrp:0,      \r\n        active:true,      \r\n        \"b2bPrice\" : \"\",\r\n        \"gst\" : \"0\",\r\n        \"hsnCode\" : \"0\",\r\n        \"vat\" : \"0\",\r\n        \"otherTax\" : \"0\",\r\n        \"discounts\" : \"0\",\r\n        \"medicineType\" : \"\",      \r\n        \"category\" : \"\"\r\n                \r\n      }\r\n    ],    \r\n    customerId : \"\",\r\n    uploadedFile:\"\",\r\n    uploadedFileURL:\"\",\r\n    deliveryMode:\"General\",\r\n    status : \"OrderPlaced\"    \r\n  }\r\n  customer:any\r\n  customerName:any\r\n  customerId:any\r\n  doctorName:any\r\n  medicineListItems: FormArray;\r\n  openingMeridian : boolean = true;\r\n\r\n  constructor(    \r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess   \r\n    \r\n  ) {\r\n    super(router)\r\n  //  this.customOrdertime.hour = 9\r\n   // this.customOrdertime.minute = 10\r\n\r\n    if(!this.user.role.doctor.order.view){\r\n      return\r\n    }\r\n\r\n    this.customerName =  this.route.snapshot.paramMap.get('name');\r\n\r\n    this.fromCustomerPage = this.route.snapshot.paramMap.get('fromCustomerPage') =='fromCustomerPage';\r\n    console.log(\"this.customerName  **\"+this.customerName ) \r\n    //this.customerId =  \"5ee8ea1158ea514eec6f6e18\"//this.route.snapshot.paramMap.get('customerId');\r\n\r\n    let dynaFilterArry = []\r\n    this.customerId = this.route.snapshot.paramMap.get('customerId');\r\n    console.log(\"this.customerId  **\"+this.customerId ) \r\n    if(this.customerId != undefined && this.customerId && this.customerId != ''){\r\n      this.fetchOrderByCustomer = true\r\n      this.allDynaFilter = {$and:dynaFilterArry} \r\n      dynaFilterArry.push({customerId:this.customerId }) \r\n    }else{\r\n      this.fetchOrderByCustomer = false\r\n    }\r\n\r\n    this.orderFormGroup = _fb.group({\r\n      customerId: new FormControl(this.customerId, Validators.required),      \r\n      uploadedFile: new FormControl(this.orderObject.uploadedFile, Validators.required),\r\n      //medicineName: new FormControl(this.orderObject.attendantID, Validators.required),\r\n      //quantity: new FormControl(this.orderObject.name, Validators.required),\r\n      status: new FormControl(this.orderObject.status, Validators.required),      \r\n      deliveryMode: new FormControl(this.orderObject.deliveryMode, Validators.required),      \r\n      medicineListItems: this._fb.array([this.createMedicineItem()])\r\n    });\r\n    //this.createMedicineItem()\r\n\r\n    //this.orderFormGroup.valueChanges.subscribe(data => console.log('form changes', data));\r\n   // this.loading = false;    \r\n    //this.fetchOrders()   \r\n    \r\n  }\r\n\r\n  getControls() {\r\n    return (this.orderFormGroup.get('medicineListItems') as FormArray).controls;\r\n  }\r\n  gotoCustomerPage(){\r\n    this.router.navigate([\"/customer\",{fromOrderPage:'fromOrderPage'}]);\r\n  }\r\n  openCustomerPage(){\r\n    this.router.navigate([\"/customer\"]);\r\n  }\r\n  createMedicineItem(): FormGroup {\r\n    return this._fb.group({\r\n      medicineId: new FormControl(),\r\n      medicineName: new FormControl(),\r\n      mg: new FormControl(),\r\n      quantity: new FormControl(),      \r\n      mrp:new FormControl(),            \r\n       b2bPrice : new FormControl() ,\r\n       hsnCode : new FormControl(),\r\n        gst : new FormControl(),\r\n        //vat : \"0\",\r\n        otherTax : new FormControl(),\r\n        discounts : new FormControl(),\r\n        medicineType : new FormControl(),      \r\n        category : new FormControl()\r\n    });\r\n  }\r\n\r\n  createMedicineItemDuringEdit(medicine): FormGroup {\r\n    return this._fb.group({\r\n      medicineId: new FormControl(),\r\n      medicineName: new FormControl(),\r\n      mg: new FormControl(),\r\n      quantity: new FormControl(),      \r\n      mrp:new FormControl(),            \r\n       b2bPrice : new FormControl() ,\r\n       hsnCode : new FormControl(),\r\n        gst : new FormControl(),\r\n        //vat : \"0\",\r\n        otherTax : new FormControl(),\r\n        discounts : new FormControl(),\r\n        medicineType : new FormControl(),      \r\n        category : new FormControl()\r\n    });\r\n  }\r\n\r\n/*\r\n  ngAfterViewInit(){\r\n    this.dataService.fetchAllPatients().then((result:[]) => {\r\n      this.patientList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n\r\n   \r\n  }\r\n  */\r\n  getOrder(){\r\n\r\n  }\r\n  addItem(): void {\r\n    this.medicineListItems = this.orderFormGroup.get('medicineListItems') as FormArray;\r\n    this.medicineListItems.push(this.createMedicineItem());\r\n  }\r\n\r\n  removeItem(i){\r\n\r\n     this.medicineListItems = this.orderFormGroup.get('medicineListItems') as FormArray;\r\n    this.medicineListItems.removeAt(i)  \r\n\r\n  }\r\n\r\n  medicineSelectEvent(item,i) {\r\n    if(item){\r\n    //this.orderFormGroup.get('medicineID').patchValue(item['_id']);\r\n   // this.orderObject.medicineList[i].medicineId = item['_id']\r\n   try{\r\n     //if(item['_id'] != null && item['_id'])\r\n    this.medicineListItems.at(i).get('medicineId').patchValue(item['_id']);\r\n\r\n    //if(item['name'] != null && item['name'] )\r\n    this.medicineListItems.at(i).get('medicineName').patchValue(item['name']);\r\n\r\n    console.log(\"his.medicineListItems.at(i).get('medicineName') \"+this.medicineListItems.at(i).get('medicineName').value)\r\n \r\n    //if(item['mrp'] != null && item['mrp'] )\r\n    this.medicineListItems.at(i).get('mrp').patchValue(item['mrp']);\r\n\r\n \r\n    \r\n //   if(item['active'] != null && item['active'])\r\n   // this.medicineListItems.at(i).get('active').patchValue(item['active']);\r\n    \r\n    //if(item['b2bPrice'] != null && item['b2bPrice'] )\r\n    this.medicineListItems.at(i).get('b2bPrice').patchValue(item['b2bPrice']);\r\n    \r\n    //if(item['gst'] != null && item['gst'] )\r\n    this.medicineListItems.at(i).get('gst').patchValue(item['gst']);\r\n    \r\n\r\n    console.log(\"his.medicineListItems.at(i).get('gst') \"+this.medicineListItems.at(i).get('gst').value)\r\n\r\n    //if(item['hsnCode'] != null && item['hsnCode'])\r\n    this.medicineListItems.at(i).get('hsnCode').patchValue(item['hsnCode']);\r\n\r\n    //if(item['vat'] != null && item['vat'] && this.medicineListItems.at(i).get('vat'))\r\n    //this.medicineListItems.at(i).get('vat').patchValue(item['vat']);\r\n    \r\n    if(item['otherTax'] != null && item['otherTax'])\r\n    this.medicineListItems.at(i).get('otherTax').patchValue(item['otherTax']);\r\n    \r\n    if(item['discounts'] != null && item['discounts'] )\r\n    this.medicineListItems.at(i).get('discounts').patchValue(item['discounts']);\r\n    \r\n    if(item['medicineType'] != null && item['medicineType'] )\r\n    this.medicineListItems.at(i).get('medicineType').patchValue(item['medicineType']);\r\n    \r\n    if(item['category'] != null && item['category'] )\r\n     this.medicineListItems.at(i).get('category').patchValue(item['category']);\r\n\r\n    \r\n   // this.orderObject.medicineList[i].medicineName = item['medicineName']\r\n\r\n    \r\n   //console.log(\" this.medicineListItems \"+JSON.stringify(this.medicineListItems))\r\n\r\n   console.log(\" this.medicineListItems \"+this.medicineListItems)\r\n    } catch(e){\r\n     console.log(e)\r\n   }\r\n    }\r\n    // do something with selected item\r\n  }\r\n \r\n  doctorMedcineSearch(val: string,i) {\r\n    console.log(\" inside onChangePatientSearch val \"+val)\r\n\r\n    console.log(\" component count \"+ i)\r\n\r\n   // if(val && val.length >2 ){\r\n    let data = {name:val}\r\n\r\n    //let medicineArray = []\r\n    this.dataService.fetchAllMedicines(data).then((result:[]) => {\r\n      this.medicineArray = result.map(element => element)\r\n      //this.medicineArray[i] = medicineArray\r\n      //this.medicineArray = medicineArray.map(element => element)\r\n      console.log(\"this.medicineArray==\"+JSON.stringify(this.medicineArray[i]))\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n   // }\r\n  }\r\n  enableSearchByCutomer(){\r\n    this.searchByCustomer = !this.searchByCustomer\r\n  }\r\n  enableSearchByOrderDate(){\r\n    this.searchByOrderDate = !this.searchByOrderDate\r\n  }\r\n  enableSearchByOrderId(){\r\n    this.searchByOrderId = !this.searchByOrderId\r\n  }\r\n  enableSearchByStatus(){\r\n    this.searchByStatus = !this.searchByStatus\r\n  }\r\n  openSearchFilter(){\r\n    //this.reset()\r\n    this.reinitialise()\r\n    this.modalSearchFilerReference = this.modal.open(this.searFiltersModal); \r\n  }\r\n  closeSearchModal(){\r\n    //if(this.modalSearchFilerReference)\r\n    //this.modalSearchFilerReference.close();\r\n    if(this.modalSearchFilerReference)\r\n    this.modalSearchFilerReference.dismiss()\r\n  }\r\n \r\n   openforAddOrderDialog(){\r\n\r\ntry{\r\n     //this.medicineListItems.push({})\r\n     this.orderObject = Object.assign({}, this.orderObjectBase); \r\n\r\n    this.fromOldImageList = true\r\n\r\n    this.customerOldPrescriptionListArr = []; \r\n    this.customerId = ''\r\n    /*\r\n    if(this.customerId == undefined || !this.customerId || this.customerId == ''){\r\n     alert(\"Please select a customer first, from the dropdown\")\r\n     return\r\n    }\r\n    */\r\n    this.mode = \"add\"\r\n    this.modalReferenceOrderForm = this.modal.open(this.orderFormModal);\r\n    \r\n    this.orderFormGroup = this._fb.group({\r\n      customerId: new FormControl(this.customerId, Validators.required),      \r\n      uploadedFile: new FormControl(this.orderObject.uploadedFile, Validators.required),\r\n      deliveryMode: new FormControl(this.orderObject.deliveryMode, Validators.required),  \r\n      //medicineName: new FormControl(this.orderObject.attendantID, Validators.required),\r\n      //quantity: new FormControl(this.orderObject.name, Validators.required),\r\n      status: new FormControl(this.orderObject.status, Validators.required),      \r\n      medicineListItems: this._fb.array([ this.createMedicineItem() ])\r\n    });\r\n    this.medicineListItems = this.orderFormGroup.get('medicineListItems') as FormArray;\r\n   // \r\n  }catch(e){\r\n    console.log(e)\r\n  }\r\n \r\n  }\r\n  getPatient(){\r\n\r\n  }\r\n \r\n  ngOnInit(){\r\n\r\n\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n    \r\n    this.fetchOrdersCount()  \r\n    this.fetchOrders()   \r\n\r\n    if(this.customerId)\r\n    this.fetchAllOrderPrescriptions()   \r\n    \r\n    if(this.customerId == undefined || !this.customerId || this.customerId == ''){\r\n      this.fetchCustomers() \r\n    }\r\n    \r\n //   this.items = Array(150).fill(0).map((x, i) => ({ id: (i + 1), name: `Item ${i + 1}`})\r\n  };\r\n\r\n  fetchCustomers(){\r\n    //  this.pageNo = 1\r\n      //this.pageSize = 10\r\n      \r\n      this.dataService.fetchAllCustomersNotByName().then((result:[]) => {\r\n          \r\n        //this.customerList = [];      \r\n  \r\n          //this.customerList = result.map(element => element)\r\n         // if(!this.fromCustomerPage){\r\n           // this.customerId = this.customerList[0]\r\n         // }\r\n  \r\n      }, (err) => {\r\n        this.loading = false;\r\n        console.log(err);\r\n      });\r\n  \r\n    }\r\n    \r\n  save(){\r\n\r\n    if(!this.orderFormGroup.valid){\r\n        this.submitAttempt = true;        \r\n        this.validateFields(this.orderFormGroup.controls)                   \r\n        return; \r\n    } \r\n   let medicineListItems = []\r\n    for(var i = 0 ; i< this.medicineListItems.length ; i++){      \r\n        let formObject = this.medicineListItems.at(i)              \r\n        //let medicineObj = formObject.get('medicineName').value\r\n         medicineListItems.push({\r\n          medicineId: formObject.get('medicineId')?.value,\r\n          medicineName: formObject.get('medicineName')?.value,\r\n          mg: formObject.get('mg')?.value,\r\n          quantity: formObject.get('quantity')?.value,\r\n          mrp: formObject.get('mrp')?.value,\r\n          active: formObject.get('active')?.value,\r\n          b2bPrice: formObject.get('b2bPrice')?.value,\r\n          gst: formObject.get('gst')?.value,\r\n          vat: formObject.get('vat')?.value,\r\n          otherTax: formObject.get('otherTax')?.value,\r\n          discounts: formObject.get('discounts')?.value,\r\n          medicineType: formObject.get('medicineType')?.value,\r\n          category: formObject.get('category')?.value\r\n          \r\n         })        \r\n        \r\n\r\n    }\r\n    this.orderObject.medicineList = []\r\n    this.orderObject.medicineList = medicineListItems\r\n    this.orderObject.customerId = this.customerId\r\n  \r\n\r\n//    console.log(\"order this.orderObject **\"+JSON.stringify(this.orderObject))\r\n//this.fromOldImageList = false\r\n\r\n    if(this.mode == \"add\"){\r\n      delete this.orderObject['customer']\r\n      console.log(\"this.orderObject for add == \"+JSON.stringify(this.orderObject))\r\n      this.dataService.addOrder(this.orderObject).then((result) => {                \r\n        //  console.log(\"result after adduser == \"+JSON.stringify(result))\r\n        this.commonAfterSaveCode()\r\n          this.reinitialise()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('New order is added successfully');\r\n          this.saveUploadedPrescription()\r\n\r\n        //  this.fromOldImageList = false\r\n\r\n      }, (err) => {        \r\n      console.log(err);\r\n      });\r\n      \r\n    }if(this.mode == \"edit\"){\r\n      this.loading = true;\r\n      //delete this.orderObject['patient']\r\n      delete this.orderObject['customer']\r\n      this.orderObject['orderId'] = this.orderObject['_id']\r\n      console.log(\"this.orderObject for EDIT  == \"+JSON.stringify(this.orderObject))\r\n      this.dataService.updateOrder(this.orderObject).then((result) => {\r\n          //console.log(\"****** updateorder result   ===== **\"+JSON.stringify(result))\r\n          \r\n          this.commonAfterSaveCode()\r\n          if(this.isPrescriptionUploaded){\r\n            this.saveUploadedPrescription()\r\n            this.isPrescriptionUploaded = false\r\n          }\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('order is updated successfully'); \r\n         // this.fromOldImageList = false\r\n      }, (err) => {\r\n        //this.mode = \"add\"\r\n        this.loading = false;\r\n        if(err && err.message)\r\n          this.toastr.errorToastr(err.message); \r\n        console.log(err);\r\n      });\r\n      \r\n    }\r\n    \r\n}\r\nsaveUploadedPrescription(){\r\n  let orderPrescriptiondata = {customerId:this.orderObject.customerId,uploadPhotoOrderPrescription:this.orderObject.uploadedFile}\r\n          this.dataService.addOrderPrescription(orderPrescriptiondata).then((result) => {                \r\n              \r\n          }, (err) => {        \r\n          console.log(err);\r\n          });\r\n          \r\n}\r\ncommonAfterSaveCode(){\r\n  this.customerId = ''\r\n          this.loading = true;\r\n         // this.normalFiltereduserListArr = []; \r\n          this.closeMainModal()\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.mode = \"add\"   \r\n            this.fetchOrders()\r\n            \r\n        }, 2000);\r\n      \r\n}\r\nenlargePic(){\r\n  let image  = this.orderObject.uploadedFileURL   \r\n  this.enlargedPic = image\r\n  //this.enlargedPrescPic = ''\r\n  //this.closeCustomModal2()\r\n  this.modalReferenceImage = this.modal.open(this.enlargedImageModal); \r\n}\r\nenlargePrescription(obj){\r\n  //this.closeCustomModal()\r\n  //this.enlargedPic = ''\r\n  let image  = obj.uploadPhotoOrderPrescriptionURL    \r\n  this.enlargedPrescPic = image\r\n  this.modalReferencePrescriptionImage = this.modal.open(this.enlargedPrescriptionModal); \r\n}\r\n\r\nselectPrescription(obj){\r\n // let image  = obj.uploadPhotoOrderPrescriptionURL    \r\n  //  this.enlargedPrescPic = image\r\n  //this.modalReferenceImage = this.modal.open(this.enlargedPrescriptionModal); \r\n  \r\n  obj.selectValue = true\r\n\r\n  for ( var i in  this.customerOldPrescriptionListArr){\r\n    let oldPresc = this.customerOldPrescriptionListArr[i]\r\n    if(oldPresc._id == obj._id){\r\n      continue\r\n    }else{\r\n      //this.customerOldPrescriptionListArr.splice(i, 1);\r\n      oldPresc.selectValue = false\r\n      //this.customerOldPrescriptionListArr.splice(i, 1,oldPresc);\r\n    }\r\n  }\r\n  this.orderObject.uploadedFile = obj.uploadPhotoOrderPrescription\r\n  this.orderObject.uploadedFile = \"data:image/jpg;base64,\"+this.orderObject.uploadedFile\r\n  this.orderObject.uploadedFileURL = obj.uploadPhotoOrderPrescriptionURL\r\n\r\n  this.orderFormGroup.get('uploadedFile').patchValue(this.orderObject.uploadedFile);\r\n\r\n  console.log(\"obj ==\"+JSON.stringify(obj))\r\n  //this.getPhotoOLDPrescription(obj.uploadPhotoOrderPrescriptionURL)\r\n  //this.showOldPrescription  = 'url(' + obj.uploadPhotoOrderPrescriptionURL + ')'\r\n}\r\n\r\ngetPhotoOLDPrescription(image) {\r\n  try {\r\n    \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   console.log('Error', error);\r\n  }\r\n}\r\n\r\ngetPhoto(photoType) {\r\n  try {\r\n    console.log(\"this.orderObject.uploadedFileURL == \"+this.orderObject.uploadedFileURL)\r\n    //let image  = this.orderObject.uploadedFileURL\r\n\r\n    //let image  = this.orderObject.uploadedFile\r\n    \r\n    let image  = this.orderObject.uploadedFileURL\r\n\r\n\r\n    //alert(this.fromOldImageList)\r\n\r\n    this.enlargedPic = image\r\n    if(this.fromOldImageList){\r\n      //image  = \"data:image/jpg;base64,\"+this.orderObject.uploadedFile\r\n      image  = this.orderObject.uploadedFile      \r\n      this.enlargedPic = this.orderObject.uploadedFile\r\n    }    \r\n    //this.fromOldImageList = false\r\n\r\n\r\n   //let  image = \"data:image/jpg;base64,\"+this.orderObject.uploadedFile\r\n   /* if(photoType == 'prescription'){\r\n      image  = this.orderObject.uploadedFileURL\r\n      if(!image && this.orderObject.uploadedFile){\r\n        image = \"data:image/jpg;base64,\"+this.orderObject.uploadedFile\r\n\r\n        this.orderObject.uploadedFile = \"data:image/jpg;base64,\"+this.orderObject.uploadedFile\r\n\r\n      }\r\n    }*/\r\n    \r\n   \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   console.log('Error', error);\r\n  }\r\n}\r\ncapturePhoto(event,photoType){\r\n  //  alert(\"I am clicked\")\r\n    let reader = new FileReader();\r\n\r\n    this.fromOldImageList = true\r\n\r\n    \r\n    try {\r\n      reader.onload = (readerEvent) => {\r\n\r\n        let imageData = (readerEvent.target as any).result;\r\n        if(photoType == 'prescription')\r\n          this.orderObject.uploadedFile =  imageData;\r\n\r\n          //var dataURL = reader.result;\r\n          //this.orderObject.uploadedFileURL  =  imageData;\r\n\r\n          this.orderFormGroup.get('uploadedFile').patchValue(this.orderObject.uploadedFile);\r\n          this.isPrescriptionUploaded = true\r\n\r\n      };\r\n\r\n      \r\n//      this.orderObject.uploadedFileURL = event.target.files[0]\r\n\r\n      console.log(\"capturePhoto this.orderObject.uploadedFileURL == \"+this.orderObject.uploadedFileURL)\r\n\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n\r\n      \r\n    }\r\n    catch(error) {\r\n     console.log('Error', error);\r\n    }\r\n  }\r\n\r\ngetPhotoOldPrescription(obj) {\r\n  try {\r\n    let image  = obj.uploadPhotoOrderPrescriptionURL\r\n    \r\n      image  = obj.uploadPhotoOrderPrescriptionURL\r\n      /*if(obj && obj.uploadPhotoOrderPrescription){\r\n        image = obj.uploadPhotoOrderPrescription\r\n      }\r\n    */\r\n  //  this.enlargedPic = image\r\n   \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   // //console.log('Error', error);\r\n  }\r\n}\r\n\r\ncommonCodeDuringEdit(){\r\n\r\n  \r\n  this.orderFormGroup = this._fb.group({\r\n    customerId: new FormControl(this.customerId, Validators.required),      \r\n    uploadedFile: new FormControl(this.orderObject.uploadedFile, Validators.required),\r\n    deliveryMode: new FormControl(this.orderObject.deliveryMode, Validators.required),      \r\n    //medicineName: new FormControl(this.orderObject.attendantID, Validators.required),\r\n    //quantity: new FormControl(this.orderObject.name, Validators.required),\r\n    status: new FormControl(this.orderObject.status, Validators.required),      \r\n    medicineListItems: this._fb.array([ this.createMedicineItem() ])\r\n  });\r\n  \r\n\r\n  this.orderFormGroup.get('uploadedFile').patchValue(this.orderObject.uploadedFile);\r\n\r\n  //console.log(\"this.orderObject ==\"+JSON.stringify(this.orderObject))\r\n  let dateTimeArray = []\r\n  this.medicineListItems = this.orderFormGroup.get('medicineListItems') as FormArray;\r\n  this.medicineListItems.removeAt(0)  \r\n\r\n\r\n    \r\n  for(var i in this.orderObject.medicineList){\r\n      let medicine = this.orderObject.medicineList[i]      \r\n     // dateTimeArray.push({date:date,time:time})\r\n    //this.medicineListItems.push({date:date,time:time})\r\n    \r\n    this.medicineListItems.push(this._fb.group({      \r\n          medicineId: medicine.medicineId,             \r\n          medicineName : medicine.medicineName,\r\n          quantity : medicine.quantity,\r\n          mg: medicine.mg  ,\r\n          mrp: medicine.mrp,\r\n          active: medicine.active,\r\n          b2bPrice: medicine.b2bPrice,\r\n          gst: medicine.gst,          \r\n          hsnCode: medicine.hsnCode,\r\n          otherTax: medicine.otherTax,\r\n          discounts: medicine.discounts,\r\n          medicineType: medicine.medicineType,\r\n          category: medicine.category                          \r\n      \r\n    }))\r\n  }\r\n\r\n  console.log(\"this.medicineListItems **\"+this.medicineListItems.length)\r\n  \r\n  \r\n  //this.orderObject.attendantID = earlierAttendent\r\n\r\n  //this.orderFormGroup.get('medicineListItems').patchValue(dateTimeArray)\r\n  //addItem\r\n //setTimeout(() => {\r\n  //try{\r\n  //  this.modalReferenceOrderForm = this.modal.open(this.orderFormModal);\r\n  //}catch(error){\r\n//    console.log(error)\r\n  //}\r\n//}, 2000);\r\n  //setTimeout(() => {\r\n   \r\n}\r\ncheckStatusChange(){\r\n  console.log(\"status **\"+this.orderObject['status'] )\r\n}\r\ncheckDeliveryMode(){\r\n  console.log(\"deliverymode **\"+this.orderObject.deliveryMode )\r\n}\r\n openForeditOrder(user){\r\n\r\n  //this.input.nativeElement.focus();\r\n  //this.fromOldImageList = false\r\n\r\n//  console.log(\"order object **\"+JSON.stringify(user))\r\n  //this.modalReferenceOrderForm = this.modal.open(this.orderFormModal);\r\n\r\n  this.loading = true\r\n  this.loadingCustomeMsg == \"Fetching old prescriptions, please wait..\"\r\n  this.mode = \"edit\"\r\n  \r\n  //this.orderObject = Object.assign({}, this.orderObjectBase); \r\n  this.customerId = user['customerId']\r\n  this.orderObject = Object.assign({}, user); \r\n\r\n\r\n  console.log(\"deliverymode **\"+this.orderObject['deliveryMode'] )\r\n\r\n  this.modalReferenceOrderForm = this.modal.open(this.orderFormModal);\r\n\r\n  //console.log(\"order in EDIT this.orderObject **\"+JSON.stringify(this.orderObject))\r\n\r\n  console.log(\"this.customerId == \"+this.customerId)\r\n\r\n  //if(this.customerId)\r\n  //this.fetchAllOrderPrescriptions()  \r\n\r\n  let data ={customerId:this.customerId}\r\n  this.commonCodeDuringEdit()\r\n  console.log(\" fetch old prescription for \"+JSON.stringify(data))\r\n  this.dataService.fetchAllOrderPrescriptions(data).then((result:[]) => {        \r\n    this.customerOldPrescriptionListArr = []; \r\n\r\n    setTimeout(() => {\r\n      if(result){\r\n        for(var i in result){\r\n          let obj:any = result[i]\r\n          obj['selectValue'] = false\r\n          this.customerOldPrescriptionListArr.push(obj)\r\n\r\n        }\r\n      }  \r\n      this.loading = false\r\n   //   this.commonCodeDuringEdit()\r\n  },1000)\r\n  }, (err) => {\r\n\r\n    //this.commonCodeDuringEdit()\r\n    this.customerOldPrescriptionListArr = []; \r\n    this.loading = false;\r\n    console.log(err);\r\n  });\r\n \r\n  \r\n  \r\n}\r\n\r\n  reinitialise(){\r\n    this.searchByOrderDate = false\r\n    this.searchByOrderId = false\r\n    this.searchByCustomer = false\r\n    this.searchByStatus = false\r\n    this.orderDate = ''\r\n    this.customerId = ''\r\n    this.orderId = ''\r\n    this.orderStatus = ''\r\n    this.customerName = ''\r\n    this.allDynaFilter = null\r\n    this.fetchOrdersCount()\r\n    this.totalDocRecords = 0\r\n    this.fetchOrders()\r\n  }\r\n  reset(){\r\n    this.reinitialise()\r\n    this.toastr.successToastr('Filters reset, order list refreshed');\r\n  }\r\n  pageChanged(event){\r\n    console.log(\"****** this.event   ===== **\"+event)\r\n    this.pageNo = event\r\n    this.applyFilter()\r\n  }\r\nsearchByFilters(){\r\n  let dynaFilterArry = []\r\n  let dynaFilter = {}\r\n // let allDynaFilter = {}\r\n  if(this.searchByOrderDate && this.orderDate){\r\n    let converteddate = this.fromJsDateToLocationdateTimeFormat(this.orderDate)\r\n    dynaFilter['createdDate'] = converteddate\r\n    dynaFilterArry.push({createdDate:converteddate}) \r\n    console.log(\"converteddate **\"+converteddate) \r\n    //moment(new Date()).format('YYYY-MM-DD[T00:00:00.000Z]'\r\n\r\n    //var dateTime = new Date(this.orderDate);\r\n    /*\r\n    var dateTime1dayAgo = moment(this.orderDate,\"YYYY-MM-DD HH:mm:ss\").subtract(1,'d').format('YYYY-MM-DD[T00:00:00.000Z]');\r\n    var dateTime1dayLater = moment(this.orderDate,\"YYYY-MM-DD HH:mm:ss\").add(1,'days').format('YYYY-MM-DD[T00:00:00.000Z]');\r\n    dynaFilter['createdDate'] = {\"$gt\": dateTime1dayAgo}     \r\n    //console.log(\"this.orderDate **\"+converteddate)    \r\n    console.log(\"this.orderDate **\"+this.orderDate) \r\n    dynaFilterArry.push({createdDate:{\"$gt\": dateTime1dayAgo} })     \r\n    dynaFilterArry.push({createdDate:{\"$lt\": dateTime1dayLater} }) \r\n    */\r\n\r\n  }\r\n  if(this.searchByCustomer && this.customerId){\r\n    //dynaFilter['customerId'] = this.customerId   \r\n    dynaFilterArry.push({customerId:this.customerId }) \r\n  }\r\n  if(this.searchByOrderId && this.orderId){\r\n    //dynaFilter['orderId'] = this.orderId   \r\n    dynaFilterArry.push({orderId:this.orderId }) \r\n  }\r\n  if(this.searchByStatus && this.orderStatus){\r\n    //dynaFilter['status'] = this.orderStatus   \r\n    dynaFilterArry.push({status:this.orderStatus})    \r\n  }\r\n  this.allDynaFilter = {$and:dynaFilterArry} \r\n  \r\n  \r\n  this.fetchOrdersCount()  \r\n  this.fetchOrders()     \r\n  \r\n\r\n  this.closeSearchModal()\r\n  this.toastr.successToastr('Searching Done');\r\n          \r\n\r\n  \r\n}\r\ncloseMainModal() {\r\n     \r\n  if(this.modalReferenceOrderForm)\r\n    this.modalReferenceOrderForm.close();\r\n\r\n    this.fromOldImageList = false\r\n  \r\n}\r\n  userKindChange(){\r\n    this.pageNo = 1\r\n    \r\n    this.applyFilter()\r\n  }\r\n  applyFilter() {  \r\n    if(this.customerId != undefined && this.customerId && this.customerId != ''){\r\n      this.fetchOrderByCustomer = true\r\n    }else{\r\n      this.fetchOrderByCustomer = false\r\n    }\r\n\r\n    console.log(\"this.customerId \"+this.customerId)    \r\n        \r\n    this.fetchOrdersCount()  \r\n    this.fetchOrders()    \r\n    \r\n  }\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n \r\n  \r\ncustomerSelectEvent(item) {\r\n  if(item){\r\n  this.orderFormGroup.get('customerId').patchValue(item['_id']);\r\n  this.customerId = item['_id']\r\n\r\n  if(this.customerId){\r\n    this.loading = true\r\n    this.loadingCustomeMsg == \"Fetching old prescriptions, please wait..\"\r\n    this.fetchAllOrderPrescriptions()   \r\n  }\r\n  //console.log(\" inside customerSelectEvent \"+JSON.stringify(item))\r\n  }\r\n  // do something with selected item\r\n}\r\n\r\nonChangeCustomerSearch(val: string) {\r\n  //console.log(\" inside onChangePatientSearch val \"+val)\r\n // if(val && val.length >2 ){\r\n  let data = {name:val}\r\n  this.dataService.fetchAllCustomers(data).then((result:[]) => {\r\n    this.customerList = result.map(element => element)\r\n  }, (err) => {\r\n      //console.log(err);\r\n  });\r\n // }\r\n}\r\n\r\n\r\n\r\n  fetchOrdersCount(){\r\n  //  this.pageNo = 1\r\n  //  this.pageSize = 10\r\n   /* let data = {}\r\n    if(this.fetchOrderByCustomer){\r\n      data['fetchOrderByCustomer'] = true\r\n      data['customerId'] = this.customerId\r\n    }else{\r\n      data['fetchOrderByCustomer'] = false\r\n    }\r\n    this.dataService.fetchOrdersCount(data).then((result) => {\r\n        \r\n        console.log(\"****** fetchordersCount result   ===== **\"+JSON.stringify(result))\r\n      this.totalDocRecords = result;\r\n      console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n\r\n    */\r\n\r\n   let data = {pageNo:this.pageNo,perPage:this.pageSize,filter : this.allDynaFilter}\r\n   // this.fetchOrdersCount({filter : allDynaFilter})  \r\n    //this.fetchOrdersByFilters({filter : allDynaFilter})   \r\n    console.log(\" inside data \"+JSON.stringify(data))\r\n  \r\n    this.dataService.fetchOrdersByFilterCount(data).then((result) => {\r\n          \r\n      console.log(\"****** fetchordersCount result   ===== **\"+JSON.stringify(result))\r\n    this.totalDocRecords = result;\r\n    this.loading = false;\r\n\r\n    console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n  \r\n  }, (err) => {\r\n    this.loading = false;\r\n    console.log(err);\r\n  });\r\n  }\r\n \r\n   fetchAllOrderPrescriptions(){\r\n    \r\n    let data ={customerId:this.customerId}\r\n\r\n    console.log(\" fetch old prescription for \"+JSON.stringify(data))\r\n    this.dataService.fetchAllOrderPrescriptions(data).then((result:[]) => {        \r\n     \r\n     /* this.customerOldPrescriptionListArr = []; \r\n      if(this.customerOldPrescriptionListArr.length >0 ){\r\n        this.customerOldPrescriptionListArr = result.map(element => {        \r\n          //let obj = element \r\n         // element['selectValue'] = false\r\n\r\n          //return   element\r\n          return Object.assign({}, element, {\r\n            selectValue: false\r\n          })\r\n        \r\n        }\r\n        )\r\n      }\r\n      */\r\n\r\n     this.customerOldPrescriptionListArr = []; \r\n     if(result){\r\n       for(var i in result){\r\n         let obj:any = result[i]\r\n         obj['selectValue'] = false\r\n         this.customerOldPrescriptionListArr.push(obj)\r\n \r\n       }\r\n     }\r\n     //   console.log(\"****** this.customerOldPrescriptionListArr   ===== **\"+JSON.stringify(this.customerOldPrescriptionListArr))      \r\n        this.loading = false;\r\n  \r\n    }, (err) => {\r\n      this.customerOldPrescriptionListArr = []; \r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n  fetchOrders(){\r\n  //  this.pageNo = 1\r\n    //this.pageSize = 10\r\n   // let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    //data['customerId'] = this.customerId\r\n\r\n   // console.log(\"this.customerId   ===== **\"+this.customerId)\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize,filter : this.allDynaFilter}\r\n // this.fetchOrdersCount({filter : allDynaFilter})  \r\n  //this.fetchOrdersByFilters({filter : allDynaFilter})   \r\n  //console.log(\" inside data \"+JSON.stringify(data))\r\n  this.dataService.fetchOrdersByFilters(data).then((result:any) => {        \r\n    this.normalFiltereduserListArr = []; \r\n      //this.normalFiltereduserListArr = result.map(element => {        \r\n       // return   element\r\n     // })\r\n\r\n    for(var i in result){\r\n      let orderObj = result[i]\r\n     // if(!orderObj['deliveryMode'] || orderObj['deliveryMode'] == undefined ){\r\n    //    orderObj['deliveryMode'] = \"General\"\r\n    //  }\r\n\r\n     // console.log(\"****** orderObj   ===== **\"+JSON.stringify(orderObj))    \r\n      this.normalFiltereduserListArr.push(orderObj)\r\n    }\r\n\r\n\r\n    //  console.log(\"****** this.fetchOrdersByFilters   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))      \r\n      this.loading = false;\r\n\r\n  }, (err) => {\r\n    this.normalFiltereduserListArr = []; \r\n    this.loading = false;\r\n    console.log(err);\r\n  });\r\n        \r\n\r\n/*\r\n    if(this.fetchOrderByCustomer){\r\n      data['fetchOrderByCustomer'] = true\r\n      data['customerId'] = this.customerId\r\n    }else{\r\n      data['fetchOrderByCustomer'] = false\r\n    }\r\n    \r\n    this.dataService.fetchOrders(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = []; \r\n     // this.customerList = []\r\n        this.normalFiltereduserListArr = result.map(element => {\r\n          \r\n          return   element\r\n        })\r\n        console.log(\"****** this.fetchOrders   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n        \r\n\r\n       // this.normalFiltereduserListArr.forEach(function(order, index){\r\n         // console.log(\"****** active   ===== **\"+ order.active)\r\n       // })\r\n        \r\n        this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.normalFiltereduserListArr = []; \r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n*/\r\n  }\r\n  \r\n  updateStatus(value, userInfo) {\r\n   // userInfo.active = value\r\n  //  console.log(\"****** userInfo   ===== **\"+JSON.stringify(userInfo))\r\n  let data ={}\r\n  userInfo.active = !userInfo.active\r\n  console.log(\"******  userInfo.active   ===== **\"+userInfo.active )\r\n    \r\n      userInfo.orderId = userInfo._id\r\n      data['orderId'] = userInfo._id\r\n      data['active'] = userInfo.active\r\n      console.log(\"****** userInfo   ===== **\"+JSON.stringify(data))\r\n\r\n          this.dataService.updateOrder(data).then((result) => {\r\n          //  console.log(\"****** updateorder result   ===== **\"+JSON.stringify(result))\r\n          this.fetchOrders()\r\n            this.loading = false;\r\n      \r\n        }, (err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    \r\n    this.toastr.successToastr('Order record updated successfully');\r\n  }\r\n\r\n  \r\n}\r\n","<div>\r\n  <app-page-header [heading]=\"'Order'\" [icon]=\"'fa-user'\"></app-page-header>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\" *ngIf=\"user.role.doctor.order.create\">                          \r\n      <button type=\"button\" class=\"btn btn-dark\" (click)=\"openforAddOrderDialog()\">Add Order</button>\r\n      <button type=\"button\" class=\"ml-4 btn btn-dark\" (click)=\"gotoCustomerPage()\">Add Customer</button>\r\n      <button type=\"button\" *ngIf=\"fromCustomerPage\" class=\"ml-4 btn btn-dark\" (click)=\"openCustomerPage()\">Go Back</button>\r\n</div>\r\n\r\n\r\n<!--div class=\"col-md-12 text-right\" *ngIf=\"user.role.doctor.order.view\">    \r\n<button type=\"button\" class=\"btn btn-dark\" (click)=\"reset();\">Reset Filters</button>\r\n</div-->\r\n<div class=\"col-md-12 text-right\" *ngIf=\"user.role.doctor.order.view\">     \r\n  <i class=\"fa fa-filter customfiltericon m-10\" aria-hidden=\"true\" (click)=\"openSearchFilter()\"></i>                     \r\n  <i class=\"fa fa-refresh customfiltericon m-10\" (click)=\"reset();\" aria-hidden=\"true\"></i>\r\n  <!--button type=\"button\" class=\"btn btn-dark\" (click)=\"openSearchFilter()\">Search Filters</button-->\r\n\r\n</div>\r\n</div>\r\n\r\n<ng-template #enlargedImageModal let-close=\"close\">\r\n  <div class=\"modal-header py-1\">\r\n    <h4 class=\"modal-title headerTitle mb-0\">Enlarged Prescription View</h4>\r\n    \r\n    <button type=\"button\" class=\"close\" (click)=\"closeCustomModal();\">×</button>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n  <img src=\"{{enlargedPic}}\" class=\"para\"/>\r\n</div>\r\n</ng-template>\r\n<ng-template #enlargedPrescriptionModal let-close=\"close\">\r\n  <div class=\"modal-header py-1\">\r\n    <h4 class=\"modal-title headerTitle mb-0\">Enlarged View</h4>\r\n    \r\n    <button type=\"button\" class=\"close\" (click)=\"closeCustomModal2();\">×</button>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n  <img src=\"{{enlargedPrescPic}}\" class=\"para\"/>\r\n</div>\r\n</ng-template>\r\n\r\n          \r\n<ng-template #searFiltersModal let-close=\"close\">\r\n\r\n  <div class=\"modal-header py-1\">\r\n          <h4 class=\"modal-title headerTitle mb-0\">Search Filters</h4>\r\n          \r\n          <button type=\"button\" class=\"close\" (click)=\"closeSearchModal();\">×</button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n\r\n\r\n\r\n<!--div class=\"col-md-12 \"><label class=\"labelTitles\">Select Customer </label></div-->\r\n\r\n<!--select  [(ngModel)]=\"customerId\"  class=\"form-control\" (change)=       \"applyFilter()\">\r\n\r\n<option *ngFor=\"let custObj of customerList\" value=\"{{custObj._id}}\" class=\"labelValue\">{{custObj.name}}</option>\r\n</select-->\r\n\r\n\r\n<div (click)=\"enableSearchByOrderId()\" class=\"custombuttondiv\">\r\n  <label class=\"customwid labelTitles\">Order Id Filter</label>\r\n <span class=\"margincustom customwid\">\r\n <i class=\" fa fa-arrow-down text-right\" aria-hidden=\"true\" *ngIf=\"searchByOrderId\" ></i>\r\n <i class=\" fa fa-arrow-up text-right\" aria-hidden=\"true\" *ngIf=\"!searchByOrderId\" ></i>\r\n </span>\r\n\r\n</div>\r\n<div class=\"col-md-12\" *ngIf=\"searchByOrderId\"> \r\n  <input   class=\"form-control\" [(ngModel)]=\"orderId\"\r\n  placeholder=\"Enter Order Id\">\r\n  </div>\r\n  \r\n\r\n<div (click)=\"enableSearchByCutomer()\" class=\"custombuttondiv\">\r\n  <label class=\"customwid labelTitles\">Customer Filter </label>\r\n  <span class=\"margincustom customwid\">\r\n  <i class=\" fa fa-arrow-down text-right\" aria-hidden=\"true\" *ngIf=\"searchByCustomer\" ></i>\r\n  <i class=\" fa fa-arrow-up text-right\" aria-hidden=\"true\" *ngIf=\"!searchByCustomer\" ></i>\r\n</span>\r\n</div>\r\n      <div class=\"col-md-12\" *ngIf=\"searchByCustomer\">\r\n      <ng-autocomplete \r\n      [data]=\"customerList\"\r\n      placeHolder=\"Type In Customer Name Here\"\r\n      [(ngModel)] = \"customerName\"      \r\n      [searchKeyword]=\"keywordCustomer\"\r\n      (selected)='customerSelectEvent($event)'\r\n      (inputChanged)='onChangeCustomerSearch($event)'      \r\n      [itemTemplate]=\"itemTemplate\"\r\n      [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n      </ng-autocomplete>\r\n\r\n\r\n      <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n      <a [innerHTML]=\"item.name\"></a>\r\n      </ng-template>\r\n\r\n      <ng-template #notFoundTemplate let-notFound>\r\n      <div [innerHTML]=\"notFound\"></div>\r\n      </ng-template>\r\n\r\n      </div>\r\n\r\n\r\n      <div (click)=\"enableSearchByOrderDate()\" class=\"custombuttondiv\">\r\n         <label class=\"customwid labelTitles\">Order date Filter</label>\r\n        <span class=\"margincustom customwid\">\r\n        <i class=\" fa fa-arrow-down text-right\" aria-hidden=\"true\" *ngIf=\"searchByOrderDate\" ></i>\r\n        <i class=\" fa fa-arrow-up text-right\" aria-hidden=\"true\" *ngIf=\"!searchByOrderDate\" ></i>\r\n        </span>\r\n\r\n      </div>\r\n\r\n<div class=\"col-md-12\" *ngIf=\"searchByOrderDate\"> \r\n<input type=\"date\"   class=\"form-control\" [(ngModel)]=\"orderDate\"\r\nplaceholder=\"Enter Order date\">\r\n</div>\r\n\r\n<div (click)=\"enableSearchByStatus()\" class=\"custombuttondiv\">\r\n  \r\n\r\n  <label class=\" customwid labelTitles\">Status Filter</label>\r\n  <span class=\"margincustom customwid\">\r\n  <i class=\" fa fa-arrow-down text-right\" aria-hidden=\"true\" *ngIf=\"searchByStatus\" ></i>\r\n  <i class=\" fa fa-arrow-up text-right\" aria-hidden=\"true\" *ngIf=\"!searchByStatus\" ></i>\r\n\r\n</span>\r\n</div>\r\n<div class=\"col-md-12 \" *ngIf=\"searchByStatus\">         \r\n<select   [(ngModel)]=\"orderStatus\"  class=\"form-control\" name=\"status\"\r\n                    >                         \r\n                    <option value=\"OrderPlaced\" class=\"labelValue\">OrderPlaced</option>\r\n                    <option value=\"Confirmed\" class=\"labelValue\">Confirmed</option>\r\n                    <option value=\"Packaged\" class=\"labelValue\">Packaged</option>\r\n                    <option value=\"Shipped\" class=\"labelValue\">Shipped</option>                          \r\n                    <option value=\"Rejected\" class=\"labelValue\">Rejected</option>                          \r\n                </select>\r\n              </div>\r\n\r\n<!--div class=\"col-md-12 mt-4 text-center\"> \r\n<button type=\"button\" class=\"btn btn-dark\" (click)=\"applyFilter()\">Search Order</button>    \r\n</div-->\r\n\r\n    \r\n\r\n\r\n\r\n      \r\n\r\n\r\n   </div>\r\n   <div class=\"modal-footer\">\r\n    <button type=\"button\" class=\"btn btn-primary text-left\" (click)=\"reset();\">Reset</button>\r\n      <button  type=\"button\" class=\"btn btn-primary \"\r\n          (click)=\"searchByFilters();\">Search</button>\r\n      <button type=\"button\" class=\"btn btn-primary text-right\" (click)=\"closeSearchModal();\">Cancel</button>\r\n  </div>\r\n\r\n\r\n</ng-template>\r\n\r\n      <div class=\"card-body table-responsive marginLeft\"> <span class=\"pb-3 \"><b> List of existing {{userKind}}s </b>  </span>\r\n        <table class=\"table table-bordered table-sm\">\r\n          <thead>\r\n          <tr>\r\n            <th>Order Id </th>\r\n              <th>Customer Name</th>\r\n              <th>Medicine Details</th>\r\n              \r\n              <th>Status</th>            \r\n              <th *ngIf=\"user.role.doctor.order.edit\">Enable/Disable</th>              \r\n              <th>Created Date</th>\r\n              <th *ngIf=\"user.role.doctor.order.edit\">Edit</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tbody *ngIf=\"normalFiltereduserListArr && normalFiltereduserListArr.length>0\">\r\n            \r\n              <tr class=\"{{obj.status | lowercase}}\"  *ngFor=\"let obj of normalFiltereduserListArr | paginate: { id:'fororder1', itemsPerPage: pageSize, currentPage: pageNo, totalItems: totalDocRecords }\">              \r\n         \r\n                  <td>{{obj?._id}}</td>                  \r\n                  <td>{{obj?.customer?.name}}</td>                  \r\n              <td >\r\n                \r\n                <table  class='table borderless'>\r\n                  <tr class=\"{{obj.status | lowercase}}\" *ngFor=\"let med of obj.medicineList\"><td class=\"customdiv\"><b>Name:</b></td><td>{{med?.medicineName}}</td><td>/</td><td class=\"customdiv\"><b>Qty:</b></td><td>{{med?.quantity}}</td><!--td>/</td><td class=\"customdiv\"><b>Mg:</b></td><td>{{med?.mg}}</td--></tr>\r\n                \r\n                </table>      \r\n\r\n              </td>              \r\n              \r\n              <td>{{obj?.status}}</td>\r\n              <!--td *ngIf=\"user.role.doctor.order.edit\"> \r\n                <span  *ngIf=\"obj.active\">Enabled</span>\r\n                <span *ngIf=\"!obj.active\">Disabled</span>\r\n            </td-->\r\n              <td *ngIf=\"user.role.doctor.order.edit\">               \r\n                <ui-switch [(ngModel)]=\"obj.active\" (change)=\"updateStatus($event, obj)\"></ui-switch>\r\n                    \r\n              </td>              \r\n<td >{{convertToHumanDate(obj.createdDate)}}</td>\r\n<!-- [disabled]=\"obj.status=='Confirmed'\"-->\r\n<td *ngIf=\"user.role.doctor.order && user.role.doctor.order.edit\" ><button class=\"btn btn-dark\" (click)=\"openForeditOrder(obj)\" [disabled]=\"obj.status=='Confirmed'\"> Edit </button></td>    \r\n\r\n            </tr>\r\n          </tbody>\r\n          <div class=\"col-md-12 text-left clearfix \">\r\n          <pagination-controls class=\"my-pagination marginLeft\"  id=\"fororder1\" \r\n               (pageChange)=\"pageChanged($event)\"\r\n                      (pageBoundsCorrection)=\"pageChanged($event)\"                      \r\n                      directionLinks=\"true\"               maxSize=\"9\"\r\n                      directionLinks=\"true\"\r\n                      autoHide=\"true\"\r\n                      responsive=\"true\"\r\n                      previousLabel=\"Prev\"\r\n                      nextLabel=\"Next\"\r\n                      screenReaderPaginationLabel=\"Pagination\"\r\n                      screenReaderPageLabel=\"page\"\r\n                      screenReaderCurrentLabel=\"You're on page\"></pagination-controls >\r\n          </div>\r\n          <tbody *ngIf=\"(normalFiltereduserListArr && normalFiltereduserListArr.length==0)\">\r\n              <tr>\r\n                <td colspan=\"7\" align = \"center\">No record available</td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n      \r\n\r\n\r\n\r\n      <ng-template #orderFormModal let-close=\"close\">\r\n        \r\n        <form [formGroup]=\"orderFormGroup\" class=\"custom_timebox p-0\">\r\n            <div class=\"modal-header py-1\">\r\n                    <h4 class=\"modal-title headerTitle mb-0\">{{mode | titlecase}} Order</h4>\r\n                    <button type=\"button\" class=\"close\" (click)=\"closeMainModal();\">×</button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n\r\n                <div class=\"row m-4\" *ngIf = \"mode=='add'\">\r\n                  <div class=\"col-md-12\">\r\n                      <div class=\"form-group\">\r\n                          <label class=\"labelTitles\">Select Customer </label>\r\n                    \r\n                          <ng-autocomplete \r\n                          [data]=\"customerList\"\r\n                          [(ngModel)] = \"customerName\"      \r\n                          [searchKeyword]=\"keywordCustomer\"\r\n                          (selected)='customerSelectEvent($event)'\r\n                          (inputChanged)='onChangeCustomerSearch($event)'      \r\n                          [itemTemplate]=\"itemTemplate\"\r\n                          [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n                          </ng-autocomplete>\r\n                    \r\n                    \r\n                          <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n                          <a [innerHTML]=\"item.name\"></a>\r\n                          </ng-template>\r\n                    \r\n                          <ng-template #notFoundTemplate let-notFound>\r\n                          <div [innerHTML]=\"notFound\"></div>\r\n                          </ng-template>\r\n                    \r\n                          \r\n                         \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              \r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12\">\r\n                      <div class=\"form-group\">\r\n                          <label class=\"labelTitles\">Status </label>\r\n                          <div *ngIf=\"mode=='edit'\">\r\n                          <select (change)=\"checkStatusChange()\" #myname formControlName=\"status\"  [(ngModel)]=\"orderObject.status\"  class=\"form-control\" name=\"status\"\r\n                              >                         \r\n                              <option value=\"OrderPlaced\" class=\"labelValue\">OrderPlaced</option>\r\n                              <option value=\"Confirmed\" class=\"labelValue\">Confirmed</option>\r\n                              <option value=\"Packaged\" class=\"labelValue\">Packaged</option>\r\n                              <option value=\"Shipped\" class=\"labelValue\">Shipped</option>                          \r\n                              <option value=\"Rejected\" class=\"labelValue\">Rejected</option>                          \r\n                          </select>\r\n                        </div>\r\n                        <div *ngIf=\"mode=='add'\">\r\n                          <input class=\"form-control labelValue\"   disabled [(ngModel)]=\"orderObject.status\"   formControlName=\"status\" placeholder=\"OrderPlaced\">\r\n                        </div>\r\n                         \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n        \r\n              <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"labelTitles\">Delivery Mode </label>    \r\n                        \r\n                        <select formControlName=\"deliveryMode\"   class=\"form-control\" name=\"deliveryMode\" [(ngModel)]=\"orderObject.deliveryMode\"  (change)=\"checkDeliveryMode()\">                <!--\r\n                            <option value=\"Express\" class=\"labelValue\">Express</option>\r\n                            <option value=\"Express11\" class=\"labelValue\">Express11</option>\r\n                            <option value=\"Express12\" class=\"labelValue\">Express12</option>\r\n                            <option value=\"General\" class=\"labelValue\">General</option>\r\n                        -->\r\n                        <option  *ngFor=\"let delmode of delModeList\"   value=\"{{delmode.value}}\" class=\"labelValue\">{{delmode.name}}</option>\r\n                        </select>\r\n                        \r\n                    </div>\r\n                </div>\r\n              </div>\r\n              \r\n\r\n              <div style=\"border: 0; padding: 10;\" class=\"row marginTop\">\r\n                <div class=\"col-md-12 form-group\">\r\n                  <label for=\"email\" class=\"labelTitles\"><b>Upload prescription from storage device <span *ngIf=\"customerOldPrescriptionListArr && customerOldPrescriptionListArr.length > 0\" > <br>OR<br> just click a row on an old prescription from the list below </span> </b></label>\r\n              </div>\r\n                <div class=\"col-md-12 form-group marginTop\" (click)=\"enlargePic()\" >\r\n                \r\n                <div class=\"profile-image-wrapper\"  >\r\n                  <div class=\"profile-image\" [style.backgroundImage]=\"getPhoto('prescription') \" >\r\n                    <span class=\"edit-icon\" (click)=\"capturePhoto(null,'prescription')\">\r\n                      <!-- (click)=\"enlargePic()\"\r\n                      <i class=\"fa fa-plus\" aria-hidden=\"true\" *ngIf=\"mode=='add'\" ></i>\r\n                      <i class=\"fa fa-pencil-square-o\" *ngIf=\"mode=='edit'\" aria-hidden=\"true\" ></i>\r\n                     -->\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <input type=\"file\" name=\"files[]\" id=\"file-selector\" accept=\".jpg, .jpeg, .png\" (change)=\"capturePhoto($event,'prescription')\" />\r\n              </div>\r\n              </div>\r\n\r\n              <div class=\"card-body prescriptionlistclass table-responsive \"> <span class=\"pb-3 \"><b> Click on any row of old prescription from the list below </b>  </span>\r\n                <table class=\"table table-striped table-bordered table-sm\">\r\n                  <thead>\r\n                  <tr>\r\n        <th> </th>\r\n                    <!--th>ID</th-->\r\n                      <th>Image</th>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                      <tbody *ngIf=\"customerOldPrescriptionListArr && customerOldPrescriptionListArr.length>0\">\r\n                    \r\n                      <tr *ngFor=\"let photo of customerOldPrescriptionListArr\" (click) =\"selectPrescription(photo)\">              \r\n                        <td> \r\n\r\n                          <div class=\"custom-control custom-radio customradio\">\r\n                            <input class=\"customradio\" type=\"radio\" name=\"mode\" [value]=\"photo.selectValue\" [(ngModel)]=\"photo.selectValue\" (click)=\"selectPrescription(photo)\" [checked]=\"photo.selectValue==true\">\r\n                          </div>\r\n            \r\n         </td>\r\n                      <!--td> {{obj?._id}} </td-->\r\n                      <td>\r\n                        <div class=\"oldprescription-image-wrapper\"  >\r\n                          <div class=\"oldprescription-image\" [style.backgroundImage]=\"getPhotoOldPrescription(photo)\" (click)=\"enlargePrescription(photo)\">\r\n                            \r\n                            \r\n                          </div>\r\n                        </div></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n\r\n              \r\n        <div formArrayName=\"medicineListItems\"\r\n            *ngFor=\"let medicine of getControls(); let i = index;\">\r\n\r\n                    <div [formGroupName]=\"i\">\r\n                      \r\n              <table class=\"table table-bordered table-sm mt-2\">\r\n                <thead>\r\n                <tr>\r\n                    <th>Id </th>\r\n                    <th>Medicine Name</th>\r\n                    <th>Quantity</th>                    \r\n                </tr>\r\n                </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                        <td style=\"width: 10%\">{{i+1}}</td>\r\n                      <td style=\"width: 60%\">\r\n                        \r\n                       <tr class=\"customwidth\">\r\n                        <!--pattern=\"\\d{1,2}/\\d{1,2}/\\d{4}\"-->\r\n                        <div class=\"customwidth marginTop\">   \r\n                        \r\n                                \r\n                        <ng-autocomplete \r\n                        [data]=\"medicineArray\"\r\n                        placeHolder=\"Type In Medicine Name Here\"\r\n                        [searchKeyword]=\"keywordMedicine\"\r\n                        (selected)='medicineSelectEvent($event,i)'\r\n                        (inputChanged)='doctorMedcineSearch($event,i)'\r\n                        \r\n                        [itemTemplate]=\"itemTemplate\"\r\n                        [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n                      </ng-autocomplete>\r\n                   \r\n                      \r\n                      <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n                        <a [innerHTML]=\"item.name\"></a>\r\n                        </ng-template>\r\n                        <ng-template #notFoundTemplate let-notFound>\r\n                        <div [innerHTML]=\"notFound\"></div>\r\n                        </ng-template>\r\n                                                        \r\n                      </div>\r\n                      </tr>\r\n                      <tr >\r\n                          \r\n                          <input  disabled class=\" customwidth form-control\" formControlName=\"medicineName\"\r\n                          >\r\n                        </tr>\r\n                        \r\n                  </td>\r\n                      \r\n                  <td style=\"width: 30%\">\r\n                    <input   class=\"form-control\" formControlName=\"quantity\"\r\n                    placeholder=\"Quantity\">\r\n                    \r\n                  </td>\r\n                  \r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n                </div>\r\n\r\n          <div class=\"row text-right ml-2\">\r\n            <i class=\"fa fa-minus-circle customfiltericon m-10\" aria-hidden=\"true\" (click)=\"removeItem(i)\"><span class=\"reducetextforicon\">Remove</span></i>                     \r\n<!--\r\n          <button class=\"btn btn-dark\" (click)=\"removeItem(i)\"> Remove Medicine </button>-->\r\n          </div>\r\n  </div>\r\n\r\n  <!--Chosen name: {{ orderForm.controls.items.controls[i].controls.name.value }} -->\r\n\r\n\r\n\r\n<div class=\"col-md-12 text-right mt-4\">\r\n  <i class=\"fa fa-plus-circle customfiltericon m-10\" aria-hidden=\"true\" (click)=\"addItem()\"><span class=\"reducetextforicon\">Add</span></i>    \r\n  <!--\r\n  <button class=\"btn btn-dark\" (click)=\"addItem()\"> Add More Medicines </button>\r\n  -->\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n             </div>\r\n             <div class=\"modal-footer\">\r\n                <button [disabled]=\"!orderFormGroup.valid\" type=\"button\" class=\"btn btn-primary m-10\"\r\n                    (click)=\"save();\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"closeMainModal();\">Cancel</button>\r\n            </div>\r\n        \r\n        <p *ngIf=\"submitAttempt\" class=\"cutomeerrortext\">\r\n                \r\n         <span class=\"redcolor ml-2\"><i class=\"fa fas fa-exclamation\"></i><b>&nbsp;Fix The Error : </b></span> {{form_fill_failure_msg}}\r\n          \r\n        </p>\r\n        \r\n</form>\r\n</ng-template>\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n<div class=\"my-container\">\r\n  <ng-template #customLoadingTemplate>\r\n    \r\n            Please wait..fetching data\r\n    \r\n</ng-template>\r\n  <ngx-loading [show]=\"loading\" [config]=\"{ primaryColour: 'blue',secondaryColour:'red',fullScreenBackdrop:false}\" [template]=\"customLoadingTemplate\"></ngx-loading>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\n\r\nimport { OrderComponent } from './order.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\nimport { OrderRoutingModule } from './order-routing.module';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AutocompleteLibModule,\r\n    NgxPaginationModule,\r\n    OrderRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBorderRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [OrderComponent]\r\n})\r\nexport class OrderModule { }\r\n"]}