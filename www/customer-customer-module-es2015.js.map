{"version":3,"sources":["./src/app/layout/customer/customer-routing.module.ts","./src/app/layout/customer/customer.component.ts","./src/app/layout/customer/customer.component.html","./src/app/layout/customer/customer.module.ts"],"names":[],"mappings":"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","file":"customer-customer-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CustomerComponent } from './customer.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: CustomerComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CustomerRoutingModule { }\r\n","import { Component, OnInit,  ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport *  as moment from 'moment';\r\n\r\nimport { Config } from '../../config';\r\n\r\n\r\n\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { BaseComponent } from 'src/BaseComponent';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class CustomerComponent extends BaseComponent implements OnInit {\r\n\r\n  \r\n  states = Config.states\r\n  public loading:boolean = true;\r\n  public closeResult: string;\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  \r\n  public userKind:string=\"customer\"\r\n  normalFiltereduserListArr:any = [];\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('customerFormModal') customerFormModal: TemplateRef<any>;\r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  \r\n  customerFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  fromOrderPage:boolean = false\r\n  sexList = [\"Male\",\"Female\"]\r\n  oldEmail:string\r\n  customerObject = {\r\n      name:\"\",\r\n      emailId:\"\",      \r\n      active:true,      \r\n      \"age\" : \"\",\r\n      \"sex\" : \"\",\r\n      \"addressline1\" : \"\",\r\n      \"addressline2\" : \"\",\r\n      \"area\" : \"\",\r\n      \"po\" : \"\",\r\n      \"pin\" : \"\",\r\n      \"district\" : \"\",\r\n      \"state\" : \"\",\r\n      \"landmark\" : \"\",\r\n      \"mobileNumber\" : \"\",\r\n      \"alternateMobileNumber\" : \"\"  \r\n        \r\n    }\r\n    keywordPin:string = \"pinCode\"\r\n    customerObjectBase = {\r\n      name:\"\",\r\n      emailId:\"\",      \r\n      active:true,      \r\n      \"age\" : \"\",\r\n      \"sex\" : \"\",\r\n      \"addressline1\" : \"\",\r\n      \"addressline2\" : \"\",\r\n      \"area\" : \"\",\r\n      \"po\" : \"\",\r\n      \"pin\" : \"\",\r\n      \"district\" : \"\",\r\n      \"state\" : \"\",\r\n      \"landmark\" : \"\",\r\n      \"mobileNumber\" : \"\",\r\n      \"alternateMobileNumber\" : \"\"  \r\n        \r\n    }\r\n    pinCode:string\r\n    pinCodeList:any = []\r\n  constructor(\r\n    private datePipe : DatePipe,\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess,\r\n    \r\n    \r\n  ) {\r\n    super(router)\r\n\r\n    if(!this.user.role.doctor.customer.view){\r\n      return\r\n    }\r\n    this.oldEmail = ''\r\n\r\n    this.customerFormGroup = _fb.group({\r\n      name: new FormControl(this.customerObject.name, Validators.required),\r\n      age: new FormControl(this.customerObject.age, Validators.required),      \r\n      sex: new FormControl(this.customerObject.sex, Validators.required),      \r\n      active: new FormControl(this.customerObject.active),      \r\n      addressline1: new FormControl(this.customerObject.addressline1, Validators.required),\r\n      addressline2: new FormControl(this.customerObject.addressline2),\r\n      area: new FormControl(this.customerObject.area, Validators.required),\r\n      po: new FormControl(this.customerObject.po, Validators.required),\r\n      state: new FormControl(this.customerObject.state, Validators.required),\r\n      mobileNumber: new FormControl(this.customerObject.mobileNumber, [\r\n        Validators.required,\r\n        Validators.pattern(\"^[0-9]*$\"),\r\n        Validators.minLength(10),\r\n      ]),\r\n      alternateMobileNumber: new FormControl(this.customerObject.alternateMobileNumber,[        \r\n        Validators.pattern(\"^[0-9]*$\"),\r\n        Validators.minLength(10)\r\n      ]),\r\n      pin: new FormControl(this.customerObject.pin, Validators.required),\r\n      district: new FormControl(this.customerObject.district),\r\n      landmark: new FormControl(this.customerObject.landmark),\r\n      emailId: new FormControl(this.customerObject.emailId, [\r\n        Validators.required,\r\n        Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]),\r\n    });\r\n\r\n    //this.customerFormGroup.valueChanges.subscribe(data => console.log('form changes', data));\r\n    this.fromOrderPage = this.route.snapshot.paramMap.get('fromOrderPage') =='fromOrderPage';\r\n    this.loading = false;    \r\n    this.fetchCustomers()   \r\n   \r\n  }\r\n  ngAfterViewInit(){\r\n    if(this.fromOrderPage){\r\n      this.openAddCustomerDialog()\r\n    }\r\n   \r\n  }\r\n  \r\n  openOrderPage(customerObj){\r\n    console.log(\"customerObj ==\"+JSON.stringify(customerObj))\r\n    //this.router.navigate([\"/order\",{customer:{name:customerObj.name,customerId:customerObj._id}}]);\r\n    this.router.navigate([\"/order\",{name:customerObj.name,customerId:customerObj._id,fromCustomerPage:'fromCustomerPage'}]);\r\n  }\r\n  openAddCustomerDialog(){\r\n    this.mode = \"add\"\r\n    this.customerObject =Object.assign({}, this.customerObjectBase); \r\n    this.modalReference = this.modal.open(this.customerFormModal);\r\n  }\r\n\r\n  \r\n  pincodeSelectEvent(item) {\r\n  if(item){\r\n  this.customerFormGroup.get('pin').patchValue(item['pinCode']);\r\n  this.customerObject.pin = item['pinCode']\r\n  this.pinCode = item['pinCode']\r\n\r\n  \r\n  //console.log(\" inside customerSelectEvent \"+JSON.stringify(item))\r\n  }\r\n  // do something with selected item\r\n}\r\n\r\nonChangePincodeSearch(val: string) {\r\n  //console.log(\" inside onChangePatientSearch val \"+val)\r\n // if(val && val.length >2 ){\r\n  let data = {pinCode:val}\r\n  console.log(\"data  == \"+JSON.stringify(data) )\r\n  this.pinCodeList = []\r\n  this.dataService.fetchAllPinCode(data).then((result:[]) => {\r\n\r\n    console.log(\"this.pinCodeList  == \"+JSON.stringify(result) )\r\n\r\n    this.pinCodeList = result.map(element => element)\r\n    //console.log(\"this.pinCodeList  == \"+this.pinCodeList )\r\n    if(this.pinCodeList.length == 0){\r\n      alert(\"Please enter a valid pincode that belongs to a serviceable area\")\r\n    }\r\n\r\n  }, (err) => {\r\n    console.log(err);\r\n    console.log(\"this.pinCodeList.length   == \"+this.pinCodeList.length )\r\n    if(this.pinCodeList.length == 0){\r\n      alert(\"Please enter a valid pincode that belongs to a serviceable area\")\r\n    }\r\n      \r\n  });\r\n // }\r\n}\r\n\r\n\r\n\r\n  ngOnInit(){\r\n\r\n    \r\n\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n\r\n  \r\n\r\n    //this.pageSize = Config.RECORDSIZE;\r\n    //this.pageNo = 1\r\n    this.fetchCustomersCount()      \r\n    \r\n //   this.items = Array(150).fill(0).map((x, i) => ({ id: (i + 1), name: `Item ${i + 1}`})\r\n  };\r\n\r\n  save(){\r\n//alert(\"mode: \"+this.mode)\r\n    if((this.oldEmail != this.customerObject.emailId && this.customerFormGroup.controls['emailId'].touched && this.mode == \"edit\") || this.mode==\"add\" ){\r\n      let email  = this.customerFormGroup.controls.emailId.value\r\n\r\n      for(var i in this.normalFiltereduserListArr){\r\n        if(email == this.normalFiltereduserListArr[i].emailId){\r\n          this.submitAttempt = true;\r\n          this.form_fill_failure_msg = \"This email id already used by another user\";\r\n          return; \r\n        }\r\n      }\r\n    }\r\n\r\n    if(!this.customerFormGroup.valid){\r\n        this.submitAttempt = true;        \r\n        this.validateFields(this.customerFormGroup.controls)                   \r\n        return; \r\n    } \r\n    \r\n\r\n    \r\n    if(this.mode == \"add\"){\r\n      console.log(\"this.customerObject for add == \"+JSON.stringify(this.customerObject))\r\n      this.dataService.addCustomer(this.customerObject).then((result) => {                \r\n        //  console.log(\"result after adduser == \"+JSON.stringify(result))\r\n          this.fetchCustomers()\r\n          this.mode = \"add\"\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('New Customer is added successfully');\r\n      }, (err) => {        \r\n      console.log(err);\r\n      });\r\n    }if(this.mode == \"edit\"){\r\n      this.customerObject['customerId'] = this.customerObject['_id']\r\n      console.log(\"this.customerObject for edit == \"+JSON.stringify(this.customerObject))\r\n      this.dataService.updateCustomer(this.customerObject).then((result) => {\r\n        //  console.log(\"****** updateCustomer result   ===== **\"+JSON.stringify(result))\r\n          //this.loading = false;\r\n          this.mode = \"add\"   \r\n          this.fetchCustomers()\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('Customer is updated successfully'); \r\n      }, (err) => {\r\n        this.mode = \"add\"\r\n        //this.loading = false;\r\n        console.log(err);\r\n      });\r\n    }\r\n    \r\n}\r\nopenForeditCustomer(user){\r\n\r\n  this.oldEmail = user['emailId']\r\n  this.customerObject = Object.assign({}, user); \r\n\r\n  this.pinCode = this.customerObject.pin\r\n\r\n  //this.openAddCustomerDialog()\r\n  this.mode = \"edit\"\r\n  this.modalReference = this.modal.open(this.customerFormModal);\r\n\r\n  console.log(\"this.customerObject.pin **\"+this.customerObject.pin)\r\n  //this.userObject.userId = user._id\r\n  //this.role = user.role\r\n\r\n  \r\n  \r\n}\r\n  pageChanged(event){\r\n    console.log(\"****** this.event   ===== **\"+event)\r\n    this.pageNo = event\r\n    this.applyFilter()\r\n  }\r\n  userKindChange(){\r\n    this.pageNo = 1\r\n    \r\n    this.applyFilter()\r\n  }\r\n  applyFilter() {\r\n      \r\n    \r\n               \r\n    if( this.userKind && this.userKind==\"customer\")  {      \r\n      this.fetchCustomers()\r\n    }\r\n \r\n   \r\n    \r\n  }\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n  \r\n\r\n  fetchCustomersCount(){\r\n  //  this.pageNo = 1\r\n  //  this.pageSize = 10\r\n    this.dataService.fetchCustomersCount().then((result) => {\r\n        \r\n        console.log(\"****** fetchCustomersCount result   ===== **\"+JSON.stringify(result))\r\n      this.totalDocRecords = result;\r\n      console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n  \r\n\r\n  fetchCustomers(){\r\n  //  this.pageNo = 1\r\n    //this.pageSize = 10\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    this.dataService.fetchCustomers(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = [];      \r\n\r\n        this.normalFiltereduserListArr = result.map(element => element)\r\n       // console.log(\"****** this.normalFiltereduserListArr   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n\r\n        this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n  \r\n  updateStatus(value, userInfo) {\r\n   // userInfo.active = value\r\n  //  console.log(\"****** userInfo   ===== **\"+JSON.stringify(userInfo))\r\n  let data ={}\r\n  userInfo.active = !userInfo.active\r\n  console.log(\"******  userInfo.active   ===== **\"+userInfo.active )\r\n    if( this.userKind && this.userKind==\"customer\")  {    \r\n      userInfo.customerId = userInfo._id\r\n      data['customerId'] = userInfo._id\r\n      data['active'] = userInfo.active\r\n      console.log(\"****** userInfo   ===== **\"+JSON.stringify(data))\r\n\r\n          this.dataService.updateCustomer(data).then((result) => {\r\n          //  console.log(\"****** updateCustomer result   ===== **\"+JSON.stringify(result))\r\n\r\n            this.loading = false;\r\n      \r\n        }, (err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    }\r\n \r\n  }\r\n\r\n  \r\n}","<div>\r\n  <app-page-header [heading]=\"'Customers'\" [icon]=\"'fa-user'\"></app-page-header>\r\n</div>\r\n\r\n  <div class=\"col-md-12\" >\r\n      \r\n          <!--div class=\"card-header\">\r\n              User type\r\n          </div-->\r\n          \r\n          \r\n                \r\n                <div class=\"col-md-12 text-right \" *ngIf=\"user.role.doctor.customer.create\">                      \r\n                  <div class=\"content\">\r\n                    <button type=\"button\" class=\"btn btn-dark\" (click)=\"openAddCustomerDialog()\">Add Customer</button>\r\n                  </div>\r\n              </div>\r\n             \r\n          \r\n          \r\n      \r\n\r\n\r\n<!--div class=\"row m-1\">  \r\n  \r\n  <div class=\"col col-xl-12 col-lg-12\">\r\n    <div class=\"card mb-3\">\r\n      <div class=\"card-header\">\r\n        List of {{userKind}}\r\n    </div>\r\n  </div>\r\n</div>\r\n</div -->\r\n\r\n      <div class=\"card-body table-responsive marginLeft\"> <span class=\"pb-3 \"><b> List of existing {{userKind}}s </b>  </span>\r\n        <table class=\"table table-striped table-bordered table-sm\" *ngIf=\"userKind == 'customer'\">\r\n          <thead>\r\n          <tr>\r\n            <th>Customer ID</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Mobile</th>\r\n              <th>Alternate Mobile</th>\r\n\t            <th>Password</th>\r\n              <!--th>Status</th-->\r\n              <th *ngIf=\"user.role.doctor.customer.edit\">Enable/Disable</th>\r\n              <th>Speciality</th>\r\n              <th>Created Date</th>\r\n              <th *ngIf=\"user.role.doctor.customer.edit\">Edit</th>\r\n              <th *ngIf=\"user.role.doctor.customer.edit\">Orders</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tbody *ngIf=\"normalFiltereduserListArr && normalFiltereduserListArr.length>0\">\r\n            \r\n              <tr *ngFor=\"let obj of normalFiltereduserListArr | paginate: { id:'forcustomer', itemsPerPage: pageSize, currentPage: pageNo, totalItems: totalDocRecords }\">              \r\n                <td> {{obj?._id}} </td>\r\n              <td> {{obj?.name}} </td>\r\n              <td>{{obj.emailId}}</td>\r\n              <td>{{obj.mobileNumber}}</td>\r\n              <td>{{obj.alternateMobileNumber}}</td>\r\n              <td>{{obj.password}}</td>\r\n              <!--td *ngIf=\"user.role.doctor.customer.edit\"> \r\n                <span  *ngIf=\"obj.active\">Enabled</span>\r\n                <span *ngIf=\"!obj.active\">Disabled</span>\r\n            </td-->\r\n              <td *ngIf=\"user.role.doctor.customer.edit\">               \r\n                <ui-switch [(ngModel)]=\"obj.active\" (change)=\"updateStatus($event, obj)\"></ui-switch>\r\n                    \r\n              </td>\r\n              <td>{{obj.practiceCategory}}</td>\r\n<td >{{convertToHumanDate(obj.createdDate)}}</td>\r\n<td *ngIf=\"user.role.doctor.customer.edit\" ><button class=\"btn btn-dark\" (click)=\"openForeditCustomer(obj)\"> Edit </button></td>    \r\n<td *ngIf=\"user.role.doctor.customer.edit\" ><button class=\"btn btn-dark\" (click)=\"openOrderPage(obj)\"> Open Orders </button></td> \r\n            </tr>\r\n          </tbody>\r\n          <div class=\"col-md-12 text-left clearfix \">\r\n          <pagination-controls class=\"my-pagination marginLeft\" *ngIf=\"userKind=='customer'\" id=\"forcustomer\" \r\n               (pageChange)=\"pageChanged($event)\"\r\n                      (pageBoundsCorrection)=\"pageChanged($event)\"                      \r\n                      directionLinks=\"true\"               maxSize=\"9\"\r\n                      directionLinks=\"true\"\r\n                      autoHide=\"true\"\r\n                      responsive=\"true\"\r\n                      previousLabel=\"Prev\"\r\n                      nextLabel=\"Next\"\r\n                      screenReaderPaginationLabel=\"Pagination\"\r\n                      screenReaderPageLabel=\"page\"\r\n                      screenReaderCurrentLabel=\"You're on page\"></pagination-controls >\r\n          </div>\r\n          <tbody *ngIf=\"(normalFiltereduserListArr && normalFiltereduserListArr.length==0)\">\r\n              <tr>\r\n                <td colspan=\"7\" align = \"center\">No record available</td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n\r\n\r\n\r\n      <ng-template #customerFormModal let-close=\"close\">\r\n        <form [formGroup]=\"customerFormGroup\" class=\"custom_timebox p-0\">\r\n            <div class=\"modal-header py-1\">\r\n                    <h4 class=\"modal-title headerTitle mb-0\">{{mode | titlecase}} Customer</h4>\r\n                    <button type=\"button\" class=\"close\" (click)=\"closeModal();\">×</button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 form-group\">\r\n                        <label for=\"name\" class=\"labelTitles\"><b>Name</b></label><span class=\"required-asterisk\">*</span>\r\n                    </div>\r\n                    <div class=\"col-md-12 marginTop\">\r\n                        <input class=\"form-control labelValue\" [(ngModel)]=\"customerObject.name\"  formControlName=\"name\" placeholder=\"Enter name\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                        <div class=\"col-md-12 form-group\">\r\n                            <label for=\"email\" class=\"labelTitles\"><b>Email</b></label><span class=\"required-asterisk\">*</span>\r\n                        </div>\r\n                        <div class=\"col-md-12 marginTop\">\r\n                                <input type=\"email\"  [class.is-invalid] = \"customerFormGroup.get('emailId').invalid && customerFormGroup.get('emailId').touched\" class=\"form-control\" [(ngModel)]=\"customerObject.emailId\" formControlName=\"emailId\"\r\n                                placeholder=\"Enter email\">\r\n                         </div>\r\n                    </div>\r\n                \r\n                <div class=\"row \">\r\n                  <div class=\"col-md-12 form-group\">\r\n                      <label for=\"email\" class=\"labelTitles\"><b> Mobile Number</b></label><span class=\"required-asterisk\">*</span>\r\n                  </div>\r\n                  <div class=\"col-md-12 marginTop\">\r\n                          <input class=\"form-control\" [(ngModel)]=\"customerObject.mobileNumber\" formControlName=\"mobileNumber\"\r\n                          placeholder=\"Enter Mobile Number\">\r\n                          \r\n                   </div>\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-md-12 form-group\">\r\n                      <label for=\"email\" class=\"labelTitles\"><b>Alternate Mobile Number</b></label>\r\n                  </div>\r\n                  <div class=\"col-md-12 marginTop\">\r\n                          <input class=\"form-control\" [(ngModel)]=\"customerObject.alternateMobileNumber\" formControlName=\"alternateMobileNumber\"\r\n                          placeholder=\"Enter Alternate Mobile Number\">\r\n                          \r\n                   </div>\r\n                </div>\r\n\r\n\r\n            <div class=\"row \">\r\n              <div class=\"col-md-12 form-group\">\r\n                  <label for=\"mobile\" class=\"labelTitles\"><b>Age</b></label>\r\n              </div>\r\n              <div class=\"col-md-12 marginTop\">\r\n                      <input class=\"form-control\" [(ngModel)]=\"customerObject.age\" formControlName=\"age\"\r\n                      placeholder=\"Enter Mobile\">\r\n                      \r\n               </div>\r\n        </div>\r\n\r\n\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 form-group\">\r\n                  <label for=\"name\" class=\"labelTitles\"><b>Sex</b></label>\r\n              </div>\r\n              <div class=\"col-md-12 marginTop\">\r\n                 <select formControlName=\"sex\" [(ngModel)]=\"customerObject.sex\" class=\"form-control\" name=\"sex\">\r\n                                        \r\n                                          <option *ngFor=\"let sex of sexList\" value=\"{{sex}}\" class=\"labelValue\">{{sex}}</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            \r\n\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 form-group\">\r\n              <label for=\"name\" class=\"labelTitles\">Address Line 1</label><span class=\"required-asterisk\">*</span>\r\n          </div>\r\n          <div class=\"col-md-12 marginTop\">\r\n              <input class=\"form-control labelValue\" formControlName=\"addressline1\" [(ngModel)]=\"customerObject.addressline1\" placeholder=\"Enter flatno / house no\">\r\n          </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 form-group\">\r\n            <label for=\"name\" class=\"labelTitles\">Address Line 2</label>\r\n        </div>\r\n        <div class=\"col-md-12 marginTop\">\r\n            <input class=\"form-control labelValue\" [(ngModel)]=\"customerObject.addressline2\" formControlName=\"addressline2\" placeholder=\"Enter Plot no\">\r\n        </div>\r\n    </div>\r\n\r\n      <div class=\"row \">\r\n        <div class=\"col-md-12 form-group\">\r\n            <label for=\"email\" class=\"labelTitles\"><b>Area </b></label><span class=\"required-asterisk\">*</span>\r\n        </div>\r\n        <div class=\"col-md-12 marginTop\">\r\n                <input  class=\"form-control\" [(ngModel)]=\"customerObject.area\" formControlName=\"area\"\r\n                placeholder=\"Enter area\">\r\n                \r\n         </div>\r\n  </div>\r\n\r\n  <div class=\"row \">\r\n    <div class=\"col-md-12 form-group\">\r\n        <label for=\"email\" class=\"labelTitles\"><b>P.O. </b></label><span class=\"required-asterisk\">*</span>\r\n    </div>\r\n    <div class=\"col-md-12 marginTop\">\r\n            <input class=\"form-control\" [(ngModel)]=\"customerObject.po\" formControlName=\"po\"\r\n            placeholder=\"Enter po\">\r\n            \r\n     </div>\r\n</div>\r\n\r\n<div class=\"row \">\r\n  <!--div class=\"col-md-12 form-group\">\r\n      <label for=\"email\" class=\"labelTitles\"><b>Pin </b></label><span class=\"required-asterisk\">*</span>\r\n  </div-->\r\n  <!--div class=\"col-md-12 marginTop\">\r\n          <input  class=\"form-control\" [(ngModel)]=\"customerObject.pin\" formControlName=\"pin\"\r\n          placeholder=\"Enter Pin\">\r\n          \r\n   </div-->\r\n   <div class=\"col-md-12\">\r\n    <div class=\"form-group\">\r\n      <label for=\"email\" class=\"labelTitles\"><b>Pin </b></label><span class=\"required-asterisk\">*</span>\r\n  \r\n        <ng-autocomplete \r\n        [data]=\"pinCodeList\"\r\n        [(ngModel)] = \"pinCode\"      \r\n        formControlName=\"pin\"\r\n        [searchKeyword]=\"keywordPin\"\r\n        (selected)='pincodeSelectEvent($event)'\r\n        (inputChanged)='onChangePincodeSearch($event)'      \r\n        [itemTemplate]=\"itemTemplate\"\r\n        [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n        </ng-autocomplete>\r\n  \r\n  \r\n        <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n        <a [innerHTML]=\"item.pinCode\"></a>\r\n        </ng-template>\r\n  \r\n        <ng-template #notFoundTemplate let-notFound>\r\n        <div [innerHTML]=\"notFound\"></div>\r\n        </ng-template>\r\n  \r\n        \r\n       \r\n    </div>\r\n</div>\r\n</div>\r\n\r\n<div class=\"row \">\r\n  <div class=\"col-md-12 form-group\">\r\n      <label for=\"email\" class=\"labelTitles\"><b>District </b></label>\r\n  </div>\r\n  <div class=\"col-md-12 marginTop\">\r\n          <input  class=\"form-control\" [(ngModel)]=\"customerObject.district\" formControlName=\"district\"\r\n          placeholder=\"Enter district\">\r\n          \r\n   </div>\r\n</div>\r\n\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n      <div class=\"form-group\">\r\n          <label class=\"labelTitles\">State </label>\r\n          <select formControlName=\"state\" [(ngModel)]=\"customerObject.state\" class=\"form-control\" name=\"state\"       >\r\n            \r\n              <option *ngFor=\"let state of states\" value=\"{{state}}\" class=\"labelValue\">{{state}}</option>\r\n          </select>\r\n         \r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"row \">\r\n  <div class=\"col-md-12 form-group\">\r\n      <label for=\"email\" class=\"labelTitles\"><b>Landmark </b></label>\r\n  </div>\r\n  <div class=\"col-md-12 marginTop\">\r\n          <input  class=\"form-control\" [(ngModel)]=\"customerObject.landmark\" formControlName=\"landmark\"\r\n          placeholder=\"Enter landmark\">\r\n          \r\n   </div>\r\n</div>\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n             </div>\r\n             <div class=\"modal-footer\">\r\n                <button [disabled]=\"!customerFormGroup.valid\" type=\"button\" class=\"btn btn-primary m-10\"\r\n                    (click)=\"save();\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"closeModal();\">Cancel</button>\r\n            </div>\r\n        </form>\r\n        <p *ngIf=\"submitAttempt\" class=\"cutomeerrortext\">\r\n                \r\n         <span class=\"redcolor ml-2\"><i class=\"fa fas fa-exclamation\"></i><b>&nbsp;Fix The Error : </b></span> {{form_fill_failure_msg}}\r\n          \r\n        </p>\r\n</ng-template>\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n<!--div class=\"my-container\">\r\n  <ngx-loading [show]=\"loading\"></ngx-loading>\r\n</div-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { CustomerRoutingModule } from './customer-routing.module';\r\nimport { CustomerComponent } from './customer.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AutocompleteLibModule,\r\n    NgxPaginationModule,\r\n    CustomerRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBorderRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [CustomerComponent]\r\n})\r\nexport class CustomerModule { }"],"sourceRoot":"webpack:///"}