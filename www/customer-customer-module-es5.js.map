{"version":3,"sources":["webpack:///src/app/layout/customer/customer-routing.module.ts","webpack:///src/app/layout/customer/customer.component.ts","webpack:///src/app/layout/customer/customer.component.html","webpack:///src/app/layout/customer/customer.module.ts"],"names":["routes","path","component","CustomerRoutingModule","forChild","imports","exports","CustomerComponent","datePipe","router","route","modal","toastr","_fb","dataService","states","loading","userKind","normalFiltereduserListArr","items","pageSize","RECORDSIZE","pageNo","tempArray","fromOrderPage","sexList","customerObject","name","emailId","active","keywordPin","customerObjectBase","pinCodeList","user","role","doctor","customer","view","oldEmail","customerFormGroup","group","required","age","sex","addressline1","addressline2","area","po","state","mobileNumber","pattern","minLength","alternateMobileNumber","pin","district","landmark","snapshot","paramMap","get","fetchCustomers","openAddCustomerDialog","customerObj","console","log","JSON","stringify","navigate","customerId","_id","fromCustomerPage","mode","Object","assign","modalReference","open","customerFormModal","item","patchValue","pinCode","val","data","fetchAllPinCode","then","result","map","element","length","alert","err","localStorage","getItem","fetchCustomersCount","controls","touched","email","value","i","submitAttempt","form_fill_failure_msg","valid","validateFields","addCustomer","closeModal","successToastr","updateCustomer","event","applyFilter","pageOfItems","totalDocRecords","perPage","userInfo","selector","templateUrl","styleUrls","providers","CustomerModule","forRoot","animationType","wanderingCubes","backdropBackgroundColour","backdropBorderRadius","primaryColour","secondaryColour","tertiaryColour","provide","useFactory","declarations"],"mappings":"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","file":"customer-customer-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CustomerComponent } from './customer.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: CustomerComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CustomerRoutingModule { }\r\n","import { Component, OnInit,  ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport *  as moment from 'moment';\r\n\r\nimport { Config } from '../../config';\r\n\r\n\r\n\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { BaseComponent } from 'src/BaseComponent';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class CustomerComponent extends BaseComponent implements OnInit {\r\n\r\n  \r\n  states = Config.states\r\n  public loading:boolean = true;\r\n  public closeResult: string;\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  \r\n  public userKind:string=\"customer\"\r\n  normalFiltereduserListArr:any = [];\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('customerFormModal') customerFormModal: TemplateRef<any>;\r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  \r\n  customerFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  fromOrderPage:boolean = false\r\n  sexList = [\"Male\",\"Female\"]\r\n  oldEmail:string\r\n  customerObject = {\r\n      name:\"\",\r\n      emailId:\"\",      \r\n      active:true,      \r\n      \"age\" : \"\",\r\n      \"sex\" : \"\",\r\n      \"addressline1\" : \"\",\r\n      \"addressline2\" : \"\",\r\n      \"area\" : \"\",\r\n      \"po\" : \"\",\r\n      \"pin\" : \"\",\r\n      \"district\" : \"\",\r\n      \"state\" : \"\",\r\n      \"landmark\" : \"\",\r\n      \"mobileNumber\" : \"\",\r\n      \"alternateMobileNumber\" : \"\"  \r\n        \r\n    }\r\n    keywordPin:string = \"pinCode\"\r\n    customerObjectBase = {\r\n      name:\"\",\r\n      emailId:\"\",      \r\n      active:true,      \r\n      \"age\" : \"\",\r\n      \"sex\" : \"\",\r\n      \"addressline1\" : \"\",\r\n      \"addressline2\" : \"\",\r\n      \"area\" : \"\",\r\n      \"po\" : \"\",\r\n      \"pin\" : \"\",\r\n      \"district\" : \"\",\r\n      \"state\" : \"\",\r\n      \"landmark\" : \"\",\r\n      \"mobileNumber\" : \"\",\r\n      \"alternateMobileNumber\" : \"\"  \r\n        \r\n    }\r\n    pinCode:string\r\n    pinCodeList:any = []\r\n  constructor(\r\n    private datePipe : DatePipe,\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess,\r\n    \r\n    \r\n  ) {\r\n    super(router)\r\n\r\n    if(!this.user.role.doctor.customer.view){\r\n      return\r\n    }\r\n    this.oldEmail = ''\r\n\r\n    this.customerFormGroup = _fb.group({\r\n      name: new FormControl(this.customerObject.name, Validators.required),\r\n      age: new FormControl(this.customerObject.age, Validators.required),      \r\n      sex: new FormControl(this.customerObject.sex, Validators.required),      \r\n      active: new FormControl(this.customerObject.active),      \r\n      addressline1: new FormControl(this.customerObject.addressline1, Validators.required),\r\n      addressline2: new FormControl(this.customerObject.addressline2),\r\n      area: new FormControl(this.customerObject.area, Validators.required),\r\n      po: new FormControl(this.customerObject.po, Validators.required),\r\n      state: new FormControl(this.customerObject.state, Validators.required),\r\n      mobileNumber: new FormControl(this.customerObject.mobileNumber, [\r\n        Validators.required,\r\n        Validators.pattern(\"^[0-9]*$\"),\r\n        Validators.minLength(10),\r\n      ]),\r\n      alternateMobileNumber: new FormControl(this.customerObject.alternateMobileNumber,[        \r\n        Validators.pattern(\"^[0-9]*$\"),\r\n        Validators.minLength(10)\r\n      ]),\r\n      pin: new FormControl(this.customerObject.pin, Validators.required),\r\n      district: new FormControl(this.customerObject.district),\r\n      landmark: new FormControl(this.customerObject.landmark),\r\n      emailId: new FormControl(this.customerObject.emailId, [\r\n        Validators.required,\r\n        Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]),\r\n    });\r\n\r\n    //this.customerFormGroup.valueChanges.subscribe(data => console.log('form changes', data));\r\n    this.fromOrderPage = this.route.snapshot.paramMap.get('fromOrderPage') =='fromOrderPage';\r\n    this.loading = false;    \r\n    this.fetchCustomers()   \r\n   \r\n  }\r\n  ngAfterViewInit(){\r\n    if(this.fromOrderPage){\r\n      this.openAddCustomerDialog()\r\n    }\r\n   \r\n  }\r\n  \r\n  openOrderPage(customerObj){\r\n    console.log(\"customerObj ==\"+JSON.stringify(customerObj))\r\n    //this.router.navigate([\"/order\",{customer:{name:customerObj.name,customerId:customerObj._id}}]);\r\n    this.router.navigate([\"/order\",{name:customerObj.name,customerId:customerObj._id,fromCustomerPage:'fromCustomerPage'}]);\r\n  }\r\n  openAddCustomerDialog(){\r\n    this.mode = \"add\"\r\n    this.customerObject =Object.assign({}, this.customerObjectBase); \r\n    this.modalReference = this.modal.open(this.customerFormModal);\r\n  }\r\n\r\n  \r\n  pincodeSelectEvent(item) {\r\n  if(item){\r\n  this.customerFormGroup.get('pin').patchValue(item['pinCode']);\r\n  this.customerObject.pin = item['pinCode']\r\n  this.pinCode = item['pinCode']\r\n\r\n  \r\n  //console.log(\" inside customerSelectEvent \"+JSON.stringify(item))\r\n  }\r\n  // do something with selected item\r\n}\r\n\r\nonChangePincodeSearch(val: string) {\r\n  //console.log(\" inside onChangePatientSearch val \"+val)\r\n // if(val && val.length >2 ){\r\n  let data = {pinCode:val}\r\n  console.log(\"data  == \"+JSON.stringify(data) )\r\n  this.pinCodeList = []\r\n  this.dataService.fetchAllPinCode(data).then((result:[]) => {\r\n\r\n    console.log(\"this.pinCodeList  == \"+JSON.stringify(result) )\r\n\r\n    this.pinCodeList = result.map(element => element)\r\n    //console.log(\"this.pinCodeList  == \"+this.pinCodeList )\r\n    if(this.pinCodeList.length == 0){\r\n      alert(\"Please enter a valid pincode that belongs to a serviceable area\")\r\n    }\r\n\r\n  }, (err) => {\r\n    console.log(err);\r\n    console.log(\"this.pinCodeList.length   == \"+this.pinCodeList.length )\r\n    if(this.pinCodeList.length == 0){\r\n      alert(\"Please enter a valid pincode that belongs to a serviceable area\")\r\n    }\r\n      \r\n  });\r\n // }\r\n}\r\n\r\n\r\n\r\n  ngOnInit(){\r\n\r\n    \r\n\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n\r\n  \r\n\r\n    //this.pageSize = Config.RECORDSIZE;\r\n    //this.pageNo = 1\r\n    this.fetchCustomersCount()      \r\n    \r\n //   this.items = Array(150).fill(0).map((x, i) => ({ id: (i + 1), name: `Item ${i + 1}`})\r\n  };\r\n\r\n  save(){\r\n//alert(\"mode: \"+this.mode)\r\n    if((this.oldEmail != this.customerObject.emailId && this.customerFormGroup.controls['emailId'].touched && this.mode == \"edit\") || this.mode==\"add\" ){\r\n      let email  = this.customerFormGroup.controls.emailId.value\r\n\r\n      for(var i in this.normalFiltereduserListArr){\r\n        if(email == this.normalFiltereduserListArr[i].emailId){\r\n          this.submitAttempt = true;\r\n          this.form_fill_failure_msg = \"This email id already used by another user\";\r\n          return; \r\n        }\r\n      }\r\n    }\r\n\r\n    if(!this.customerFormGroup.valid){\r\n        this.submitAttempt = true;        \r\n        this.validateFields(this.customerFormGroup.controls)                   \r\n        return; \r\n    } \r\n    \r\n\r\n    \r\n    if(this.mode == \"add\"){\r\n      console.log(\"this.customerObject for add == \"+JSON.stringify(this.customerObject))\r\n      this.dataService.addCustomer(this.customerObject).then((result) => {                \r\n        //  console.log(\"result after adduser == \"+JSON.stringify(result))\r\n          this.fetchCustomers()\r\n          this.mode = \"add\"\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('New Customer is added successfully');\r\n      }, (err) => {        \r\n      console.log(err);\r\n      });\r\n    }if(this.mode == \"edit\"){\r\n      this.customerObject['customerId'] = this.customerObject['_id']\r\n      console.log(\"this.customerObject for edit == \"+JSON.stringify(this.customerObject))\r\n      this.dataService.updateCustomer(this.customerObject).then((result) => {\r\n        //  console.log(\"****** updateCustomer result   ===== **\"+JSON.stringify(result))\r\n          //this.loading = false;\r\n          this.mode = \"add\"   \r\n          this.fetchCustomers()\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('Customer is updated successfully'); \r\n      }, (err) => {\r\n        this.mode = \"add\"\r\n        //this.loading = false;\r\n        console.log(err);\r\n      });\r\n    }\r\n    \r\n}\r\nopenForeditCustomer(user){\r\n\r\n  this.oldEmail = user['emailId']\r\n  this.customerObject = Object.assign({}, user); \r\n\r\n  this.pinCode = this.customerObject.pin\r\n\r\n  //this.openAddCustomerDialog()\r\n  this.mode = \"edit\"\r\n  this.modalReference = this.modal.open(this.customerFormModal);\r\n\r\n  console.log(\"this.customerObject.pin **\"+this.customerObject.pin)\r\n  //this.userObject.userId = user._id\r\n  //this.role = user.role\r\n\r\n  \r\n  \r\n}\r\n  pageChanged(event){\r\n    console.log(\"****** this.event   ===== **\"+event)\r\n    this.pageNo = event\r\n    this.applyFilter()\r\n  }\r\n  userKindChange(){\r\n    this.pageNo = 1\r\n    \r\n    this.applyFilter()\r\n  }\r\n  applyFilter() {\r\n      \r\n    \r\n               \r\n    if( this.userKind && this.userKind==\"customer\")  {      \r\n      this.fetchCustomers()\r\n    }\r\n \r\n   \r\n    \r\n  }\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n  \r\n\r\n  fetchCustomersCount(){\r\n  //  this.pageNo = 1\r\n  //  this.pageSize = 10\r\n    this.dataService.fetchCustomersCount().then((result) => {\r\n        \r\n        console.log(\"****** fetchCustomersCount result   ===== **\"+JSON.stringify(result))\r\n      this.totalDocRecords = result;\r\n      console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n  \r\n\r\n  fetchCustomers(){\r\n  //  this.pageNo = 1\r\n    //this.pageSize = 10\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    this.dataService.fetchCustomers(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = [];      \r\n\r\n        this.normalFiltereduserListArr = result.map(element => element)\r\n       // console.log(\"****** this.normalFiltereduserListArr   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n\r\n        this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n  \r\n  updateStatus(value, userInfo) {\r\n   // userInfo.active = value\r\n  //  console.log(\"****** userInfo   ===== **\"+JSON.stringify(userInfo))\r\n  let data ={}\r\n  userInfo.active = !userInfo.active\r\n  console.log(\"******  userInfo.active   ===== **\"+userInfo.active )\r\n    if( this.userKind && this.userKind==\"customer\")  {    \r\n      userInfo.customerId = userInfo._id\r\n      data['customerId'] = userInfo._id\r\n      data['active'] = userInfo.active\r\n      console.log(\"****** userInfo   ===== **\"+JSON.stringify(data))\r\n\r\n          this.dataService.updateCustomer(data).then((result) => {\r\n          //  console.log(\"****** updateCustomer result   ===== **\"+JSON.stringify(result))\r\n\r\n            this.loading = false;\r\n      \r\n        }, (err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    }\r\n \r\n  }\r\n\r\n  \r\n}","<div>\r\n  <app-page-header [heading]=\"'Customers'\" [icon]=\"'fa-user'\"></app-page-header>\r\n</div>\r\n\r\n  <div class=\"col-md-12\" >\r\n      \r\n          <!--div class=\"card-header\">\r\n              User type\r\n          </div-->\r\n          \r\n          \r\n                \r\n                <div class=\"col-md-12 text-right \" *ngIf=\"user.role.doctor.customer.create\">                      \r\n                  <div class=\"content\">\r\n                    <button type=\"button\" class=\"btn btn-dark\" (click)=\"openAddCustomerDialog()\">Add Customer</button>\r\n                  </div>\r\n              </div>\r\n             \r\n          \r\n          \r\n      \r\n\r\n\r\n<!--div class=\"row m-1\">  \r\n  \r\n  <div class=\"col col-xl-12 col-lg-12\">\r\n    <div class=\"card mb-3\">\r\n      <div class=\"card-header\">\r\n        List of {{userKind}}\r\n    </div>\r\n  </div>\r\n</div>\r\n</div -->\r\n\r\n      <div class=\"card-body table-responsive marginLeft\"> <span class=\"pb-3 \"><b> List of existing {{userKind}}s </b>  </span>\r\n        <table class=\"table table-striped table-bordered table-sm\" *ngIf=\"userKind == 'customer'\">\r\n          <thead>\r\n          <tr>\r\n            <th>Customer ID</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Mobile</th>\r\n              <th>Alternate Mobile</th>\r\n\t            <th>Password</th>\r\n              <!--th>Status</th-->\r\n              <th *ngIf=\"user.role.doctor.customer.edit\">Enable/Disable</th>\r\n              <th>Speciality</th>\r\n              <th>Created Date</th>\r\n              <th *ngIf=\"user.role.doctor.customer.edit\">Edit</th>\r\n              <th *ngIf=\"user.role.doctor.customer.edit\">Orders</th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tbody *ngIf=\"normalFiltereduserListArr && normalFiltereduserListArr.length>0\">\r\n            \r\n              <tr *ngFor=\"let obj of normalFiltereduserListArr | paginate: { id:'forcustomer', itemsPerPage: pageSize, currentPage: pageNo, totalItems: totalDocRecords }\">              \r\n                <td> {{obj?._id}} </td>\r\n              <td> {{obj?.name}} </td>\r\n              <td>{{obj.emailId}}</td>\r\n              <td>{{obj.mobileNumber}}</td>\r\n              <td>{{obj.alternateMobileNumber}}</td>\r\n              <td>{{obj.password}}</td>\r\n              <!--td *ngIf=\"user.role.doctor.customer.edit\"> \r\n                <span  *ngIf=\"obj.active\">Enabled</span>\r\n                <span *ngIf=\"!obj.active\">Disabled</span>\r\n            </td-->\r\n              <td *ngIf=\"user.role.doctor.customer.edit\">               \r\n                <ui-switch [(ngModel)]=\"obj.active\" (change)=\"updateStatus($event, obj)\"></ui-switch>\r\n                    \r\n              </td>\r\n              <td>{{obj.practiceCategory}}</td>\r\n<td >{{convertToHumanDate(obj.createdDate)}}</td>\r\n<td *ngIf=\"user.role.doctor.customer.edit\" ><button class=\"btn btn-dark\" (click)=\"openForeditCustomer(obj)\"> Edit </button></td>    \r\n<td *ngIf=\"user.role.doctor.customer.edit\" ><button class=\"btn btn-dark\" (click)=\"openOrderPage(obj)\"> Open Orders </button></td> \r\n            </tr>\r\n          </tbody>\r\n          <div class=\"col-md-12 text-left clearfix \">\r\n          <pagination-controls class=\"my-pagination marginLeft\" *ngIf=\"userKind=='customer'\" id=\"forcustomer\" \r\n               (pageChange)=\"pageChanged($event)\"\r\n                      (pageBoundsCorrection)=\"pageChanged($event)\"                      \r\n                      directionLinks=\"true\"               maxSize=\"9\"\r\n                      directionLinks=\"true\"\r\n                      autoHide=\"true\"\r\n                      responsive=\"true\"\r\n                      previousLabel=\"Prev\"\r\n                      nextLabel=\"Next\"\r\n                      screenReaderPaginationLabel=\"Pagination\"\r\n                      screenReaderPageLabel=\"page\"\r\n                      screenReaderCurrentLabel=\"You're on page\"></pagination-controls >\r\n          </div>\r\n          <tbody *ngIf=\"(normalFiltereduserListArr && normalFiltereduserListArr.length==0)\">\r\n              <tr>\r\n                <td colspan=\"7\" align = \"center\">No record available</td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n\r\n\r\n\r\n      <ng-template #customerFormModal let-close=\"close\">\r\n        <form [formGroup]=\"customerFormGroup\" class=\"custom_timebox p-0\">\r\n            <div class=\"modal-header py-1\">\r\n                    <h4 class=\"modal-title headerTitle mb-0\">{{mode | titlecase}} Customer</h4>\r\n                    <button type=\"button\" class=\"close\" (click)=\"closeModal();\">×</button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 form-group\">\r\n                        <label for=\"name\" class=\"labelTitles\"><b>Name</b></label><span class=\"required-asterisk\">*</span>\r\n                    </div>\r\n                    <div class=\"col-md-12 marginTop\">\r\n                        <input class=\"form-control labelValue\" [(ngModel)]=\"customerObject.name\"  formControlName=\"name\" placeholder=\"Enter name\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                        <div class=\"col-md-12 form-group\">\r\n                            <label for=\"email\" class=\"labelTitles\"><b>Email</b></label><span class=\"required-asterisk\">*</span>\r\n                        </div>\r\n                        <div class=\"col-md-12 marginTop\">\r\n                                <input type=\"email\"  [class.is-invalid] = \"customerFormGroup.get('emailId').invalid && customerFormGroup.get('emailId').touched\" class=\"form-control\" [(ngModel)]=\"customerObject.emailId\" formControlName=\"emailId\"\r\n                                placeholder=\"Enter email\">\r\n                         </div>\r\n                    </div>\r\n                \r\n                <div class=\"row \">\r\n                  <div class=\"col-md-12 form-group\">\r\n                      <label for=\"email\" class=\"labelTitles\"><b> Mobile Number</b></label><span class=\"required-asterisk\">*</span>\r\n                  </div>\r\n                  <div class=\"col-md-12 marginTop\">\r\n                          <input class=\"form-control\" [(ngModel)]=\"customerObject.mobileNumber\" formControlName=\"mobileNumber\"\r\n                          placeholder=\"Enter Mobile Number\">\r\n                          \r\n                   </div>\r\n                </div>\r\n\r\n                <div class=\"row \">\r\n                  <div class=\"col-md-12 form-group\">\r\n                      <label for=\"email\" class=\"labelTitles\"><b>Alternate Mobile Number</b></label>\r\n                  </div>\r\n                  <div class=\"col-md-12 marginTop\">\r\n                          <input class=\"form-control\" [(ngModel)]=\"customerObject.alternateMobileNumber\" formControlName=\"alternateMobileNumber\"\r\n                          placeholder=\"Enter Alternate Mobile Number\">\r\n                          \r\n                   </div>\r\n                </div>\r\n\r\n\r\n            <div class=\"row \">\r\n              <div class=\"col-md-12 form-group\">\r\n                  <label for=\"mobile\" class=\"labelTitles\"><b>Age</b></label>\r\n              </div>\r\n              <div class=\"col-md-12 marginTop\">\r\n                      <input class=\"form-control\" [(ngModel)]=\"customerObject.age\" formControlName=\"age\"\r\n                      placeholder=\"Enter Mobile\">\r\n                      \r\n               </div>\r\n        </div>\r\n\r\n\r\n\r\n            <div class=\"row\">\r\n              <div class=\"col-md-12 form-group\">\r\n                  <label for=\"name\" class=\"labelTitles\"><b>Sex</b></label>\r\n              </div>\r\n              <div class=\"col-md-12 marginTop\">\r\n                 <select formControlName=\"sex\" [(ngModel)]=\"customerObject.sex\" class=\"form-control\" name=\"sex\">\r\n                                        \r\n                                          <option *ngFor=\"let sex of sexList\" value=\"{{sex}}\" class=\"labelValue\">{{sex}}</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            \r\n\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 form-group\">\r\n              <label for=\"name\" class=\"labelTitles\">Address Line 1</label><span class=\"required-asterisk\">*</span>\r\n          </div>\r\n          <div class=\"col-md-12 marginTop\">\r\n              <input class=\"form-control labelValue\" formControlName=\"addressline1\" [(ngModel)]=\"customerObject.addressline1\" placeholder=\"Enter flatno / house no\">\r\n          </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 form-group\">\r\n            <label for=\"name\" class=\"labelTitles\">Address Line 2</label>\r\n        </div>\r\n        <div class=\"col-md-12 marginTop\">\r\n            <input class=\"form-control labelValue\" [(ngModel)]=\"customerObject.addressline2\" formControlName=\"addressline2\" placeholder=\"Enter Plot no\">\r\n        </div>\r\n    </div>\r\n\r\n      <div class=\"row \">\r\n        <div class=\"col-md-12 form-group\">\r\n            <label for=\"email\" class=\"labelTitles\"><b>Area </b></label><span class=\"required-asterisk\">*</span>\r\n        </div>\r\n        <div class=\"col-md-12 marginTop\">\r\n                <input  class=\"form-control\" [(ngModel)]=\"customerObject.area\" formControlName=\"area\"\r\n                placeholder=\"Enter area\">\r\n                \r\n         </div>\r\n  </div>\r\n\r\n  <div class=\"row \">\r\n    <div class=\"col-md-12 form-group\">\r\n        <label for=\"email\" class=\"labelTitles\"><b>P.O. </b></label><span class=\"required-asterisk\">*</span>\r\n    </div>\r\n    <div class=\"col-md-12 marginTop\">\r\n            <input class=\"form-control\" [(ngModel)]=\"customerObject.po\" formControlName=\"po\"\r\n            placeholder=\"Enter po\">\r\n            \r\n     </div>\r\n</div>\r\n\r\n<div class=\"row \">\r\n  <!--div class=\"col-md-12 form-group\">\r\n      <label for=\"email\" class=\"labelTitles\"><b>Pin </b></label><span class=\"required-asterisk\">*</span>\r\n  </div-->\r\n  <!--div class=\"col-md-12 marginTop\">\r\n          <input  class=\"form-control\" [(ngModel)]=\"customerObject.pin\" formControlName=\"pin\"\r\n          placeholder=\"Enter Pin\">\r\n          \r\n   </div-->\r\n   <div class=\"col-md-12\">\r\n    <div class=\"form-group\">\r\n      <label for=\"email\" class=\"labelTitles\"><b>Pin </b></label><span class=\"required-asterisk\">*</span>\r\n  \r\n        <ng-autocomplete \r\n        [data]=\"pinCodeList\"\r\n        [(ngModel)] = \"pinCode\"      \r\n        formControlName=\"pin\"\r\n        [searchKeyword]=\"keywordPin\"\r\n        (selected)='pincodeSelectEvent($event)'\r\n        (inputChanged)='onChangePincodeSearch($event)'      \r\n        [itemTemplate]=\"itemTemplate\"\r\n        [notFoundTemplate]=\"notFoundTemplate\">                                 \r\n        </ng-autocomplete>\r\n  \r\n  \r\n        <ng-template #itemTemplate id=\"itemTemplate\" let-item>\r\n        <a [innerHTML]=\"item.pinCode\"></a>\r\n        </ng-template>\r\n  \r\n        <ng-template #notFoundTemplate let-notFound>\r\n        <div [innerHTML]=\"notFound\"></div>\r\n        </ng-template>\r\n  \r\n        \r\n       \r\n    </div>\r\n</div>\r\n</div>\r\n\r\n<div class=\"row \">\r\n  <div class=\"col-md-12 form-group\">\r\n      <label for=\"email\" class=\"labelTitles\"><b>District </b></label>\r\n  </div>\r\n  <div class=\"col-md-12 marginTop\">\r\n          <input  class=\"form-control\" [(ngModel)]=\"customerObject.district\" formControlName=\"district\"\r\n          placeholder=\"Enter district\">\r\n          \r\n   </div>\r\n</div>\r\n\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n      <div class=\"form-group\">\r\n          <label class=\"labelTitles\">State </label>\r\n          <select formControlName=\"state\" [(ngModel)]=\"customerObject.state\" class=\"form-control\" name=\"state\"       >\r\n            \r\n              <option *ngFor=\"let state of states\" value=\"{{state}}\" class=\"labelValue\">{{state}}</option>\r\n          </select>\r\n         \r\n      </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"row \">\r\n  <div class=\"col-md-12 form-group\">\r\n      <label for=\"email\" class=\"labelTitles\"><b>Landmark </b></label>\r\n  </div>\r\n  <div class=\"col-md-12 marginTop\">\r\n          <input  class=\"form-control\" [(ngModel)]=\"customerObject.landmark\" formControlName=\"landmark\"\r\n          placeholder=\"Enter landmark\">\r\n          \r\n   </div>\r\n</div>\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n             </div>\r\n             <div class=\"modal-footer\">\r\n                <button [disabled]=\"!customerFormGroup.valid\" type=\"button\" class=\"btn btn-primary m-10\"\r\n                    (click)=\"save();\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"closeModal();\">Cancel</button>\r\n            </div>\r\n        </form>\r\n        <p *ngIf=\"submitAttempt\" class=\"cutomeerrortext\">\r\n                \r\n         <span class=\"redcolor ml-2\"><i class=\"fa fas fa-exclamation\"></i><b>&nbsp;Fix The Error : </b></span> {{form_fill_failure_msg}}\r\n          \r\n        </p>\r\n</ng-template>\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n<!--div class=\"my-container\">\r\n  <ngx-loading [show]=\"loading\"></ngx-loading>\r\n</div-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { CustomerRoutingModule } from './customer-routing.module';\r\nimport { CustomerComponent } from './customer.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AutocompleteLibModule,\r\n    NgxPaginationModule,\r\n    CustomerRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBorderRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [CustomerComponent]\r\n})\r\nexport class CustomerModule { }"]}