{"version":3,"sources":["webpack:///src/app/layout/category/ChangeTextDirective.ts","webpack:///src/app/layout/category/category-routing.module.ts","webpack:///src/app/layout/category/category.component.ts","webpack:///src/app/layout/category/category.component.html","webpack:///src/app/layout/category/category.module.ts"],"names":["ChangeTextDirective","Element","console","log","nativeElement","innerText","selector","routes","path","component","CategoryRoutingModule","forChild","imports","exports","CategoryComponent","datePipe","router","route","modal","toastr","_fb","dataService","loading","userKind","normalFiltereduserListArr","items","pageSize","RECORDSIZE","pageNo","tempArray","fromOrderPage","sexList","categoryObject","catValue","spclAttribute","active","categoryObjectBase","user","role","doctor","category","view","oldEmail","categoryFormGroup","group","required","fetchCategorys","openAddCategoryDialog","mode","Object","assign","modalReference","open","categoryFormModal","localStorage","getItem","navigate","fetchCategorysCount","valid","submitAttempt","validateFields","controls","JSON","stringify","addCategory","then","result","closeModal","form_fill_failure_msg","successToastr","err","updateCategory","event","applyFilter","pageOfItems","totalDocRecords","data","perPage","map","element","value","userInfo","categoryId","_id","templateUrl","styleUrls","providers","CategoryModule","forRoot","animationType","wanderingCubes","backdropBackgroundColour","backdropBorderRadius","primaryColour","secondaryColour","tertiaryColour","provide","useFactory","declarations"],"mappings":"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","file":"category-category-module-es5.js","sourcesContent":["import { Directive, ElementRef} from '@angular/core';\n@Directive({\n   selector: '[changeText]'\n})\n\nexport class ChangeTextDirective {\n   constructor(Element: ElementRef) {\n      console.log(Element);\n      Element.nativeElement.innerText=\"Text is changed by changeText Directive. \";\n   }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CategoryComponent } from './category.component';\r\n\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: CategoryComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CategoryRoutingModule { }\r\n","import { Component, OnInit,  ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router,ActivatedRoute } from '@angular/router';\r\nimport *  as moment from 'moment';\r\n\r\nimport { Config } from '../../config';\r\n\r\n\r\n\r\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { DatePipe } from '@angular/common';\r\nimport { BaseComponent } from 'src/BaseComponent';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\n@Component({\r\n  selector: 'app-category',\r\n  templateUrl: './category.component.html',\r\n  styleUrls: ['./category.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class CategoryComponent extends BaseComponent implements OnInit {\r\n\r\n  \r\n  public loading:boolean = true;\r\n  public closeResult: string;\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  \r\n  public userKind:string=\"category\"\r\n  normalFiltereduserListArr:any = [];\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('categoryFormModal') categoryFormModal: TemplateRef<any>;\r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  \r\n  categoryFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  fromOrderPage:boolean = false\r\n  sexList = [\"Male\",\"Female\"]\r\n  oldEmail:string\r\n     categoryObject = {\r\n    catValue:\"\",\r\n      spclAttribute:\"\",      \r\n      active:true      \r\n        \r\n    }\r\n    categoryObjectBase = {\r\n      catValue:\"\",\r\n      spclAttribute:\"\",      \r\n      active:true      \r\n        \r\n        \r\n    }\r\n  constructor(\r\n    private datePipe : DatePipe,\r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess,\r\n    \r\n    \r\n  ) {\r\n    super(router)\r\n\r\n    if(!this.user.role.doctor.category.view){\r\n      return\r\n    }\r\n    this.oldEmail = ''\r\n\r\n    this.categoryFormGroup = _fb.group({\r\n      catValue: new FormControl(this.categoryObject.catValue, Validators.required),\r\n      active: new FormControl(this.categoryObject.active),            \r\n      spclAttribute: new FormControl(this.categoryObject.spclAttribute),\r\n      \r\n    });\r\n\r\n    this.loading = false;    \r\n    this.fetchCategorys()   \r\n   \r\n  }\r\n  ngAfterViewInit(){\r\n    if(this.fromOrderPage){\r\n      this.openAddCategoryDialog()\r\n    }\r\n   \r\n  }\r\n  \r\n  openAddCategoryDialog(){\r\n    this.mode = \"add\"\r\n    this.categoryObject =Object.assign({}, this.categoryObjectBase); \r\n    this.modalReference = this.modal.open(this.categoryFormModal);\r\n  }\r\n  ngOnInit(){\r\n\r\n    \r\n\r\n    if (!localStorage.getItem('isLoggedin')) {\r\n      this.router.navigate([\"/login\"]);\r\n    }\r\n\r\n  \r\n\r\n    //this.pageSize = Config.RECORDSIZE;\r\n    //this.pageNo = 1\r\n    this.fetchCategorysCount()      \r\n    \r\n //   this.items = Array(150).fill(0).map((x, i) => ({ id: (i + 1), name: `Item ${i + 1}`})\r\n  };\r\n\r\n  save(){\r\n//alert(\"mode: \"+this.mode)\r\n    \r\n\r\n    if(!this.categoryFormGroup.valid){\r\n        this.submitAttempt = true;        \r\n        this.validateFields(this.categoryFormGroup.controls)                   \r\n        return; \r\n    } \r\n    \r\n\r\n    \r\n    if(this.mode == \"add\"){\r\n      console.log(\"this.categoryObject for add == \"+JSON.stringify(this.categoryObject))\r\n      this.dataService.addCategory(this.categoryObject).then((result) => {                \r\n        //  console.log(\"result after adduser == \"+JSON.stringify(result))\r\n          this.fetchCategorys()\r\n          this.mode = \"add\"\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('New Category is added successfully');\r\n      }, (err) => {        \r\n      console.log(err);\r\n      });\r\n    }if(this.mode == \"edit\"){\r\n      this.categoryObject['categoryId'] = this.categoryObject['_id']\r\n      console.log(\"this.categoryObject for edit == \"+JSON.stringify(this.categoryObject))\r\n      this.dataService.updateCategory(this.categoryObject).then((result) => {\r\n        //  console.log(\"****** updateCategory result   ===== **\"+JSON.stringify(result))\r\n          //this.loading = false;\r\n          this.mode = \"add\"   \r\n          this.fetchCategorys()\r\n          this.closeModal()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('Category is updated successfully'); \r\n      }, (err) => {\r\n        this.mode = \"add\"\r\n        //this.loading = false;\r\n        console.log(err);\r\n      });\r\n    }\r\n    \r\n}\r\nopenForeditCategory(user){\r\n\r\n  this.oldEmail = user['emailId']\r\n  this.categoryObject = Object.assign({}, user); \r\n\r\n  \r\n\r\n  //this.openAddCategoryDialog()\r\n  this.mode = \"edit\"\r\n  this.modalReference = this.modal.open(this.categoryFormModal);\r\n\r\n  //console.log(\"this.categoryObject.dateOfBirth **\"+this.categoryObject.dateOfBirth)\r\n  //this.userObject.userId = user._id\r\n  //this.role = user.role\r\n\r\n  \r\n  \r\n}\r\n  pageChanged(event){\r\n    console.log(\"****** this.event   ===== **\"+event)\r\n    this.pageNo = event\r\n    this.applyFilter()\r\n  }\r\n  userKindChange(){\r\n    this.pageNo = 1\r\n    \r\n    this.applyFilter()\r\n  }\r\n  applyFilter() {\r\n      \r\n    \r\n               \r\n    if( this.userKind && this.userKind==\"category\")  {      \r\n      this.fetchCategorys()\r\n    }\r\n \r\n   \r\n    \r\n  }\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n  \r\n\r\n  fetchCategorysCount(){\r\n  //  this.pageNo = 1\r\n  //  this.pageSize = 10\r\n    this.dataService.fetchCategorysCount().then((result) => {\r\n        \r\n        console.log(\"****** fetchCategorysCount result   ===== **\"+JSON.stringify(result))\r\n      this.totalDocRecords = result;\r\n      console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n\r\n      this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n  \r\n\r\n  fetchCategorys(){\r\n  //  this.pageNo = 1\r\n    //this.pageSize = 10\r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize}\r\n    this.dataService.fetchCategorys(data).then((result:[]) => {\r\n        \r\n      this.normalFiltereduserListArr = [];      \r\n\r\n        this.normalFiltereduserListArr = result.map(element => element)\r\n       // console.log(\"****** this.normalFiltereduserListArr   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))\r\n\r\n        this.loading = false;\r\n\r\n    }, (err) => {\r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n\r\n  }\r\n  \r\n  updateStatus(value, userInfo) {\r\n   // userInfo.active = value\r\n  //  console.log(\"****** userInfo   ===== **\"+JSON.stringify(userInfo))\r\n  let data ={}\r\n  userInfo.active = !userInfo.active\r\n  console.log(\"******  userInfo.active   ===== **\"+userInfo.active )\r\n    if( this.userKind && this.userKind==\"category\")  {    \r\n      userInfo.categoryId = userInfo._id\r\n      data['categoryId'] = userInfo._id\r\n      data['active'] = userInfo.active\r\n      console.log(\"****** userInfo   ===== **\"+JSON.stringify(data))\r\n\r\n          this.dataService.updateCategory(data).then((result) => {\r\n          //  console.log(\"****** updateCategory result   ===== **\"+JSON.stringify(result))\r\n\r\n            this.loading = false;\r\n      \r\n        }, (err) => {\r\n          this.loading = false;\r\n          console.log(err);\r\n        });\r\n    }\r\n \r\n  }\r\n\r\n  \r\n}","<div>\r\n  <app-page-header [heading]=\"'Medicine Categories'\" [icon]=\"'fa-user'\"></app-page-header>\r\n</div>\r\n\r\n  <div class=\"col-md-12\" >\r\n      \r\n          <!--div class=\"card-header\">\r\n              User type\r\n          </div-->\r\n          \r\n          \r\n                \r\n                <div class=\"col-md-12 text-right \" *ngIf=\"user.role.doctor.category.create\">                      \r\n                  <div class=\"content\">\r\n                    <button type=\"button\" class=\"btn btn-dark\" (click)=\"openAddCategoryDialog()\">Add Category</button>\r\n                  </div>\r\n              </div>        \r\n\r\n      <div class=\"card-body table-responsive marginLeft\"> <span class=\"pb-3 \"><b> List of existing {{userKind}}s </b>  </span>\r\n        <table class=\"table table-striped table-bordered table-sm\" *ngIf=\"userKind == 'category'\">\r\n          <thead>\r\n          <tr>\r\n            <th>Category ID</th>\r\n              <th>Category Name</th>\r\n              <th>Special Attribute</th>              \r\n              <th *ngIf=\"user.role.doctor.category.edit\">Enable/Disable</th>              \r\n              <th>Created Date</th>\r\n              <th *ngIf=\"user.role.doctor.category.edit\">Edit</th>              \r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n              <tbody *ngIf=\"normalFiltereduserListArr && normalFiltereduserListArr.length>0\">\r\n            \r\n              <tr *ngFor=\"let obj of normalFiltereduserListArr | paginate: { id:'forcategory', itemsPerPage: pageSize, currentPage: pageNo, totalItems: totalDocRecords }\">              \r\n                <td> {{obj?._id}} </td>\r\n              <td> {{obj?.catValue}} </td>\r\n              <td>{{obj.spclAttribute}}</td>              \r\n              <td *ngIf=\"user.role.doctor.category.edit\">               \r\n                <ui-switch [(ngModel)]=\"obj.active\" (change)=\"updateStatus($event, obj)\"></ui-switch>\r\n                    \r\n              </td>\r\n              \r\n      <td >{{convertToHumanDate(obj.createdDate)}}</td>\r\n      <td *ngIf=\"user.role.doctor.category.edit\" >\r\n        <button class=\"btn btn-dark\" (click)=\"openForeditCategory(obj)\"> Edit </button></td>    \r\n            </tr>\r\n          </tbody>\r\n          <div class=\"col-md-12 text-left clearfix \">\r\n          <pagination-controls class=\"my-pagination marginLeft\" *ngIf=\"userKind=='category'\" id=\"forcategory\" \r\n               (pageChange)=\"pageChanged($event)\"\r\n                      (pageBoundsCorrection)=\"pageChanged($event)\"                      \r\n                      directionLinks=\"true\"               maxSize=\"9\"\r\n                      directionLinks=\"true\"\r\n                      autoHide=\"true\"\r\n                      responsive=\"true\"\r\n                      previousLabel=\"Prev\"\r\n                      nextLabel=\"Next\"\r\n                      screenReaderPaginationLabel=\"Pagination\"\r\n                      screenReaderPageLabel=\"page\"\r\n                      screenReaderCurrentLabel=\"You're on page\"></pagination-controls >\r\n          </div>\r\n          <tbody *ngIf=\"(normalFiltereduserListArr && normalFiltereduserListArr.length==0)\">\r\n              <tr>\r\n                <td colspan=\"7\" align = \"center\">No record available</td>\r\n              </tr>\r\n            </tbody>\r\n        </table>\r\n      </div>\r\n\r\n\r\n\r\n      <ng-template #categoryFormModal let-close=\"close\">\r\n        <form [formGroup]=\"categoryFormGroup\" class=\"custom_timebox p-0\">\r\n            <div class=\"modal-header py-1\">\r\n                    <h4 class=\"modal-title headerTitle mb-0\">{{mode | titlecase}} Category</h4>\r\n                    <button type=\"button\" class=\"close\" (click)=\"closeModal();\">×</button>\r\n              </div>\r\n              <div class=\"modal-body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-12 form-group\">\r\n                        <label for=\"name\" class=\"labelTitles\"><b>Category Name</b></label><span class=\"required-asterisk\">*</span>\r\n                    </div>\r\n                    <div class=\"col-md-12 marginTop\">\r\n                        <input class=\"form-control labelValue\" [(ngModel)]=\"categoryObject.catValue\"  formControlName=\"catValue\" placeholder=\"Enter Category Name\">\r\n                    </div>\r\n                </div>\r\n\r\n                <!--pan changeText>Welcome to {{categoryObject.catValue}}.</span-->\r\n\r\n                \r\n                <div class=\"row \">\r\n                  <div class=\"col-md-12 form-group\">\r\n                      <label for=\"email\" class=\"labelTitles\"><b> Special Attribute</b></label>\r\n                  </div>\r\n                  <div class=\"col-md-12 marginTop\">\r\n                          <input class=\"form-control\" [(ngModel)]=\"categoryObject.spclAttribute\" formControlName=\"spclAttribute\"\r\n                          placeholder=\"Enter Special Attribute\">\r\n                          \r\n                   </div>\r\n                </div>\r\n\r\n\r\n\r\n             </div>\r\n             <div class=\"modal-footer\">\r\n                <button [disabled]=\"!categoryFormGroup.valid\" type=\"button\" class=\"btn btn-primary m-10\"\r\n                    (click)=\"save();\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"closeModal();\">Cancel</button>\r\n            </div>\r\n        </form>\r\n        <p *ngIf=\"submitAttempt\" class=\"cutomeerrortext\">\r\n                \r\n         <span class=\"redcolor ml-2\"><i class=\"fa fas fa-exclamation\"></i><b>&nbsp;Fix The Error : </b></span> {{form_fill_failure_msg}}\r\n          \r\n        </p>\r\n</ng-template>\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n<!--div class=\"my-container\">\r\n  <ngx-loading [show]=\"loading\"></ngx-loading>\r\n</div-->\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\nimport { CategoryRoutingModule } from './category-routing.module';\r\nimport { CategoryComponent } from './category.component';\r\n\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\nimport { ChangeTextDirective } from './ChangeTextDirective';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n\r\n    NgxPaginationModule,\r\n    CategoryRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBorderRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [CategoryComponent,ChangeTextDirective]\r\n})\r\nexport class CategoryModule { }"]}