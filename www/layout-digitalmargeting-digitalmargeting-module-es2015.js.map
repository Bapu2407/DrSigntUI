{"version":3,"sources":["./src/app/layout/digitalmargeting/digitalmargeting-routing.module.ts","./src/app/layout/digitalmargeting/digitalmargeting.component.ts","./src/app/layout/digitalmargeting/digitalmargeting.component.html","./src/app/layout/digitalmargeting/digitalmargeting.module.ts"],"names":[],"mappings":"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","file":"layout-digitalmargeting-digitalmargeting-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DigitalmargetingComponent } from './digitalmargeting.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: '', component: DigitalmargetingComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DigitalmargetingRoutingModule { }\r\n","import { Component, OnInit, NgZone, ViewChild, TemplateRef, ElementRef} from '@angular/core';\r\n\r\nimport { ToastrManager } from 'ng6-toastr-notifications';\r\nimport {  NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbAccordion,NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Router , ActivatedRoute} from '@angular/router';\r\nimport *  as moment from 'moment';\r\nimport { DataAccess } from 'src/app/services/data-access';\r\nimport { Config } from '../../config';\r\n\r\n\r\nimport { BaseComponentDM } from 'src/BaseComponentDM';\r\nimport { FormBuilder, FormGroup, FormControl, Validators,FormArray } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-digitalmargeting',\r\n  templateUrl: './digitalmargeting.component.html',\r\n  styleUrls: ['./digitalmargeting.component.scss'],\r\n  providers : [NgbModal]\r\n})\r\nexport class DigitalmargetingComponent extends BaseComponentDM implements OnInit {\r\n  loadingCustomeMsg:any = \"Loading...\"\r\n  otpVerified:boolean = false\r\n  randomOTP:any\r\n  sendOTPflag:boolean = false\r\n  verifyActionStart:boolean = false\r\n  \r\n  otpEnteredByUser:any = ''\r\n  @ViewChild('myname') input: ElementRef;\r\n  @ViewChild('fileInputDemoPhoto') fileInputDemoPhoto :ElementRef;;\r\n  fromOldImageList:boolean = false\r\n  public loading:boolean = true;\r\n  public isPrescriptionUploaded = false\r\n  showOldPrescription:any = ''\r\n  public closeResult: string;\r\n  enlargedPic:any\r\n  enlargedPrescPic:any\r\n  allDynaFilter = null\r\n  patientList:any = []\r\n  customerList:any = []\r\n  digitalmargetingStatus:string\r\n  digitalmargetingId:string\r\n  digitalmargetingDate:string\r\n  states = Config.states\r\n  keywordCustomer:string = \"name\"\r\n  fetchDigitalmargetingByCustomer:boolean = false\r\n  digitalmargetingList:any = []\r\n  public defaultPagination: number;\r\n  public advancedPagination: number;\r\n  public paginationSize: number;\r\n  public itemsPerPage : number;\r\n  public disabledPagination: number;\r\n  public isDisabled: boolean;\r\n  public collectionSize: number;\r\n  public currentPage: number;\r\n  prescriptionSource:any\r\n  fromCustomerPage:boolean = false\r\n  @ViewChild('acc') accordionComponent: NgbAccordion;\r\n  public userKind:string=\"digitalmargeting\"\r\n  normalFiltereduserListArr:any = [];\r\n  customerOldPrescriptionListArr:any = [];\r\n  \r\n  modalSearchFilerReference: NgbModalRef;\r\n  delModeList:any = [\r\n    {\"value\":\"Express\",\"name\":\"Express\"},\r\n    {\"value\":\"General\",\"name\":\"General\"}  ]\r\n\r\n  modalReferenceDigitalmargetingForm: NgbModalRef;\r\n  @ViewChild('content') content: TemplateRef<any>;   \r\n   items = [];\r\n   @ViewChild('digitalmargetingFormModal') digitalmargetingFormModal: TemplateRef<any>;\r\n   @ViewChild('searFiltersModal') searFiltersModal: TemplateRef<any>;\r\n   @ViewChild('enlargedImageModal') enlargedImageModal: TemplateRef<any>;\r\n   @ViewChild('enlargedPrescriptionModal') enlargedPrescriptionModal: TemplateRef<any>;\r\n\r\n   \r\n   pageOfItems: Array<any>;\r\n  public pageSize = Config.RECORDSIZE;\r\n  public pageNo = 1\r\n  tempArray: any[] = [];\r\n  totalDocRecords:any \r\n  digitalmargetingFormGroup: FormGroup;\r\n  totalPatientRecords:any\r\n  customDigitalmargetingtime : {\r\n    hour: 10,\r\n    minute: 20,\r\n\r\n};\r\nsearchByCustomer:boolean = false\r\nsearchByDigitalmargetingDate:boolean = false\r\nsearchByDigitalmargetingId:boolean = false\r\nsearchByStatus:boolean = false\r\n\r\n\r\nmedicineName:any\r\nkeywordMedicine = \"name\"\r\n  digitalmargetingObject =  \r\n  {     \r\n     name:\"\",\r\n  emailId:\"\",  \r\n  mobileNumber : \"9134683936\",\r\n    active : true,       \r\n    medicineList : [ \r\n      {\r\n        medicineId: '',             \r\n        medicineName : \"\",\r\n        quantity : \"\",\r\n        mg: '',\r\n        mrp:0,      \r\n        active:true,      \r\n        \"b2bPrice\" : \"\",\r\n        \"gst\" : \"0\",\r\n\r\n        \"hsnCode\" : \"0\",\r\n        \"vat\" : \"0\",\r\n        \"otherTax\" : \"0\",\r\n        \"discounts\" : \"0\",\r\n        \"medicineType\" : \"\",      \r\n        \"category\" : \"\"\r\n                \r\n      }\r\n    ],    \r\n    \r\n    uploadedFile:\"\",\r\n    uploadedFileURL:\"\",\r\n    deliveryMode:\"General\",\r\n    status : \"DigitalmargetingPlaced\"    \r\n  }\r\n\r\n  medicineArray:any = [[{\r\n    medicineId: '',             \r\n    medicineName : \"\",\r\n    quantity : \"\",\r\n    mg: '',\r\n    mrp:\"\",      \r\n    active:true,      \r\n    b2bPrice : \"\",\r\n    gst : \"0\",\r\n    hsnCode : \"0\",\r\n    vat : \"0\",\r\n    otherTax : \"0\",\r\n    discounts : \"0\",\r\n    medicineType : \"\",      \r\n    category : \"\"\r\n            \r\n  }]]\r\n  attendantList:any = []\r\n  digitalmargetingObjectBase =  \r\n  {    \r\n    name:\"\",\r\n    emailId:\"\",  \r\n    mobileNumber : \"9134683936\",\r\n    active : true,       \r\n    medicineList : [ \r\n      {\r\n        medicineId: '',             \r\n        medicineName : \"\",\r\n        quantity : \"\",\r\n        mg: '',\r\n        mrp:0,      \r\n        active:true,      \r\n        \"b2bPrice\" : \"\",\r\n        \"gst\" : \"0\",\r\n        \"hsnCode\" : \"0\",\r\n        \"vat\" : \"0\",\r\n        \"otherTax\" : \"0\",\r\n        \"discounts\" : \"0\",\r\n        \"medicineType\" : \"\",      \r\n        \"category\" : \"\"\r\n                \r\n      }\r\n    ],    \r\n    \r\n    uploadedFile:\"\",\r\n    uploadedFileURL:\"\",\r\n    deliveryMode:\"General\",\r\n    status : \"DigitalmargetingPlaced\"    \r\n  }\r\n  customer:any\r\n  customerName:any\r\n  customerId:any\r\n  doctorName:any\r\n  medicineListItems: FormArray;\r\n  openingMeridian : boolean = true;\r\n\r\n  constructor(    \r\n    public router: Router,\r\n    private route: ActivatedRoute,\r\n    private modal: NgbModal,\r\n    public toastr: ToastrManager,\r\n    private _fb: FormBuilder,    \r\n    public dataService: DataAccess   \r\n    \r\n  ) {\r\n    super(router)\r\n  //  this.customDigitalmargetingtime.hour = 9\r\n   // this.customDigitalmargetingtime.minute = 10\r\n\r\n\r\n      \r\n    \r\n\r\n     this.digitalmargetingFormGroup = this.buildForm()\r\n\r\n    this.openforAddDigitalmargetingDialog()\r\n\r\n    this.loading = false\r\n    //this.createMedicineItem()\r\n\r\n    //this.digitalmargetingFormGroup.valueChanges.subscribe(data => console.log('form changes', data));\r\n   // this.loading = false;    \r\n    //this.fetchDigitalmargetings()   \r\n    \r\n  }\r\n   gfg() { \r\n    var minm = 10000; \r\n    var maxm = 99999; \r\n    this.randomOTP = Math.floor(Math \r\n    .random() * (maxm - minm + 1)) + minm; \r\n} \r\n\r\nbuildForm(){\r\n return this._fb.group({\r\n    name: new FormControl(this.digitalmargetingObject.name, Validators.required),\r\n    emailId: new FormControl(this.digitalmargetingObject.emailId, [\r\n      \r\n      Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]),    \r\n  mobileNumber: new FormControl(this.digitalmargetingObject.mobileNumber, [\r\n    Validators.required,\r\n    Validators.pattern(\"^[0-9]*$\"),\r\n    Validators.minLength(10),\r\n  ]),\r\n  otpEnteredByUser:new FormControl(''),\r\n    uploadedFile: new FormControl(this.digitalmargetingObject.uploadedFile, Validators.required),\r\n    //medicineName: new FormControl(this.digitalmargetingObject.attendantID, Validators.required),\r\n    //quantity: new FormControl(this.digitalmargetingObject.name, Validators.required),\r\n    medicineListItems: this._fb.array([this.createMedicineItem()])\r\n  });\r\n}\r\n  sendOTP()\r\n  {\r\n\r\n\r\n    try{    \r\n      this.otpEnteredByUser = ''\r\n      this.sendOTPflag = true\r\n      this.verifyActionStart = false\r\n      \r\n      this.gfg()\r\n      let mobileNUmber  =  this.digitalmargetingFormGroup.controls.mobileNumber.value\r\n\r\n    \r\n    console.log(\"this.mobileNumber ==\"+ mobileNUmber)\r\n\r\n    console.log(\"this.digitalmargetingObject.mobileNumber ==\"+this.digitalmargetingObject.mobileNumber)\r\n\r\n    console.log(\"this.digitalmargetingFormGroup.get('mobileNumber').valid ==\"+this.digitalmargetingFormGroup.get('mobileNumber').valid)\r\n\r\n    console.log(\"this.digitalmargetingFormGroup.get('mobileNumber').touched ) ==\"+this.digitalmargetingFormGroup.get('mobileNumber').touched )\r\n\r\n   \r\n    console.log(\"this.randomOTP ==\"+this.randomOTP )\r\n    // \r\n    if(this.digitalmargetingObject.mobileNumber && this.digitalmargetingObject.mobileNumber.length >=0 && this.digitalmargetingFormGroup.get('mobileNumber').valid && this.digitalmargetingFormGroup.get('mobileNumber').touched){\r\n      \r\n      this.loading = true\r\n      let otpData = {otp:this.randomOTP,phone:this.digitalmargetingObject.mobileNumber}\r\n      \r\n      \r\n      \r\n      setTimeout(() => {\r\n        this.dataService.sendOTP(otpData).then((result:any) => {\r\n          this.loading = false;          \r\n        }, (err) => {\r\n          this.toastr.errorToastr('problem in sending OTP, please resend OTP,'+err.message);\r\n          this.loading = false;          \r\n        console.log(err);\r\n        });      \r\n    }, 3000);\r\n  \r\n  \r\n    }else{\r\n      alert(\"please enter a valid mobile number first\")\r\n    }\r\n\r\n  }catch(err){\r\n        \r\n    console.log(err);\r\n  }\r\n  }\r\n  verifyOTP(){\r\n\r\n    this.verifyActionStart = true\r\n    //console.log(\"this.randomOTP ==\"+this.randomOTP )\r\n    //console.log(\"this.otpEnteredByUser ==\"+this.otpEnteredByUser )\r\n\r\n    if(!this.otpVerified && this.otpEnteredByUser != this.randomOTP){\r\n      alert(\"You've entered a wrong OTP \")\r\n\r\n    }else{\r\n      this.otpVerified = true\r\n      \r\n    }\r\n\r\n  }\r\n  getControls() {\r\n    return (this.digitalmargetingFormGroup.get('medicineListItems') as FormArray).controls;\r\n  }\r\n  gotoCustomerPage(){\r\n    this.router.navigate([\"/customer\",{fromDigitalmargetingPage:'fromDigitalmargetingPage'}]);\r\n  }\r\n  openCustomerPage(){\r\n    this.router.navigate([\"/customer\"]);\r\n  }\r\n  createMedicineItem(): FormGroup {\r\n    return this._fb.group({\r\n      medicineId: new FormControl(),\r\n      medicineName: new FormControl(),\r\n      mg: new FormControl(),\r\n      quantity: new FormControl(),      \r\n      mrp:new FormControl(),            \r\n       b2bPrice : new FormControl() ,\r\n       hsnCode : new FormControl(),\r\n        gst : new FormControl(),\r\n        //vat : \"0\",\r\n        otherTax : new FormControl(),\r\n        discounts : new FormControl(),\r\n        medicineType : new FormControl(),      \r\n        category : new FormControl()\r\n    });\r\n  }\r\n\r\n  createMedicineItemDuringEdit(medicine): FormGroup {\r\n    return this._fb.group({\r\n      medicineId: new FormControl(),\r\n      medicineName: new FormControl(),\r\n      mg: new FormControl(),\r\n      quantity: new FormControl(),      \r\n      mrp:new FormControl(),            \r\n       b2bPrice : new FormControl() ,\r\n       hsnCode : new FormControl(),\r\n        gst : new FormControl(),\r\n        //vat : \"0\",\r\n        otherTax : new FormControl(),\r\n        discounts : new FormControl(),\r\n        medicineType : new FormControl(),      \r\n        category : new FormControl()\r\n    });\r\n  }\r\n\r\n/*\r\n  ngAfterViewInit(){\r\n    this.dataService.fetchAllPatients().then((result:[]) => {\r\n      this.patientList = result.map(element => element)\r\n    }, (err) => {\r\n        //console.log(err);\r\n    });\r\n\r\n   \r\n  }\r\n  */\r\n  getDigitalmargeting(){\r\n\r\n  }\r\n  addItem(): void {\r\n    this.medicineListItems = this.digitalmargetingFormGroup.get('medicineListItems') as FormArray;\r\n    this.medicineListItems.push(this.createMedicineItem());\r\n  }\r\n\r\n  removeItem(i){\r\n\r\n     this.medicineListItems = this.digitalmargetingFormGroup.get('medicineListItems') as FormArray;\r\n    this.medicineListItems.removeAt(i)  \r\n\r\n  }\r\n\r\n \r\n  closeSearchModal(){\r\n    //if(this.modalSearchFilerReference)\r\n    //this.modalSearchFilerReference.close();\r\n    if(this.modalSearchFilerReference)\r\n    this.modalSearchFilerReference.dismiss()\r\n  }\r\n \r\n   openforAddDigitalmargetingDialog(){\r\n\r\ntry{\r\n     //this.medicineListItems.push({})\r\n     this.digitalmargetingObject = Object.assign({}, this.digitalmargetingObjectBase); \r\n\r\n    this.customerOldPrescriptionListArr = []; \r\n    this.customerId = ''\r\n    /*\r\n    if(this.customerId == undefined || !this.customerId || this.customerId == ''){\r\n     alert(\"Please select a customer first, from the dropdown\")\r\n     return\r\n    }\r\n    */\r\n    this.mode = \"add\"\r\n    //this.modalReferenceDigitalmargetingForm = this.modal.open(this.digitalmargetingFormModal);\r\n    \r\n    this.digitalmargetingFormGroup = this.buildForm()\r\n    this.medicineListItems = this.digitalmargetingFormGroup.get('medicineListItems') as FormArray;\r\n   // \r\n  }catch(e){\r\n    console.log(e)\r\n  }\r\n \r\n  }\r\n  getPatient(){\r\n\r\n  }\r\n \r\n  ngOnInit(){\r\n\r\n\r\n    \r\n\r\n  };\r\n\r\n  \r\n    \r\n  save(){\r\n\r\n\r\n    if(!this.otpVerified){\r\n     // this.verifyOTP()\r\n      alert(\"Please verify your mobile with an OTP first\")\r\n      return\r\n    }\r\n    if(!this.digitalmargetingFormGroup.valid){\r\n        this.submitAttempt = true;        \r\n        this.validateFields(this.digitalmargetingFormGroup.controls)                   \r\n        return; \r\n    } \r\n   let medicineListItems = []\r\n    for(var i = 0 ; i< this.medicineListItems.length ; i++){      \r\n        let formObject = this.medicineListItems.at(i)              \r\n        //let medicineObj = formObject.get('medicineName').value\r\n         medicineListItems.push({\r\n          //medicineId: formObject.get('medicineId')?.value,\r\n          medicineName: formObject.get('medicineName')?.value,\r\n          //mg: formObject.get('mg')?.value,\r\n          quantity: formObject.get('quantity')?.value\r\n          \r\n          \r\n         })        \r\n        \r\n\r\n    }\r\n    this.digitalmargetingObject.medicineList = []\r\n    this.digitalmargetingObject.medicineList = medicineListItems\r\n    //this.digitalmargetingObject.customerId = this.customerId\r\n  \r\n\r\n//    console.log(\"digitalmargeting this.digitalmargetingObject **\"+JSON.stringify(this.digitalmargetingObject))\r\n//this.fromOldImageList = false\r\n\r\n    if(this.mode == \"add\"){\r\n      delete this.digitalmargetingObject['customer']\r\n      console.log(\"this.digitalmargetingObject for add == \"+JSON.stringify(this.digitalmargetingObject))\r\n      this.dataService.addDigitalmargeting(this.digitalmargetingObject).then((result) => {                \r\n        //  console.log(\"result after adduser == \"+JSON.stringify(result))\r\n        this.commonAfterSaveCode()\r\n\r\n          this.reinitialise()\r\n          this.form_fill_failure_msg = \"\"\r\n          this.toastr.successToastr('New digitalmargeting is added successfully');\r\n\r\n        //  this.fromOldImageList = false\r\n\r\n      }, (err) => {        \r\n      console.log(err);\r\n      });\r\n      \r\n    }\r\n    \r\n}\r\n\r\ncommonAfterSaveCode(){\r\n  this.customerId = ''\r\n          this.loading = true;\r\n         // this.normalFiltereduserListArr = []; \r\n          this.closeMainModal()\r\n          setTimeout(() => {\r\n            this.loading = false;\r\n            this.mode = \"add\"   \r\n          //  this.fetchDigitalmargetings()\r\n            \r\n        }, 2000);\r\n      \r\n}\r\nenlargePic(){\r\n  //alert(\"trying to enlarge\")\r\n  //let image  = this.digitalmargetingObject.uploadedFileURL   \r\n  //this.enlargedPic = image\r\n  //this.enlargedPrescPic = ''\r\n  //this.closeCustomModal2()\r\n  this.modalReferenceImage = this.modal.open(this.enlargedImageModal); \r\n}\r\nenlargePrescription(obj){\r\n  //this.closeCustomModal()\r\n  //this.enlargedPic = ''\r\n  let image  = obj.uploadPhotoDigitalmargetingPrescriptionURL    \r\n  this.enlargedPrescPic = image\r\n  this.modalReferencePrescriptionImage = this.modal.open(this.enlargedPrescriptionModal); \r\n}\r\n\r\nselectPrescription(obj){\r\n // let image  = obj.uploadPhotoDigitalmargetingPrescriptionURL    \r\n  //  this.enlargedPrescPic = image\r\n  //this.modalReferenceImage = this.modal.open(this.enlargedPrescriptionModal); \r\n  \r\n  obj.selectValue = true\r\n\r\n  for ( var i in  this.customerOldPrescriptionListArr){\r\n    let oldPresc = this.customerOldPrescriptionListArr[i]\r\n    if(oldPresc._id == obj._id){\r\n      continue\r\n    }else{\r\n      //this.customerOldPrescriptionListArr.splice(i, 1);\r\n      oldPresc.selectValue = false\r\n      //this.customerOldPrescriptionListArr.splice(i, 1,oldPresc);\r\n    }\r\n  }\r\n  this.digitalmargetingObject.uploadedFile = obj.uploadPhotoDigitalmargetingPrescription\r\n  this.digitalmargetingObject.uploadedFile = \"data:image/jpg;base64,\"+this.digitalmargetingObject.uploadedFile\r\n  this.digitalmargetingObject.uploadedFileURL = obj.uploadPhotoDigitalmargetingPrescriptionURL\r\n\r\n  this.digitalmargetingFormGroup.get('uploadedFile').patchValue(this.digitalmargetingObject.uploadedFile);\r\n\r\n  console.log(\"obj ==\"+JSON.stringify(obj))\r\n  //this.getPhotoOLDPrescription(obj.uploadPhotoDigitalmargetingPrescriptionURL)\r\n  //this.showOldPrescription  = 'url(' + obj.uploadPhotoDigitalmargetingPrescriptionURL + ')'\r\n}\r\n\r\ngetPhotoOLDPrescription(image) {\r\n  try {\r\n    \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   console.log('Error', error);\r\n  }\r\n}\r\n\r\ngetPhoto(photoType) {\r\n  try {\r\n    console.log(\"in getPhoto == this.digitalmargetingObject.uploadedFileURL == \"+this.digitalmargetingObject.uploadedFileURL)\r\n    let image  = this.digitalmargetingObject.uploadedFileURL\r\n\r\n\r\n    image  = this.digitalmargetingObject.uploadedFile\r\n    \r\n    \r\n\r\n\r\n    //alert(this.fromOldImageList)\r\n\r\n    this.enlargedPic = image\r\n   \r\n    //this.fromOldImageList = false\r\n\r\n\r\n   //let  image = \"data:image/jpg;base64,\"+this.digitalmargetingObject.uploadedFile\r\n   /* if(photoType == 'prescription'){\r\n      image  = this.digitalmargetingObject.uploadedFileURL\r\n      if(!image && this.digitalmargetingObject.uploadedFile){\r\n        image = \"data:image/jpg;base64,\"+this.digitalmargetingObject.uploadedFile\r\n\r\n        this.digitalmargetingObject.uploadedFile = \"data:image/jpg;base64,\"+this.digitalmargetingObject.uploadedFile\r\n\r\n      }\r\n    }*/\r\n    \r\n   \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   console.log('Error', error);\r\n  }\r\n}\r\ncapturePhoto(event,photoType){\r\n  //  alert(\"I am clicked\")\r\n    let reader = new FileReader();\r\n\r\n    \r\n    try {\r\n      reader.onload = (readerEvent) => {\r\n\r\n        let imageData = (readerEvent.target as any).result;\r\n        this.enlargedPic = imageData\r\n        \r\n      console.log(\"in capturePhoto imageData == \"+imageData)\r\n\r\n\r\n        if(photoType == 'prescription')\r\n          this.digitalmargetingObject.uploadedFile =  imageData;\r\n\r\n          //var dataURL = reader.result;\r\n          //this.digitalmargetingObject.uploadedFileURL  =  imageData;\r\n\r\n          this.digitalmargetingFormGroup.get('uploadedFile').patchValue(this.digitalmargetingObject.uploadedFile);\r\n          //this.isPrescriptionUploaded = true\r\n\r\n      };\r\n\r\n      \r\n      this.digitalmargetingObject.uploadedFileURL = event.target.files[0]\r\n\r\n      console.log(\"in capturePhoto this.digitalmargetingObject.uploadedFileURL == \"+this.digitalmargetingObject.uploadedFileURL)\r\n\r\n\r\n      reader.readAsDataURL(event.target.files[0]);\r\n      var image = document.getElementById('output');\r\n      this.prescriptionSource = URL.createObjectURL(event.target.files[0]);\r\n      document.getElementById('output').setAttribute( 'src',  URL.createObjectURL(event.target.files[0]));\r\n      console.log(\"this.prescriptionSource == \"+this.prescriptionSource)\r\n      //this.prescriptionSource = event.target.files[0];\r\n\r\n      \r\n    }\r\n    catch(error) {\r\n     console.log('Error', error);\r\n    }\r\n  }\r\n\r\ngetPhotoOldPrescription(obj) {\r\n  try {\r\n    let image  = obj.uploadPhotoDigitalmargetingPrescriptionURL\r\n    \r\n      image  = obj.uploadPhotoDigitalmargetingPrescriptionURL\r\n      /*if(obj && obj.uploadPhotoDigitalmargetingPrescription){\r\n        image = obj.uploadPhotoDigitalmargetingPrescription\r\n      }\r\n    */\r\n  //  this.enlargedPic = image\r\n   \r\n    \r\n    return 'url(' + image + ')'\r\n  }\r\n  catch(error) {\r\n   // //console.log('Error', error);\r\n  }\r\n}\r\n\r\ncommonCodeDuringEdit(){\r\n\r\n  \r\n  this.digitalmargetingFormGroup = this._fb.group({\r\n    customerId: new FormControl(this.customerId, Validators.required),      \r\n    uploadedFile: new FormControl(this.digitalmargetingObject.uploadedFile, Validators.required),\r\n    deliveryMode: new FormControl(this.digitalmargetingObject.deliveryMode, Validators.required),      \r\n    //medicineName: new FormControl(this.digitalmargetingObject.attendantID, Validators.required),\r\n    //quantity: new FormControl(this.digitalmargetingObject.name, Validators.required),\r\n    status: new FormControl(this.digitalmargetingObject.status, Validators.required),      \r\n    medicineListItems: this._fb.array([ this.createMedicineItem() ])\r\n  });\r\n  \r\n\r\n  this.digitalmargetingFormGroup.get('uploadedFile').patchValue(this.digitalmargetingObject.uploadedFile);\r\n\r\n  //console.log(\"this.digitalmargetingObject ==\"+JSON.stringify(this.digitalmargetingObject))\r\n  let dateTimeArray = []\r\n  this.medicineListItems = this.digitalmargetingFormGroup.get('medicineListItems') as FormArray;\r\n  this.medicineListItems.removeAt(0)  \r\n\r\n\r\n    \r\n  for(var i in this.digitalmargetingObject.medicineList){\r\n      let medicine = this.digitalmargetingObject.medicineList[i]      \r\n     // dateTimeArray.push({date:date,time:time})\r\n    //this.medicineListItems.push({date:date,time:time})\r\n    \r\n    this.medicineListItems.push(this._fb.group({      \r\n          medicineId: medicine.medicineId,             \r\n          medicineName : medicine.medicineName,\r\n          quantity : medicine.quantity,\r\n          mg: medicine.mg  ,\r\n          mrp: medicine.mrp,\r\n          active: medicine.active,\r\n          b2bPrice: medicine.b2bPrice,\r\n          gst: medicine.gst,          \r\n          hsnCode: medicine.hsnCode,\r\n          otherTax: medicine.otherTax,\r\n          discounts: medicine.discounts,\r\n          medicineType: medicine.medicineType,\r\n          category: medicine.category                          \r\n      \r\n    }))\r\n  }\r\n\r\n  console.log(\"this.medicineListItems **\"+this.medicineListItems.length)\r\n  \r\n  \r\n  //this.digitalmargetingObject.attendantID = earlierAttendent\r\n\r\n  //this.digitalmargetingFormGroup.get('medicineListItems').patchValue(dateTimeArray)\r\n  //addItem\r\n //setTimeout(() => {\r\n  //try{\r\n  //  this.modalReferenceDigitalmargetingForm = this.modal.open(this.digitalmargetingFormModal);\r\n  //}catch(error){\r\n//    console.log(error)\r\n  //}\r\n//}, 2000);\r\n  //setTimeout(() => {\r\n   \r\n}\r\ncheckStatusChange(){\r\n  console.log(\"status **\"+this.digitalmargetingObject['status'] )\r\n}\r\ncheckDeliveryMode(){\r\n  console.log(\"deliverymode **\"+this.digitalmargetingObject.deliveryMode )\r\n}\r\n openForeditDigitalmargeting(user){\r\n\r\n  //this.input.nativeElement.focus();\r\n  //this.fromOldImageList = false\r\n\r\n//  console.log(\"digitalmargeting object **\"+JSON.stringify(user))\r\n  //this.modalReferenceDigitalmargetingForm = this.modal.open(this.digitalmargetingFormModal);\r\n\r\n  this.loading = true\r\n  this.loadingCustomeMsg == \"Fetching old prescriptions, please wait..\"\r\n  this.mode = \"edit\"\r\n  \r\n  //this.digitalmargetingObject = Object.assign({}, this.digitalmargetingObjectBase); \r\n  this.customerId = user['customerId']\r\n  this.digitalmargetingObject = Object.assign({}, user); \r\n\r\n\r\n  console.log(\"deliverymode **\"+this.digitalmargetingObject['deliveryMode'] )\r\n\r\n  this.modalReferenceDigitalmargetingForm = this.modal.open(this.digitalmargetingFormModal);\r\n\r\n  //console.log(\"digitalmargeting in EDIT this.digitalmargetingObject **\"+JSON.stringify(this.digitalmargetingObject))\r\n\r\n  console.log(\"this.customerId == \"+this.customerId)\r\n\r\n  //if(this.customerId)\r\n  //this.fetchAllDigitalmargetingPrescriptions()  \r\n\r\n  let data ={customerId:this.customerId}\r\n  this.commonCodeDuringEdit()\r\n  console.log(\" fetch old prescription for \"+JSON.stringify(data))\r\n  this.dataService.fetchAllDigitalmargetingPrescriptions(data).then((result:[]) => {        \r\n    this.customerOldPrescriptionListArr = []; \r\n\r\n    setTimeout(() => {\r\n      if(result){\r\n        for(var i in result){\r\n          let obj:any = result[i]\r\n          obj['selectValue'] = false\r\n          this.customerOldPrescriptionListArr.push(obj)\r\n\r\n        }\r\n      }  \r\n      this.loading = false\r\n   //   this.commonCodeDuringEdit()\r\n  },1000)\r\n  }, (err) => {\r\n\r\n    //this.commonCodeDuringEdit()\r\n    this.customerOldPrescriptionListArr = []; \r\n    this.loading = false;\r\n    console.log(err);\r\n  });\r\n \r\n  \r\n  \r\n}\r\n\r\n  reinitialise(){\r\n    this.searchByDigitalmargetingDate = false\r\n    this.searchByDigitalmargetingId = false\r\n    this.searchByCustomer = false\r\n    this.searchByStatus = false\r\n    this.digitalmargetingDate = ''\r\n    this.customerId = ''\r\n    this.digitalmargetingId = ''\r\n    this.digitalmargetingStatus = ''\r\n    this.customerName = ''\r\n    this.allDynaFilter = null\r\n    this.fetchDigitalmargetingsCount()\r\n    this.totalDocRecords = 0\r\n    this.fetchDigitalmargetings()\r\n    this.digitalmargetingObject = Object.assign({}, this.digitalmargetingObjectBase); \r\n    this.mode = \"add\"\r\n    this.medicineListItems = this.digitalmargetingFormGroup.get('medicineListItems') as FormArray;\r\n  }\r\n  reset(){\r\n    this.reinitialise()\r\n    this.toastr.successToastr('Filters reset, digitalmargeting list refreshed');\r\n  }\r\n  pageChanged(event){\r\n    console.log(\"****** this.event   ===== **\"+event)\r\n    this.pageNo = event\r\n    this.applyFilter()\r\n  }\r\nsearchByFilters(){\r\n  let dynaFilterArry = []\r\n  let dynaFilter = {}\r\n // let allDynaFilter = {}\r\n  if(this.searchByDigitalmargetingDate && this.digitalmargetingDate){\r\n    let converteddate = this.fromJsDateToLocationdateTimeFormat(this.digitalmargetingDate)\r\n    dynaFilter['createdDate'] = converteddate\r\n    dynaFilterArry.push({createdDate:converteddate}) \r\n    console.log(\"converteddate **\"+converteddate) \r\n    //moment(new Date()).format('YYYY-MM-DD[T00:00:00.000Z]'\r\n\r\n    //var dateTime = new Date(this.digitalmargetingDate);\r\n    /*\r\n    var dateTime1dayAgo = moment(this.digitalmargetingDate,\"YYYY-MM-DD HH:mm:ss\").subtract(1,'d').format('YYYY-MM-DD[T00:00:00.000Z]');\r\n    var dateTime1dayLater = moment(this.digitalmargetingDate,\"YYYY-MM-DD HH:mm:ss\").add(1,'days').format('YYYY-MM-DD[T00:00:00.000Z]');\r\n    dynaFilter['createdDate'] = {\"$gt\": dateTime1dayAgo}     \r\n    //console.log(\"this.digitalmargetingDate **\"+converteddate)    \r\n    console.log(\"this.digitalmargetingDate **\"+this.digitalmargetingDate) \r\n    dynaFilterArry.push({createdDate:{\"$gt\": dateTime1dayAgo} })     \r\n    dynaFilterArry.push({createdDate:{\"$lt\": dateTime1dayLater} }) \r\n    */\r\n\r\n  }\r\n  if(this.searchByCustomer && this.customerId){\r\n    //dynaFilter['customerId'] = this.customerId   \r\n    dynaFilterArry.push({customerId:this.customerId }) \r\n  }\r\n  if(this.searchByDigitalmargetingId && this.digitalmargetingId){\r\n    //dynaFilter['digitalmargetingId'] = this.digitalmargetingId   \r\n    dynaFilterArry.push({digitalmargetingId:this.digitalmargetingId }) \r\n  }\r\n  if(this.searchByStatus && this.digitalmargetingStatus){\r\n    //dynaFilter['status'] = this.digitalmargetingStatus   \r\n    dynaFilterArry.push({status:this.digitalmargetingStatus})    \r\n  }\r\n  this.allDynaFilter = {$and:dynaFilterArry} \r\n  \r\n  \r\n  this.fetchDigitalmargetingsCount()  \r\n  this.fetchDigitalmargetings()     \r\n  \r\n\r\n  this.closeSearchModal()\r\n  this.toastr.successToastr('Searching Done');\r\n          \r\n\r\n  \r\n}\r\ncloseMainModal() {\r\n     \r\n  if(this.modalReferenceDigitalmargetingForm)\r\n    this.modalReferenceDigitalmargetingForm.close();\r\n\r\n    this.fromOldImageList = false\r\n  \r\n}\r\n  userKindChange(){\r\n    this.pageNo = 1\r\n    \r\n    this.applyFilter()\r\n  }\r\n  applyFilter() {  \r\n    if(this.customerId != undefined && this.customerId && this.customerId != ''){\r\n      this.fetchDigitalmargetingByCustomer = true\r\n    }else{\r\n      this.fetchDigitalmargetingByCustomer = false\r\n    }\r\n\r\n    console.log(\"this.customerId \"+this.customerId)    \r\n        \r\n    this.fetchDigitalmargetingsCount()  \r\n    this.fetchDigitalmargetings()    \r\n    \r\n  }\r\n  onChangePage(pageOfItems: Array<any>) {\r\n    // update current page of items\r\n    this.pageOfItems = pageOfItems;\r\n    this.pageNo = 1\r\n\r\n}\r\n \r\n  \r\ncustomerSelectEvent(item) {\r\n  if(item){\r\n  this.digitalmargetingFormGroup.get('customerId').patchValue(item['_id']);\r\n  this.customerId = item['_id']\r\n\r\n  if(this.customerId){\r\n    this.loading = true\r\n    this.loadingCustomeMsg == \"Fetching old prescriptions, please wait..\"\r\n    this.fetchAllDigitalmargetingPrescriptions()   \r\n  }\r\n  //console.log(\" inside customerSelectEvent \"+JSON.stringify(item))\r\n  }\r\n  // do something with selected item\r\n}\r\n\r\nonChangeCustomerSearch(val: string) {\r\n  //console.log(\" inside onChangePatientSearch val \"+val)\r\n // if(val && val.length >2 ){\r\n  let data = {name:val}\r\n  this.dataService.fetchAllCustomers(data).then((result:[]) => {\r\n    this.customerList = result.map(element => element)\r\n  }, (err) => {\r\n      //console.log(err);\r\n  });\r\n // }\r\n}\r\n\r\n\r\n\r\n  fetchDigitalmargetingsCount(){\r\n  \r\n   let data = {pageNo:this.pageNo,perPage:this.pageSize,filter : this.allDynaFilter}\r\n   // this.fetchDigitalmargetingsCount({filter : allDynaFilter})  \r\n    //this.fetchDigitalmargetingsByFilters({filter : allDynaFilter})   \r\n    console.log(\" inside data \"+JSON.stringify(data))\r\n  \r\n    this.dataService.fetchDigitalmargetingsCount(data).then((result) => {\r\n          \r\n      console.log(\"****** fetchdigitalmargetingsCount result   ===== **\"+JSON.stringify(result))\r\n    this.totalDocRecords = result;\r\n    this.loading = false;\r\n\r\n    console.log(\"****** this.totalDocRecords ===== **\"+this.totalDocRecords)\r\n  \r\n  }, (err) => {\r\n    this.loading = false;\r\n    console.log(err);\r\n  });\r\n  }\r\n \r\n   fetchAllDigitalmargetingPrescriptions(){\r\n    \r\n    let data ={customerId:this.customerId}\r\n\r\n    console.log(\" fetch old prescription for \"+JSON.stringify(data))\r\n    this.dataService.fetchAllDigitalmargetingPrescriptions(data).then((result:[]) => {        \r\n     \r\n     /* this.customerOldPrescriptionListArr = []; \r\n      if(this.customerOldPrescriptionListArr.length >0 ){\r\n        this.customerOldPrescriptionListArr = result.map(element => {        \r\n          //let obj = element \r\n         // element['selectValue'] = false\r\n\r\n          //return   element\r\n          return Object.assign({}, element, {\r\n            selectValue: false\r\n          })\r\n        \r\n        }\r\n        )\r\n      }\r\n      */\r\n\r\n     this.customerOldPrescriptionListArr = []; \r\n     if(result){\r\n       for(var i in result){\r\n         let obj:any = result[i]\r\n         obj['selectValue'] = false\r\n         this.customerOldPrescriptionListArr.push(obj)\r\n \r\n       }\r\n     }\r\n     //   console.log(\"****** this.customerOldPrescriptionListArr   ===== **\"+JSON.stringify(this.customerOldPrescriptionListArr))      \r\n        this.loading = false;\r\n  \r\n    }, (err) => {\r\n      this.customerOldPrescriptionListArr = []; \r\n      this.loading = false;\r\n      console.log(err);\r\n    });\r\n  }\r\n  fetchDigitalmargetings(){\r\n  \r\n    let data = {pageNo:this.pageNo,perPage:this.pageSize,filter : this.allDynaFilter}\r\n \r\n  this.dataService.fetchDigitalmargetings(data).then((result:any) => {        \r\n    this.normalFiltereduserListArr = []; \r\n      //this.normalFiltereduserListArr = result.map(element => {        \r\n       // return   element\r\n     // })\r\n\r\n    for(var i in result){\r\n      let digitalmargetingObj = result[i]\r\n     // if(!digitalmargetingObj['deliveryMode'] || digitalmargetingObj['deliveryMode'] == undefined ){\r\n    //    digitalmargetingObj['deliveryMode'] = \"General\"\r\n    //  }\r\n\r\n     // console.log(\"****** digitalmargetingObj   ===== **\"+JSON.stringify(digitalmargetingObj))    \r\n      this.normalFiltereduserListArr.push(digitalmargetingObj)\r\n    }\r\n\r\n\r\n    //  console.log(\"****** this.fetchDigitalmargetingsByFilters   ===== **\"+JSON.stringify(this.normalFiltereduserListArr))      \r\n      this.loading = false;\r\n\r\n  }, (err) => {\r\n    this.normalFiltereduserListArr = []; \r\n    this.loading = false;\r\n    console.log(err);\r\n  });\r\n   \r\n  }\r\n  \r\n  \r\n}\r\n","\r\n<ng-template #enlargedImageModal let-close=\"close\">\r\n  <div class=\"modal-header py-1\">\r\n    <h4 class=\"modal-title headerTitle mb-0\">Enlarged Prescription View</h4>\r\n    \r\n    <button type=\"button\" class=\"close\" (click)=\"closeCustomModal();\">×</button>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n  <img src=\"{{enlargedPic}}\" class=\"para\"/>\r\n</div>\r\n</ng-template>\r\n<ng-template #enlargedPrescriptionModal let-close=\"close\">\r\n  <div class=\"modal-header py-1\">\r\n    <h4 class=\"modal-title headerTitle mb-0\">Enlarged View</h4>\r\n    \r\n    <button type=\"button\" class=\"close\" (click)=\"closeCustomModal2();\">×</button>\r\n</div>\r\n\r\n<div class=\"modal-body\">\r\n  <img src=\"{{enlargedPrescPic}}\" class=\"para\"/>\r\n</div>\r\n</ng-template>\r\n\r\n<div class=\"containerDM\">\r\n \r\n        <form [formGroup]=\"digitalmargetingFormGroup\" class=\"p-2\">\r\n            \r\n        <div formArrayName=\"medicineListItems\"\r\n        *ngFor=\"let medicine of getControls(); let i = index;\">\r\n\r\n                <div [formGroupName]=\"i\">\r\n                  \r\n          <table class=\"table table-bordered table-sm mt-2\">\r\n            <thead>\r\n            <tr>\r\n                <th>Id </th>\r\n                <th>Medicine Name</th>\r\n                <th>Quantity</th>                    \r\n            </tr>\r\n            </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                    <td style=\"width: 10%\">{{i+1}}</td>\r\n                  <td style=\"width: 60%\">\r\n                 \r\n                  <tr >\r\n                      \r\n                      <input   class=\" customwidth form-control\" placeholder=\"Enter Medicine name\" formControlName=\"medicineName\"\r\n                      >\r\n\r\n                    </tr>\r\n                    \r\n              </td>\r\n                  \r\n              <td style=\"width: 30%\">\r\n                <input   class=\"form-control\" formControlName=\"quantity\"\r\n                placeholder=\"Quantity\">\r\n                \r\n              </td>\r\n              \r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n            </div>\r\n\r\n      <div class=\"row text-right ml-2\">\r\n        <i class=\"fa fa-minus-circle customfiltericon m-10\" aria-hidden=\"true\" (click)=\"removeItem(i)\"><span class=\"reducetextforicon\">Remove</span></i>                     \r\n<!--\r\n      <button class=\"btn btn-dark\" (click)=\"removeItem(i)\"> Remove Medicine </button>-->\r\n      </div>\r\n</div>\r\n\r\n<!--Chosen name: {{ digitalmargetingForm.controls.items.controls[i].controls.name.value }} -->\r\n\r\n\r\n\r\n<div class=\"col-md-12 text-right mt-4\">\r\n<i class=\"fa fa-plus-circle customfiltericon m-10\" aria-hidden=\"true\" (click)=\"addItem()\"><span class=\"reducetextforicon\">Add</span></i>    \r\n<!--\r\n<button class=\"btn btn-dark\" (click)=\"addItem()\"> Add More Medicines </button>\r\n-->\r\n</div>\r\n\r\n<div class=\"row \">\r\n  <div class=\"col-md-12 form-group\">\r\n      <label for=\"mobileNumber\" class=\"labelTitles\"><b> Mobile Number</b></label><span class=\"required-asterisk\">*</span>\r\n  </div>\r\n  <div class=\"col-md-12 marginTop\">\r\n          <input class=\"form-control\" [(ngModel)]=\"digitalmargetingObject.mobileNumber\" formControlName=\"mobileNumber\"\r\n          placeholder=\"Enter Mobile Number\">\r\n          \r\n   </div>\r\n   <div class=\"col-md-12 text-right m-2\">\r\n    <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"sendOTP();\"><span class=\"reducetextforicon\" *ngIf=\"!sendOTPflag\">Send OTP</span><span class=\"reducetextforicon\" *ngIf=\"sendOTPflag\">Re-Send OTP</span></button>\r\n   </div>\r\n   \r\n</div>\r\n<p *ngIf=\"!verifyActionStart && sendOTPflag \" class=\"cutomeerrortext\">\r\n                \r\n  <span class=\"redcolor\"> You will receive an OTP in your above mobile shortly, please enter that below and press the verify button to validate that.\r\n   </span>\r\n </p>\r\n     \r\n\r\n<div class=\"row\" *ngIf=\"sendOTPflag\">\r\n  <div class=\"col-md-12 form-group\">\r\n      <label for=\"name\" class=\"labelTitles\"><b>OTP</b></label><span class=\"required-asterisk\">*</span>\r\n  </div>\r\n  <div class=\"col-md-12 marginTop\">\r\n      <input class=\"form-control labelValue\" [(ngModel)]=\"otpEnteredByUser\"  formControlName=\"otpEnteredByUser\"  placeholder=\"Enter OTP\">\r\n  </div>\r\n  <div class=\"col-md-12 text-right m-2\">\r\n    <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"verifyOTP();\">Verify OTP</button>\r\n   </div>\r\n</div>\r\n\r\n<p *ngIf=\"otpVerified && otpEnteredByUser == randomOTP\" class=\"cutomeerrortext\">\r\n                \r\n  <span class=\"redcolor ml-4\"> OTP is verifed successfully </span>\r\n   \r\n </p>\r\n     \r\n\r\n\r\n\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 form-group\">\r\n                <label for=\"name\" class=\"labelTitles\"><b>Name</b></label><span class=\"required-asterisk\">*</span>\r\n            </div>\r\n            <div class=\"col-md-12 marginTop\">\r\n                <input class=\"form-control labelValue\" [(ngModel)]=\"digitalmargetingObject.name\"  formControlName=\"name\" placeholder=\"Enter name\">\r\n            </div>\r\n        </div>\r\n  \r\n        <div class=\"row\">\r\n                <div class=\"col-md-12 form-group\">\r\n                    <label for=\"email\" class=\"labelTitles\"><b>Email</b></label>\r\n                </div>\r\n                <div class=\"col-md-12 marginTop\">\r\n                        <input type=\"email\"  [class.is-invalid] = \"digitalmargetingFormGroup.get('emailId').invalid && digitalmargetingFormGroup.get('emailId').touched\" class=\"form-control\" [(ngModel)]=\"digitalmargetingObject.emailId\" formControlName=\"emailId\"\r\n                        placeholder=\"Enter email\">\r\n                 </div>\r\n            </div>\r\n        \r\n       \r\n  \r\n              <div style=\"border: 0; padding: 10;\" class=\"row mt-4\">\r\n                <div class=\"col-md-12 form-group\">\r\n                  <label for=\"email\" class=\"labelTitlesDM\"><b>Upload your prescription <span *ngIf=\"customerOldPrescriptionListArr && customerOldPrescriptionListArr.length > 0\" > <br>OR<br> just click a row on an old prescription from the list below </span> </b></label>\r\n              </div>\r\n                <div class=\"col-md-12 form-group marginTop\" (click)=\"enlargePic()\" >\r\n                \r\n                <div class=\"profile-image-wrapper\"  >\r\n                  <div class=\"profile-image\"  >\r\n\r\n                    <!--[style.backgroundImage]=\"getPhoto('prescription') \" src=\"{{prescriptionSource}}\" -->\r\n                    <img id=\"output\" class=\"profile-image\" />\r\n                    <span class=\"edit-icon\" (click)=\"capturePhoto(null,'prescription')\">\r\n                      <!-- (click)=\"enlargePic()\"\r\n                      <i class=\"fa fa-plus\" aria-hidden=\"true\" *ngIf=\"mode=='add'\" ></i>\r\n                      <i class=\"fa fa-pencil-square-o\" *ngIf=\"mode=='edit'\" aria-hidden=\"true\" ></i>\r\n                     -->\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <input type=\"file\" name=\"files[]\" id=\"file-selector\" accept=\".jpg, .jpeg, .png\" (change)=\"capturePhoto($event,'prescription')\" />\r\n              </div>\r\n              </div>\r\n\r\n              <p></p>\r\n             \r\n\r\n             <div class=\"modal-footer\">\r\n                <button [disabled]=\"!digitalmargetingFormGroup.valid\" type=\"button\" class=\"btn btn-primary m-10\"\r\n                    (click)=\"save();\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-primary m-10\" (click)=\"closeMainModal();\">Cancel</button>\r\n            </div>\r\n        \r\n        <p *ngIf=\"submitAttempt\" class=\"cutomeerrortext\">\r\n                \r\n         <span class=\"redcolor ml-2\"><i class=\"fa fas fa-exclamation\"></i><b>&nbsp;Fix The Error : </b></span> {{form_fill_failure_msg}}\r\n          \r\n        </p>\r\n            \r\n\r\n</form>\r\n      \r\n\r\n\r\n\r\n<div class=\"my-container\">\r\n  <ng-template #customLoadingTemplate>\r\n    \r\n            Please wait..\r\n    \r\n</ng-template>\r\n  <ngx-loading [show]=\"loading\" [config]=\"{ primaryColour: 'blue',secondaryColour:'red',fullScreenBackdrop:false}\" [template]=\"customLoadingTemplate\"></ngx-loading>\r\n</div>\r\n\r\n\r\n\r\n\r\n<!--jw-pagination [items]=\"items\" (changePage)=\"onChangePage($event)\"></jw-pagination-->\r\n\r\n\r\n\r\n\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\n\r\nimport { PageHeaderModule } from './../../shared';\r\n//import { LoadingModule } from 'ngx-loading';\r\n//import {NgxToggleModule} from \"ngx-toggle\";\r\nimport { UiSwitchModule } from 'ngx-toggle-switch';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { FlatpickrModule } from 'angularx-flatpickr';\r\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\r\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\r\nimport {NgxPaginationModule} from 'ngx-pagination';\r\n\r\nimport { DigitalmargetingComponent } from './digitalmargeting.component';\r\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\r\nimport { DigitalmargetingRoutingModule } from './digitalmargeting-routing.module';\r\n//import {DataTableModule, SharedModule, InputTextModule} from 'primeng/primeng';\r\n//import {PaginatorModule} from 'primeng/paginator';\r\n//import {DropdownModule} from 'primeng/dropdown';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AutocompleteLibModule,\r\n    NgxPaginationModule,\r\n    DigitalmargetingRoutingModule,\r\n    FormsModule,\r\n    PageHeaderModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.wanderingCubes,\r\n      backdropBackgroundColour: 'rgba(0,0,0,0.1)', \r\n      backdropBdigitalmargetingRadius: '4px',\r\n      primaryColour: '#ffffff', \r\n      secondaryColour: '#ffffff', \r\n      tertiaryColour: '#ffffff'\r\n  }),\r\n    UiSwitchModule,\r\n    NgbModule.forRoot(),\r\n  //  DropdownModule,\r\n  //PaginatorModule,\r\n    FlatpickrModule.forRoot(),\r\n    CalendarModule.forRoot({\r\n      provide: DateAdapter,\r\n      useFactory: adapterFactory\r\n    }),\r\n  ],\r\n  declarations: [DigitalmargetingComponent]\r\n})\r\nexport class DigitalmargetingModule { }\r\n"],"sourceRoot":"webpack:///"}